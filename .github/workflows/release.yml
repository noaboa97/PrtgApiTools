# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    permissions: 
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Update Manifest
        run: .\Tools\Update-Manifest.ps1

      - name: Load Module
        run: Import-Module .\PrtgApiTools.psm1
      
      
      - name: Checkout DocuPS
        uses: actions/checkout@v5
        with:
          repository: noaboa97/DocuPS
          path: ../DocuPS

      - name: Run DocuPS
        run: |
          Import-Module ..\DocuPS\DocuPS.psm1
          ConvertTo-Md -ModuleName PrtgApiTools -FileName "Readme.md" -Type Module
          
      - name: Push Back Changes
        run: | 
          git config user.name "github-actions [bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto updating Manifest & Readme"
          git push
          
      - name: Get Version
        run: echo "VERSION=$((Import-Localizeddata -Filename PrtgApiTools.psd1 -BaseDirectory .\).ModuleVersion)" >> $Env:GITHUB_ENV

      - name: Create Release folder
        run: New-Item ..\Release -Type Directory
        
      - name: Compress
        run: Compress-Archive .\* -DestinationPath ..\Release\PrtgApiTools-${{ env.Version }}.zip

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ..\Release\PrtgApiTools.Zip
          tag: ${{ env.Version }}
          allowUpdates: "true"
