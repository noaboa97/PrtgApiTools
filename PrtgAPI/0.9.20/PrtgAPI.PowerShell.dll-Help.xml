<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <!-- Cmdlet: Start-AutoDiscovery -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Start-AutoDiscovery</command:name>
      <command:verb>Start</command:verb>
      <command:noun>AutoDiscovery</command:noun>
      <maml:description>
        <maml:para>Auto-discovers sensors on a PRTG Device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Start-AutoDiscovery cmdlet initiates an auto-discovery task against a PRTG Device. When auto-discovery runs, PRTG will attempt to automatically create sensors under the device based on a series of built-in templates. If a device is not receptive to a particular sensor type, the sensor is not created.</maml:para>
      <maml:para>By default, all device templates known to PRTG will be used for performing the auto-discovery. Templates can be limited those that match one more specified expressions by specifying the -TemplateName parameter. If one or more device templates have already been retrieved via a previous call to Get-DeviceTemplate, these can alternatively be passed to the -Template parameter</maml:para>
      <maml:para>Sensors have a built-in flag to indicate whether they were created by auto-discovery. If auto-discovery identifies a sensor type that is applicable to your device that already has a copy of that sensor that was created manually, auto-discovery will ignore your existing sensor and create a new one alongside it. Because of this, it is always recommended to use auto-discovery based sensors to allow for running auto-discovery multiple times without causing duplicates.</maml:para>
      <maml:para>If more than 10 auto-discovery tasks are specified, PRTG will queue the additional tasks to limit the load on the system.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Start-AutoDiscovery</maml:name>
        <!-- Parameter: TemplateName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>TemplateName</maml:name>
          <maml:description>
            <maml:para>One or more expressions used to identify device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to perform an auto-discovery upon.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TargetSet -->
      <command:syntaxItem>
        <maml:name>Start-AutoDiscovery</maml:name>
        <!-- Parameter: Template -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Template</maml:name>
          <maml:description>
            <maml:para>One or more device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DeviceTemplate[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DeviceTemplate[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to perform an auto-discovery upon.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Start-AutoDiscovery</maml:name>
        <!-- Parameter: TemplateName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>TemplateName</maml:name>
          <maml:description>
            <maml:para>One or more expressions used to identify device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="DeviceId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the device to perform an auto-discovery upon.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TargetManualSet -->
      <command:syntaxItem>
        <maml:name>Start-AutoDiscovery</maml:name>
        <!-- Parameter: Template -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Template</maml:name>
          <maml:description>
            <maml:para>One or more device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DeviceTemplate[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DeviceTemplate[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="DeviceId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the device to perform an auto-discovery upon.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to perform an auto-discovery upon.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="DeviceId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the device to perform an auto-discovery upon.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="DeviceId">
        <maml:name>DeviceId</maml:name>
        <maml:description>
          <maml:para>ID of the device to perform an auto-discovery upon.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: TemplateName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>TemplateName</maml:name>
        <maml:description>
          <maml:para>One or more expressions used to identify device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Template -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Template</maml:name>
        <maml:description>
          <maml:para>One or more device templates to use for the auto-discovery. If no templates are specified, only templates enabled on the device will be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DeviceTemplate[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DeviceTemplate[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to perform an auto-discovery upon.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device | Start-AutoDiscovery</dev:code>
        <dev:remarks>
          <maml:para>Run auto-discovery against all devices.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Start-AutoDiscovery *wmi*</dev:code>
        <dev:remarks>
          <maml:para>Run auto-discovery against all devices named "dc-1" using WMI specific device templates</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $templates = Get-DeviceTemplate *wmi*

C:\&gt; Get-Device dc-1 | Start-AutoDiscovery $templates</dev:code>
        <dev:remarks>
          <maml:para>Run auto-discovery against all devices named "dc-1" using WMI specific device templates</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Start-AutoDiscovery -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Run an auto-discovery against the device with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#auto-discovery-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-DeviceTemplate</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Channel -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Channel</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Channel</command:noun>
      <maml:description>
        <maml:para>Retrieves all channels of a sensor.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Channel cmdlet retrieves all channels beloninging to a PRTG Sensor.</maml:para>
      <maml:para>Get-Channel uses APIs unsupported by Paessler to retrieve advanced channel settings (limits, thresholds, etc). For each channel a separate request must be made in order to retrieve advanced channel details, in addition to a separate single request that retrieves general information for all channels. As such, in order to retrieve information on n channels, n+1 requests must be made. Keep this in mind when piping sensors with a large number of channels, or piping a large number of sensors.</maml:para>
      <maml:para>If a name is specified, Get-Channel filters the results to those that match the name expression. Due to limitations of the PRTG API, Get-Channel filters its results post-request. If the specified sensor is read only for the active PRTG user, certain channel properties will not be displayed.</maml:para>
      <maml:para>Get-Channel does not include the Downtime channel present on all sensors (Channel ID -4) as this sensor does not contain a value in table view. In addition, due to limitations of the PRTG API any channels configured with the setting "Hide from Tables" will not be returned by Get-Channel</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-Channel</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the channels retrieved to only those that match a specific name.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The Sensor to retrieve channels for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Filter the channels retrieved to only those that match a specific ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-Channel</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the channels retrieved to only those that match a specific name.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SensorId -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>SensorId</maml:name>
          <maml:description>
            <maml:para>The ID of the Sensor to retrieve channels for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Filter the channels retrieved to only those that match a specific ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The Sensor to retrieve channels for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SensorId -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>SensorId</maml:name>
        <maml:description>
          <maml:para>The ID of the Sensor to retrieve channels for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the channels retrieved to only those that match a specific name.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Filter the channels retrieved to only those that match a specific ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The Sensor to retrieve channels for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The ID of the Sensor to retrieve channels for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Channel -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Channel</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpuloadsensor | Get-Channel</dev:code>
        <dev:remarks>
          <maml:para>Get all channels from all Windows CPU Load sensors.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmimemorysensor | Get-Channel Avail*</dev:code>
        <dev:remarks>
          <maml:para>Get all channels whose names start with "Avail" from all Windows Memory sensors.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Channel -SensorId 2001</dev:code>
        <dev:remarks>
          <maml:para>Get all channels from the sensor with ID 2001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Channels#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ChannelProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-ChannelProperty -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-ChannelProperty</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ChannelProperty</command:noun>
      <maml:description>
        <maml:para>Modifies the value of a PRTG channel property.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-ChannelProperty cmdlet modifies properties and settings of PRTG Channels. All supported properties that can be modified are typesafe, using the type of the property on the Channel object returned from Get-Channel.</maml:para>
      <maml:para>When a value is specified, Set-ChannelProperty will attempt to parse the value into its expected type. If the type cannot be parsed, an exception will be thrown indicating the type of the object specified and the type that was expected. In the case of enums, Set-ChannelProperty will list all valid values of the target type so that you may know exactly how to interface with the specified property. In the event you wish to modify multiple properties in a single request, Set-ChannelProperty provides dynamically generated parameters for each property supported by PrtgAPI.</maml:para>
      <maml:para>In the event that a property is specified that has a dependency on another property ebing set (such as UpperErrorLimit requiring LimitsEnabled be $true) Set-ChannelProperty will automatically assign the required values such that the original property may be correctly enabled. If the parent of a property is set to the opposite of a child property's required value PrtgAPI will automatically remove the value specified on the child as well. For example, if LimitsEnabled is set to $false, all error and warning limit related properties will be set to $null. If LimitsEnabled is later set to $true, you will need to repopulate the values of all error and warning limit properties.</maml:para>
      <maml:para>For a list of all settings currently supported by Set-ChannelProperty, see Get-Help about_ChannelSettings.</maml:para>
      <maml:para>By default, Set-ChannelProperty will operate in Batch Mode. In Batch Mode, Set-ChannelProperty will not execute a request for each individual object, but will rather store each item in a queue to modify channel properties for all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Set-ChannelProperty will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Set-ChannelProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Property of the channel to set.</maml:para>
            <maml:para>Possible values: Name, Unit, ValueLookup, ScalingMultiplication, ScalingDivision, ShowInGraph, ShowInTable, ColorMode, LineColor, LineWidth, HistoricValueMode, DecimalMode, DecimalPlaces, SpikeFilterEnabled, SpikeFilterMax, SpikeFilterMin, PercentMode, PercentValue, LimitsEnabled, UpperErrorLimit, UpperWarningLimit, LowerErrorLimit, LowerWarningLimit, ErrorLimitMessage, WarningLimitMessage</maml:para>
          </maml:description>
          <command:parameterValue required="true">ChannelProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ChannelProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ValueLookup</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ScalingMultiplication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ScalingDivision</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ShowInGraph</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ShowInTable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ColorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LineColor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LineWidth</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HistoricValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DecimalMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DecimalPlaces</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterEnabled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterMax</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterMin</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentValue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LimitsEnabled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpperErrorLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpperWarningLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LowerErrorLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LowerWarningLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ErrorLimitMessage</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarningLimitMessage</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Value to set the property to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Channel</maml:name>
          <maml:description>
            <maml:para>Channel to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Channel</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Channel</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>Set-ChannelProperty</maml:name>
        <!-- Parameter: Channel -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Channel</maml:name>
          <maml:description>
            <maml:para>Channel to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Channel</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Channel</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ColorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ColorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DecimalMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DecimalMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, All, Custom</maml:para>
          </maml:description>
          <command:parameterValue required="true">DecimalMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DecimalMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Custom</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DecimalPlaces -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DecimalPlaces</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ErrorLimitMessage -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ErrorLimitMessage</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HistoricValueMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HistoricValueMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Average, Minimum, Maximum</maml:para>
          </maml:description>
          <command:parameterValue required="true">HistoricValueMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HistoricValueMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Average</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minimum</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Maximum</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LimitsEnabled -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LimitsEnabled</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LineColor -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineColor</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LineWidth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineWidth</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LowerErrorLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LowerErrorLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LowerWarningLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LowerWarningLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PercentMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PercentMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Actual, PercentOfMax</maml:para>
          </maml:description>
          <command:parameterValue required="true">PercentDisplay</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PercentDisplay</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Actual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentOfMax</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PercentValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PercentValue</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScalingDivision -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ScalingDivision</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScalingMultiplication -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ScalingMultiplication</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ShowInGraph -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowInGraph</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ShowInTable -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowInTable</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterEnabled -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterEnabled</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterMax -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterMax</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterMin -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterMin</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Unit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Unit</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpperErrorLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpperErrorLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpperWarningLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpperWarningLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueLookup -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueLookup</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningLimitMessage -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningLimitMessage</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ChannelProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Property of the channel to set.</maml:para>
            <maml:para>Possible values: Name, Unit, ValueLookup, ScalingMultiplication, ScalingDivision, ShowInGraph, ShowInTable, ColorMode, LineColor, LineWidth, HistoricValueMode, DecimalMode, DecimalPlaces, SpikeFilterEnabled, SpikeFilterMax, SpikeFilterMin, PercentMode, PercentValue, LimitsEnabled, UpperErrorLimit, UpperWarningLimit, LowerErrorLimit, LowerWarningLimit, ErrorLimitMessage, WarningLimitMessage</maml:para>
          </maml:description>
          <command:parameterValue required="true">ChannelProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ChannelProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Name</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ValueLookup</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ScalingMultiplication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ScalingDivision</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ShowInGraph</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ShowInTable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ColorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LineColor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LineWidth</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HistoricValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DecimalMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DecimalPlaces</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterEnabled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterMax</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SpikeFilterMin</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentValue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LimitsEnabled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpperErrorLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpperWarningLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LowerErrorLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LowerWarningLimit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ErrorLimitMessage</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarningLimitMessage</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Value to set the property to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ChannelId</maml:name>
          <maml:description>
            <maml:para>ID of the channel to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SensorId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SensorId</maml:name>
          <maml:description>
            <maml:para>ID of the channel's parent sensor.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ChannelProperty</maml:name>
        <!-- Parameter: ChannelId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ChannelId</maml:name>
          <maml:description>
            <maml:para>ID of the channel to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SensorId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SensorId</maml:name>
          <maml:description>
            <maml:para>ID of the channel's parent sensor.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ColorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ColorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DecimalMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DecimalMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, All, Custom</maml:para>
          </maml:description>
          <command:parameterValue required="true">DecimalMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DecimalMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Custom</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DecimalPlaces -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DecimalPlaces</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ErrorLimitMessage -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ErrorLimitMessage</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HistoricValueMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HistoricValueMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Average, Minimum, Maximum</maml:para>
          </maml:description>
          <command:parameterValue required="true">HistoricValueMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HistoricValueMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Average</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minimum</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Maximum</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LimitsEnabled -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LimitsEnabled</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LineColor -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineColor</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LineWidth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineWidth</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LowerErrorLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LowerErrorLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LowerWarningLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LowerWarningLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PercentMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PercentMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Actual, PercentOfMax</maml:para>
          </maml:description>
          <command:parameterValue required="true">PercentDisplay</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PercentDisplay</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Actual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PercentOfMax</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PercentValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PercentValue</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScalingDivision -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ScalingDivision</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScalingMultiplication -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ScalingMultiplication</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ShowInGraph -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowInGraph</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ShowInTable -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowInTable</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterEnabled -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterEnabled</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterMax -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterMax</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SpikeFilterMin -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpikeFilterMin</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Unit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Unit</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpperErrorLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpperErrorLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpperWarningLimit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpperWarningLimit</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueLookup -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueLookup</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningLimitMessage -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningLimitMessage</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Channel -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Channel</maml:name>
        <maml:description>
          <maml:para>Channel to set the properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Channel</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Channel</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SensorId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>SensorId</maml:name>
        <maml:description>
          <maml:para>ID of the channel's parent sensor.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ChannelId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ChannelId</maml:name>
        <maml:description>
          <maml:para>ID of the channel to set the properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>Property of the channel to set.</maml:para>
          <maml:para>Possible values: Name, Unit, ValueLookup, ScalingMultiplication, ScalingDivision, ShowInGraph, ShowInTable, ColorMode, LineColor, LineWidth, HistoricValueMode, DecimalMode, DecimalPlaces, SpikeFilterEnabled, SpikeFilterMax, SpikeFilterMin, PercentMode, PercentValue, LimitsEnabled, UpperErrorLimit, UpperWarningLimit, LowerErrorLimit, LowerWarningLimit, ErrorLimitMessage, WarningLimitMessage</maml:para>
        </maml:description>
        <command:parameterValue required="true">ChannelProperty</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ChannelProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Name</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ValueLookup</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ScalingMultiplication</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ScalingDivision</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ShowInGraph</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ShowInTable</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ColorMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LineColor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LineWidth</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HistoricValueMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DecimalMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DecimalPlaces</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SpikeFilterEnabled</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SpikeFilterMax</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SpikeFilterMin</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PercentMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PercentValue</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LimitsEnabled</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpperErrorLimit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpperWarningLimit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LowerErrorLimit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LowerWarningLimit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ErrorLimitMessage</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WarningLimitMessage</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>Value to set the property to.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Unit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Unit</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueLookup -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueLookup</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScalingMultiplication -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ScalingMultiplication</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScalingDivision -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ScalingDivision</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ShowInGraph -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ShowInGraph</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ShowInTable -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ShowInTable</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ColorMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ColorMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Automatic, Manual</maml:para>
        </maml:description>
        <command:parameterValue required="true">AutoMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.AutoMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: LineColor -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LineColor</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LineWidth -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LineWidth</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: HistoricValueMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistoricValueMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Average, Minimum, Maximum</maml:para>
        </maml:description>
        <command:parameterValue required="true">HistoricValueMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HistoricValueMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Average</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Minimum</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Maximum</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DecimalMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DecimalMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Automatic, All, Custom</maml:para>
        </maml:description>
        <command:parameterValue required="true">DecimalMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DecimalMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Custom</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DecimalPlaces -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DecimalPlaces</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SpikeFilterEnabled -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SpikeFilterEnabled</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SpikeFilterMax -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SpikeFilterMax</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SpikeFilterMin -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SpikeFilterMin</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PercentMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PercentMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Actual, PercentOfMax</maml:para>
        </maml:description>
        <command:parameterValue required="true">PercentDisplay</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PercentDisplay</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Actual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PercentOfMax</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PercentValue -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PercentValue</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LimitsEnabled -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LimitsEnabled</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UpperErrorLimit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpperErrorLimit</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UpperWarningLimit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpperWarningLimit</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LowerErrorLimit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LowerErrorLimit</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LowerWarningLimit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LowerWarningLimit</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ErrorLimitMessage -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ErrorLimitMessage</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WarningLimitMessage -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WarningLimitMessage</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Channel</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Channel to set the properties of.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpuloadsensor | Get-Channel Total | Set-ChannelProperty UpperErrorLimit 90</dev:code>
        <dev:remarks>
          <maml:para>Set the upper error limit of the "Total" channel of all WMI CPU Load sensors to 90. Will also set LimitsEnabled to $true</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $channels = Get-Sensor -Tags wmicpuloadsensor | Get-Channel Total

C:\&gt; $channels | Set-ChannelProperty -UpperErrorLimit 80 -LowerErrorLimit 20</dev:code>
        <dev:remarks>
          <maml:para>Set the value of both the UpperErrorLimit and LowerErrorLimit in a single request.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Property-Manipulation#modifying-properties-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Help ChannelSettings</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Channel</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ObjectProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Add-Device -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-Device</command:name>
      <command:verb>Add</command:verb>
      <command:noun>Device</command:noun>
      <maml:description>
        <maml:para>Adds a new device to a PRTG Group or Probe.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-Device cmdlet adds a new device to a PRTG Group or Probe. When adding a new device, Add-Device supports two methods of specifying the parameters required to create the object. For basic scenarios where you wish to inherit all settings from the parent object, the Name, Host and auto-discovery method can all be specified as arguments directly to Add-Device. If a -Host is not specified, Add-Device will automatically use the -Name as the device's hostname. If -AutoDiscover is specified, Add-Device will perform an Automatic auto-discovery.</maml:para>
      <maml:para>For more advanced scenarios where you wish to specify more advanced parameters (such as the Internet Protocol version used to communicate with the device) a NewDeviceParameters object can instead be created with the New-DeviceParameters cmdlet. When the parameters object is passed to Add-Device, PrtgAPI will validate that all mandatory parameter fields contain values. If a mandatory field is missing a value, Add-Sensor will throw an InvalidOperationException, listing the field whose value was missing.</maml:para>
      <maml:para>By default, Add-Device will attempt to resolve the created device to a Device object. As PRTG does not return the ID of the created object, PrtgAPI identifies the newly created device by comparing the devices under the parent object before and after the new device is created. While this is generally very reliable, in the event something or someone else creates another new device directly under the target object with the same Name, that object will also be returned in the objects resolved by Add-Device. If you do not wish to resolve the created device, this behavior can be disabled by specifying -Resolve:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Add-Device</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NewDeviceParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.NewDeviceParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The parent object to create an object under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BasicSet -->
      <command:syntaxItem>
        <maml:name>Add-Device</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to use for the device. If a Host is not specified, this value will be used as the hostname as well.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Host</maml:name>
          <maml:description>
            <maml:para>The IPv4 Address/HostName to use for monitoring this device. If this value is not specified, the Name will be used as the hostname.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The parent object to create an object under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AutoDiscover -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscover</maml:name>
          <maml:description>
            <maml:para>Whether to perform an Automatic auto-discovery on the newly created device.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Template -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Template</maml:name>
          <maml:description>
            <maml:para>One or more wildcards specifying the device templates to used when performing the auto-discovery. If no templates are specified, all templates will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Destination -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
        <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.GroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Parameters -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NewDeviceParameters</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.NewDeviceParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name to use for the device. If a Host is not specified, this value will be used as the hostname as well.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Host -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Host</maml:name>
        <maml:description>
          <maml:para>The IPv4 Address/HostName to use for monitoring this device. If this value is not specified, the Name will be used as the hostname.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AutoDiscover -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AutoDiscover</maml:name>
        <maml:description>
          <maml:para>Whether to perform an Automatic auto-discovery on the newly created device.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Template -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Template</maml:name>
        <maml:description>
          <maml:para>One or more wildcards specifying the device templates to used when performing the auto-discovery. If no templates are specified, all templates will be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.GroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe contoso | Add-Device dc-1</dev:code>
        <dev:remarks>
          <maml:para>Add a new device named "dc-1" to the Contoso probe, using "dc-1" as its hostname, without performing an automatic auto-discovery.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 2305 | Add-Device exch-1 192.168.0.2 -AutoDiscover</dev:code>
        <dev:remarks>
          <maml:para>Add a device named "exch-1" to the group with ID 2305, using 192.168.0.2 as its IP Address and performing an automatic auto-discovery after the device is created.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters sql-1 "2001:db8::ff00:42:8329"
C:\&gt; $params.IPVersion = "IPv6"

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Add a device named sql-1 using an IPv6 Address to the probe Contoso probe.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#devices-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Device -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Device</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Device</command:noun>
      <maml:description>
        <maml:para>Retrieves devices from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Device cmdlet retrieves devices from a PRTG Server. Devices hold sensors used to monitor a particular system. Get-Device provides a variety of methods of filtering the devices requested from PRTG, including by device name, ID and tags, as well as parent probe/group. Multiple filters can be used in conjunction to futher limit the number of results returned. Device properties that do not contain explicitly defined parameters on Get-Device can be specified as dynamic parameters, allowing one or more values to be specified of the specified type. All string parameters support the use of wildcards.</maml:para>
      <maml:para>For scenarios in which you wish to exert finer grained control over search filters, a custom SearchFilter object can be created by specifying the field name, condition and value to filter upon. For information on properties that can be filtered upon, see New-SearchFilter.</maml:para>
      <maml:para>Get-Device provides two parameter sets for filtering objects by tags. When filtering for devices that contain one of several tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for devices containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      <maml:para>When requesting devices belonging to a specified group, PRTG will not return any objects that may be present under further child groups of the parent group. To work around this, by default Get-Device will automatically recurse child groups if it detects the initial device request did not return all items (as evidenced by the parent group's TotalDevices property. If you do not wish Get-Device to recurse child groups, this behavior can be overridden by specifying -Recurse:$false.</maml:para>
      <maml:para>The Device objects returned from Get-Device can be piped to a variety of other cmdlets for further processing, including Get-Sensor, wherein the ID of each device will be used to filter for its parent sensors.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: LogicalAndTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Device</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Favorite -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Favorite</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to retrieve devices for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Host</maml:name>
          <maml:description>
            <maml:para>Filter the response to devices with a certain HostName/IP Address. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Location -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Location</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The probe to retrieve devices for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: LogicalOrTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Device</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Favorite -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Favorite</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to retrieve devices for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Host</maml:name>
          <maml:description>
            <maml:para>Filter the response to devices with a certain HostName/IP Address. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Location -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Location</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The probe to retrieve devices for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tag -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Group -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>The group to retrieve devices for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Probe -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Probe</maml:name>
        <maml:description>
          <maml:para>The probe to retrieve devices for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Host -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Host</maml:name>
        <maml:description>
          <maml:para>Filter the response to devices with a certain HostName/IP Address. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Recurse -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Only retrieve objects that match a specific status.</maml:para>
          <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
        </maml:description>
        <command:parameterValue required="true">Status[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Status[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tag -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Access -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Access</maml:name>
        <maml:description>
          <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
        </maml:description>
        <command:parameterValue required="true">Access[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Access[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Dependency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Dependency</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
        </maml:description>
        <command:parameterValue required="true">Priority[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Priority[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UpSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownAcknowledgedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownAcknowledgedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PartialDownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PartialDownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WarningSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WarningSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PausedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PausedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnusualSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnusualSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnknownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnknownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Favorite -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Favorite</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Schedule -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Schedule</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comments -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comments</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Condition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Condition</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BaseType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseType</maml:name>
        <maml:description>
          <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.BaseType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentId</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Location -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Location</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Position -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Position</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The group to retrieve devices for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The probe to retrieve devices for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Device -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1</dev:code>
        <dev:remarks>
          <maml:para>Get all devices named "dc-1" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device *exch*</dev:code>
        <dev:remarks>
          <maml:para>Get all devices whose name contains "exch" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 2000</dev:code>
        <dev:remarks>
          <maml:para>Get the device with ID 2000</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe contoso | Get-Device</dev:code>
        <dev:remarks>
          <maml:para>Get all devices from the probe named "contoso"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Tag C_OS_Win,exch</dev:code>
        <dev:remarks>
          <maml:para>Get all devices that have the tag "C_OS_Win" or "exch"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Tags ny,C_OS_Win</dev:code>
        <dev:remarks>
          <maml:para>Get all Windows servers in New York</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Count 1</dev:code>
        <dev:remarks>
          <maml:para>Get only 1 device from PRTG.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Location "*new york*"</dev:code>
        <dev:remarks>
          <maml:para>Get all devices whose location contains "new york" using a dynamic parameter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; flt location contains "new york" | Get-Device</dev:code>
        <dev:remarks>
          <maml:para>Get all devices whose location contains "new york" using a SearchFilter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 2001 | Get-Device -Recurse:$false</dev:code>
        <dev:remarks>
          <maml:para>Get all devices directly under the specified group, ignoring all child groups.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Devices#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SearchFilter</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Device</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-DeviceNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-DeviceNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>DeviceNode</command:noun>
      <maml:description>
        <maml:para>Creates a new DeviceNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-DeviceNode cmdlet creates a new DeviceNode object for modelling a PRTG Tree. Each DeviceNode object encapsulates a single Device object along with any optional children (such as SensorNode and TriggerNode items).</maml:para>
      <maml:para>New-DeviceNode supports many different ways of being invoked, however at its core there are two pieces of information that can be provided to the cmdlet: information that identifies the Device to encapsulate, and the nodes that should be used as the children of the node.</maml:para>
      <maml:para>If an existing Device object retrieved from the Get-Device cmdlet is not specified or piped to the -Value parameter, one or more of -Name or -Id must be specified to identify the object to encapsulate. If multiple values are returned as a result of these parameters, a unique DeviceNode object will be created for each item.</maml:para>
      <maml:para>Child nodes to this node can either be specified via the pipeline, or declaratively via a ScriptBlock. When a ScriptBlock defining children is specified, DeviceNode will incorporate a copy of the children in each DeviceNode that is produced. While each DeviceNode will end up with a unique copy of all its descendant nodes, the underlying Value of each nodw will be the same.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-DeviceNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromSet -->
      <command:syntaxItem>
        <maml:name>New-DeviceNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-DeviceNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromManualSet -->
      <command:syntaxItem>
        <maml:name>New-DeviceNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScriptBlock -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A script block that returns the children to use for this node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Children -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Children</maml:name>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 2001 | New-DeviceNode</dev:code>
        <dev:remarks>
          <maml:para>Create a device node from the device with ID 2001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; New-DeviceNode -Id 2001</dev:code>
        <dev:remarks>
          <maml:para>Create a device node from the device with ID 2001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; New-DeviceNode dc*</dev:code>
        <dev:remarks>
          <maml:para>Create a device node for each device whose name starts with "dc".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; DeviceNode -Id 2001 {
&gt;&gt;      SensorNode -Id 1001 {
&gt;&gt;          TriggerNode -ObjectId 1001
&gt;&gt;      }
&gt;&gt;
&gt;&gt;      SensorNode -Id 1002 {
&gt;&gt;          TriggerNode -ObjectId 1002
&gt;&gt;      }
&gt;&gt; }</dev:code>
        <dev:remarks>
          <maml:para>Create a new device node from the object with ID 2001 with child nodes for the sensors with IDs 1001 and 1002, each of which contains child nodes for each of their descendant notification triggers.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>New-Sensor -Id 1001,1002 | New-DeviceNode -Id 2001</dev:code>
        <dev:remarks>
          <maml:para>Create a new device node from the object with ID 2001 with child nodes for the sensors with IDs 1001 and 1002.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ProbeNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PropertyNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-DeviceParameters -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-DeviceParameters</command:name>
      <command:verb>New</command:verb>
      <command:noun>DeviceParameters</command:noun>
      <maml:description>
        <maml:para>Creates a new set of device parameters for creating a brand new device under a group or probe.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-DeviceParameters cmdlet creates a set of parameters for adding a brand new device to PRTG. Device parameter objects returned from New-DeviceParameters allow specifying a variety of device specific configuration details including Internet Protocol version and auto-discovery settings at the time of object creation.</maml:para>
      <maml:para>All devices must have a Name and Host property specified. If a Host (IP Address/HostName) is not specified in the call to New-DeviceParameters, PrtgAPI will automatically use the Name</maml:para>
      <maml:para>Note that not all device parameters (such as settings that can be inherited from the parent group) can be specified with PrtgAPI at the time of object creation. If you wish to modify such properties, this can be achieved after the device has been created via the Set-ObjectProperty cmdlet.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>New-DeviceParameters</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to give the new device.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Host</maml:name>
          <maml:description>
            <maml:para>The hostname or IP Address to use for the new device. If no value is specified, the name will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name to give the new device.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Host -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Host</maml:name>
        <maml:description>
          <maml:para>The hostname or IP Address to use for the new device. If no value is specified, the name will be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters dc-1

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new device named "dc-1" with hostname "dc-1" under the Contoso probe.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters exch-1 "2001:db8::ff00:42:8329"
C:\&gt; $params.IPVersion = "IPv6"

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new device named "dc-2" with an IPv6 address, specifying the Internet Protocol as IPv6.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters dc-1
C:\&gt; $params.AutoDiscoveryMode = "AutomaticTemplate"
C:\&gt; $params.DeviceTemplates = Get-DeviceTemplate *wmi*

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new device named "dc-1" that performs an auto-discovery for WMI sensors only.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters dc-1

C:\&gt; Get-Probe contoso | Add-Device $params -PassThru | Set-ObjectProperty Location "23 Fleet Street"</dev:code>
        <dev:remarks>
          <maml:para>Create a new device named "dc-1" and then set its location.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#device-creation-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-DeviceTemplate</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ObjectProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-DeviceTemplate -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-DeviceTemplate</command:name>
      <command:verb>Get</command:verb>
      <command:noun>DeviceTemplate</command:noun>
      <maml:description>
        <maml:para>Retrieves all auto-discovery templates supported by a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-DeviceTemplate cmdlet retrieves all device templates supported by a specified object, allowing you to limit the scope of an auto-discovery operation when creating a new device to a specified set of device types. If no -Device is specified, by default Get-DeviceTemplate will retrieve device templates supported by the Core Probe Device (Object ID: 40). Practically speaking, all devices should support all device templates; as such, there should generally be no need to specify an object.</maml:para>
      <maml:para>Results returned by Get-DeviceTemplate can be filtered by specifying one or more expressions to the -Name parameter. Device template results will be filtered to those that contain a specified expression anywhere in their Name or Value properties.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-DeviceTemplate</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filters results to those whose name contains the specified expression.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The object to retrieve device templates from. If no object is specified, PrtgAPI will retrieve all templates supported by the Core Probe Device (ID 40)</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The object to retrieve device templates from. If no object is specified, PrtgAPI will retrieve all templates supported by the Core Probe Device (ID 40)</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filters results to those whose name contains the specified expression.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve device templates from. If no object is specified, PrtgAPI will retrieve all templates supported by the Core Probe Device (ID 40)</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: DeviceTemplate -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.DeviceTemplate</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $templates = Get-DeviceTemplate *wmi*

C:\&gt; Get-Device -Id 1001 | Start-AutoDiscovery $templates</dev:code>
        <dev:remarks>
          <maml:para>Perform an auto-discovery for WMI sensors on the device with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-DeviceParameters dc-1
C:\&gt; $params.AutoDiscoveryMode = "AutomaticTemplate"
C:\&gt; $params.DeviceTemplates = Get-DeviceTemplate *wmi*

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new device named "dc-1" that performs an auto-discovery for WMI sensors only.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#auto-discovery-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-AutoDiscovery</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Device</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Test-ErrorStatus -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Test-ErrorStatus</command:name>
      <command:verb>Test</command:verb>
      <command:noun>ErrorStatus</command:noun>
      <maml:description>
        <maml:para>Simulates an error status on a PRTG Sensor.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Simulate-ErrorStatus cmdlet forces a PRTG Sensor to enter an error (Down) state. When an object is in a simulated error status, it will display a message indicating it is in a simulated error state. Any object put into a simulated error status will remain in this state until the object is resumed via the Resume-Object cmdlet or via the PRTG UI. Even if an object in a simulated error state is paused, it will return to this state when the object is unpaused.</maml:para>
      <maml:para>By default, Simulate-ErrorStatus will operate in Batch Mode. In Batch Mode, Simulate-ErrorStatus will not execute a request for each individual object, but will rather store each item in a queue to simulate errors for all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Simulate-ErrorStatus will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Test-ErrorStatus</maml:name>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to simulate an error status on.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Test-ErrorStatus</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SensorId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the sensor to simulate an error status on.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The sensor to simulate an error status on.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SensorId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the sensor to simulate an error status on.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SensorId">
        <maml:name>SensorId</maml:name>
        <maml:description>
          <maml:para>The ID of the sensor to simulate an error status on.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor to simulate an error status on.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Simulate-ErrorStatus</dev:code>
        <dev:remarks>
          <maml:para>Force the sensor with ID 1001 to enter an error state.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Simulate-ErrorStatus -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Force the sensor with ID 1001 to enter an error state.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/State-Manipulation#simulate-error-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-Object</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-GoPrtgAlias -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-GoPrtgAlias</command:name>
      <command:verb>Set</command:verb>
      <command:noun>GoPrtgAlias</command:noun>
      <maml:description>
        <maml:para>Updates the server alias of the currently active GoPrtg Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-GoPrtgAlias updates the alias of the currently active GoPrtg Server. GoPrtg aliases provide a shorthand for connecting to specific GoPrtg servers when multiple servers are installed in your PowerShell profile. Multiple GoPrtg records may lack aliases as long as they connect to different servers. Otherwise, each GoPrtg server must have a unique alias. If no alias is specified, the alias of the specified server will be removed.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-GoPrtgAlias</maml:name>
        <!-- Parameter: Alias -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The alias to assign to the currently active GoPrtg server. If this value is null or empty, the active server's alias will be removed. If multiple records exist for the active server, a unique alias must be specified.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Alias -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>The alias to assign to the currently active GoPrtg server. If this value is null or empty, the active server's alias will be removed. If multiple records exist for the active server, a unique alias must be specified.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Set-GoPrtgAlias dev</dev:code>
        <dev:remarks>
          <maml:para>Sets the alias of the currently active GoPrtg server to "dev".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Set-GoPrtgAlias</dev:code>
        <dev:remarks>
          <maml:para>Removes the alias of the currently active GoPrtg server.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#modification</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Uninstall-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Update-GoPrtgCredential</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Update-GoPrtgCredential -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Update-GoPrtgCredential</command:name>
      <command:verb>Update</command:verb>
      <command:noun>GoPrtgCredential</command:noun>
      <maml:description>
        <maml:para>Updates the credentials used for the currently active GoPrtg server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Update-GoPrtgCredential cmdlet updates the authentication credentials of the currently active GoPrtg Server. When your PRTG user account password changes, your PassHash can also change too. In this scenario, you can simply run the Update-GoPrtgCredential cmdlet to re-enter your credentials. Update-GoPrtgCredential will then resolve your new PassHash and update the details for the currently active record. Alternatively, you may also update the username of the currently active record, so long as you do not have another record with the same server/username combination in your current PowerShell Profile.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Update-GoPrtgCredential</maml:name>
        <!-- Parameter: Credential -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The new credential to use for the currently active GoPrtg server.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Credential -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>The new credential to use for the currently active GoPrtg server.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Update-GoPrtgCredential</dev:code>
        <dev:remarks>
          <maml:para>Update the credentials of the currently active GoPrtg server.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Update-GoPrtgCredential (New-Credential prtgadmin prtgadmin)</dev:code>
        <dev:remarks>
          <maml:para>Update the credentials of the currently active Goprtg server with a specified username and password.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#modification</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-GoPrtgAlias</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Uninstall-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Connect-GoPrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Connect-GoPrtgServer</command:name>
      <command:verb>Connect</command:verb>
      <command:noun>GoPrtgServer</command:noun>
      <maml:description>
        <maml:para>Connects to a PRTG Network Monitor server using connection details stored in the current PowerShell Profile.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>GoPrtg allows you to securely store your PRTG Network Monitor server and authentication details inside your PowerShell profile. Upon opening a new PowerShell Session, by simply executing the GoPrtg command you can be automatically connected to one of several servers, without needing to enter any credentials.</maml:para>
      <maml:para>When invoked without arguments, GoPrtg will attempt to connect to the first server in your GoPrtg servers list. When multiple records are present, a specific server can be connected to by specifying a wildcard pattern that corresponds to that connection's Server or Alias property. A full list of installed GoPrtg servers can be viewed via the Get-GoPrtgServer cmdlet.</maml:para>
      <maml:para>Upon connecting to a GoPrtg server, GoPrtg will output a status message to the console indicating whether the connection succeeded. As GoPrtg depends on the contents of the current user's PowerShell Profile, it is not recommended to use GoPrtg cmdlets inside scripts. To manage PRTG server connections inside scripts it is recommended to use the Connect-PrtgServer cmdlet in conjunction with New-Credential / Get-Credential.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Connect-GoPrtgServer</maml:name>
        <!-- Parameter: Server -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>A wildcard expression describing the address or alias of the server to connect to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogLevel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogLevel</maml:name>
          <maml:description>
            <maml:para>The type of events to log when -Verbose is specified.</maml:para>
            <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogLevel[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogLevel[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Server -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>A wildcard expression describing the address or alias of the server to connect to.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogLevel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogLevel</maml:name>
        <maml:description>
          <maml:para>The type of events to log when -Verbose is specified.</maml:para>
          <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">LogLevel[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.LogLevel[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; goprtg</dev:code>
        <dev:remarks>
          <maml:para>Connect to the first GoPrtg server installed in the current PowerShell Profile.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; goprtg dev</dev:code>
        <dev:remarks>
          <maml:para>Connect to the GoPrtg server with alias "dev"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; goprtg prtg.exam*</dev:code>
        <dev:remarks>
          <maml:para>Connect to the GoPrtg server whose address starts with "prtg.exam".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#connection</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-GoPrtgAlias</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Uninstall-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Update-GoPrtgCredential</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Credential</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-GoPrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-GoPrtgServer</command:name>
      <command:verb>Get</command:verb>
      <command:noun>GoPrtgServer</command:noun>
      <maml:description>
        <maml:para>Retrieves GoPrtg connection details from the current PowerShell Profile.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-GoPrtgServer cmdlet retrieves all GoPrtg connections stored in the current PowerShell Profile. Each server lists its server address, username used for authentication and alias (if applicable). The currently active server is indicated by an asterisk. If multiple connections are installed, a wildcard expression indicating the server addresses or aliases to filter for can be specified to limit results.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-GoPrtgServer</maml:name>
        <!-- Parameter: Server -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>A wildcard expression describing the address or alias of the servers to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Server -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>A wildcard expression describing the address or alias of the servers to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-GoPrtgServer</dev:code>
        <dev:remarks>
          <maml:para>List all GoPrtg servers installed in the current PowerShell profile.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-GoPrtgServer *dev*</dev:code>
        <dev:remarks>
          <maml:para>List all GoPrtg servers whose server address or alias contains the word "dev".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#enumeration</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-GoPrtgAlias</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Uninstall-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Update-GoPrtgCredential</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Install-GoPrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Install-GoPrtgServer</command:name>
      <command:verb>Install</command:verb>
      <command:noun>GoPrtgServer</command:noun>
      <maml:description>
        <maml:para>Installs the active PRTG Network Monitor server as a GoPrtg server in the current PowerShell Profile.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Install-GoPrtgServer cmdlet installs the active PRTG Network Monitor server as a GoPrtg server in the current PowerShell Profile. GoPrtg servers provide a means of securely connecting to PRTG servers without having to re-enter your PRTG server and authentication details every time you open a new PowerShell Session or wish to switch to another server.</maml:para>
      <maml:para>When installing a new GoPrtg server, you may optionally specify an -Alias for your connection to use a shorthand when using the GoPrtg command to toggle between servers. Multiple records may lack an alias as long as they are for different servers. Otherwise, each record stored by Install-GoPrtgServer MUST have a unique alias. The alias for the currently active GoPrtg server can be updated via the Update-GoPrtgCredential cmdlet.</maml:para>
      <maml:para>When storing your connection details, Install-GoPrtgServer encrypts your PassHash as a SecureString, which is then converted to an Encrypted String and stored alongside your server, username and alias (if applicable). When stored as an Encrypted String, your PassHash can only be decrypted under your user account on the computer on which it was created.</maml:para>
      <maml:para>When GoPrtg servers have been installed, special code will be inserted into your PowerShell Profile, demarcated by a special header and footer indicating the bounds of GoPrtg's configuration data. Great care should be taken when manipulating your PowerShell Profile. If any key markings (including the GoPrtg headers and footers themselves) are removed from the PowerShell Profile, GoPrtg may be unable to continue parsing its configuration without manual intervention. If worst comes to worst, you can repair your corrupted GoPrtg configuration by simply removing the entire GoPrtg section (including headers and footers) and reinstalling your GoPrtg servers.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Install-GoPrtgServer</maml:name>
        <!-- Parameter: Alias -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>An optional alias to associate with the server. An alias must be specified if an existing record exists for the currently active server.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Alias -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>An optional alias to associate with the server. An alias must be specified if an existing record exists for the currently active server.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Install-GoPrtg</dev:code>
        <dev:remarks>
          <maml:para>Installs the currently active server without an alias.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Install-GoPrtg dev</dev:code>
        <dev:remarks>
          <maml:para>Installs the currently active server with the alias "dev"</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#installation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-GoPrtgAlias</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Uninstall-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Update-GoPrtgCredential</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Uninstall-GoPrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Uninstall-GoPrtgServer</command:name>
      <command:verb>Uninstall</command:verb>
      <command:noun>GoPrtgServer</command:noun>
      <maml:description>
        <maml:para>Uninstalls one or more GoPrtg servers from the current PowerShell Profile.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Uninstall-GoPrtgServer cmdlet uninstalls one or more GoPrtg servers from the current PowerShell Profile. If a single GoPrtg server exists in your PowerShell Profile, invoking Uninstall-GoPrtgServer with no arguments will automatically install your single server. Otherwise, a -Server wildcard expression must be specified matching one or more servers or aliases to remove. Alternatively, you may specify the -Force parameter to automatically remove all GoPrtg servers.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Uninstall-GoPrtgServer</maml:name>
        <!-- Parameter: Server -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>A wildcard describing the servers to remove. If only one GoPrtg server exists, this parameter can be omitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ForceSet -->
      <command:syntaxItem>
        <maml:name>Uninstall-GoPrtgServer</maml:name>
        <!-- Parameter: Force -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Specifies that all GoPrtg servers should be removed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Server -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>A wildcard describing the servers to remove. If only one GoPrtg server exists, this parameter can be omitted.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Specifies that all GoPrtg servers should be removed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Uninstall-GoPrtgServer *dev*</dev:code>
        <dev:remarks>
          <maml:para>Uninstalls all GoPrtg servers whose name or alias contains "dev".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Uninstall-GoPrtgServer -Force</dev:code>
        <dev:remarks>
          <maml:para>Uninstalls all GoPrtg servers.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Store-Credentials#uninstallation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-GoPrtgAlias</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Update-GoPrtgCredential</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Add-Group -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-Group</command:name>
      <command:verb>Add</command:verb>
      <command:noun>Group</command:noun>
      <maml:description>
        <maml:para>Adds a new group to a PRTG Group or Probe.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-Group cmdlet adds a new group to a a PRTG Group or Probe. When adding a new group, Add-Group supports two methods of specifying the parameters required to create the object. For basic scenarios where you inherit all settings from the parent object, a group can created by passing nothing more than a Name to Add-Group.</maml:para>
      <maml:para>For more advanced scenarios where you wish to specify more advanced parameters (such as Tags that will apply to the group) a NewGroupParameters object can be instead created with the New-GroupParameters cmdlet. When the parameters object is passed to Add-Device, PrtgAPI will validate that all mandatory parameter fields contain values. If a mandatory field is missing a value, Add-Sensor will throw an InvalidOperationException, listing the field whose value was missing.</maml:para>
      <maml:para>By default, Add-Group will attempt to resolve the created group to a Group object. As PRTG does not return the ID of the created object, PrtgAPI identifies the newly created group by comparing the groups under the parent object before and after the new group is created. While this is generally very reliable, in the event something or someone else creates another new group directly under the target object with the same Name, that object will also be returned in the objects resolved by Add-Group. If you do not wish to resolve the created group, this behavior can be disabled by specifying -Resolve:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Add-Group</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NewGroupParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.NewGroupParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The parent object to create an object under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BasicSet -->
      <command:syntaxItem>
        <maml:name>Add-Group</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to use for the group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The parent object to create an object under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Destination -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
        <command:parameterValue required="true">GroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.GroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Parameters -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NewGroupParameters</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.NewGroupParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name to use for the group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.GroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe contoso | Add-Group Servers</dev:code>
        <dev:remarks>
          <maml:para>Add a new group called "Servers" to the Contoso probe.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-GroupParameters Servers
C:\&gt; $params.Tags = "awesomeGroup"

C:\&gt; Get-Probe contoso | Add-Device $params</dev:code>
        <dev:remarks>
          <maml:para>Add a new group called "Servers" with custom tags to the Contoso probe.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#groups-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Group -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Group</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Group</command:noun>
      <maml:description>
        <maml:para>Retrieves groups from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Group cmdlet retrieves groups from a PRTG Server. Groups allow you to organize devices and other groups together. In addition, the root node of PRTG containing all probes in the system is marked as a group. Get-Group provides a variety of methods of filtering the groups requested from PRTG, including by group name, ID and tags, as well as by parent probe/group. Multiple filters can be used in conjunction to further limit the number of results returned. Group properties that do not contain explicitly defined parameters on Get-Group can be specified as dynamic parameters, allowing one or more values to be specified of the specified type. All string parameters support the use of wildcards.</maml:para>
      <maml:para>For scenarios in which you wish to exert finer grained control over search filters, a custom SearchFilter object can be created by specifying the field name, condition and value to filter upon. For more information on properties that can be filtered upon, see New-SearchFilter.</maml:para>
      <maml:para>Get-Group provides two parameter sets for filtering objects by tags. When filtering for groups that contain one of several tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for groups containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      <maml:para>When requesting groups belonging to a specified group, PRTG will not return any objects that may be present under further child groups of the parent group (i.e. grandchildren). To work around this, by default Get-Groups will automatically recurse child groups if it detects the initial group request did not return all items (as evidenced by the group's TotalGroups property. If you do not wish Get-Group to recurse child groups, this behavior can be overridden by specifying -Recurse:$false.</maml:para>
      <maml:para>The Group objects returned from Get-Group can be piped to a variety of other cmdlets for further processing, including Get-Group, Get-Device and Get-Sensor, where the ID or name of the group will be used to filter for child objects of the specified type.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: LogicalAndTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Group</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Collapsed -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Collapsed</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The parent group to retrieve groups for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The probe to retrieve groups for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDevices -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDevices</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalGroups -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalGroups</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: LogicalOrTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Group</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Collapsed -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Collapsed</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The parent group to retrieve groups for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The probe to retrieve groups for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tag -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDevices -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDevices</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalGroups -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalGroups</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Group -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>The parent group to retrieve groups for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Group</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Probe -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Probe</maml:name>
        <maml:description>
          <maml:para>The probe to retrieve groups for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Recurse -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Only retrieve objects that match a specific status.</maml:para>
          <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
        </maml:description>
        <command:parameterValue required="true">Status[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Status[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tag -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Access -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Access</maml:name>
        <maml:description>
          <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
        </maml:description>
        <command:parameterValue required="true">Access[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Access[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Dependency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Dependency</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
        </maml:description>
        <command:parameterValue required="true">Priority[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Priority[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UpSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownAcknowledgedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownAcknowledgedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PartialDownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PartialDownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WarningSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WarningSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PausedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PausedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnusualSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnusualSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnknownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnknownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Schedule -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Schedule</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comments -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comments</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Condition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Condition</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BaseType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseType</maml:name>
        <maml:description>
          <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.BaseType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentId</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Collapsed -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Collapsed</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalGroups -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalGroups</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalDevices -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalDevices</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Position -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Position</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parent group to retrieve groups for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The probe to retrieve groups for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Group -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group Servers</dev:code>
        <dev:remarks>
          <maml:para>Get all groups named "Servers" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group *windows*</dev:code>
        <dev:remarks>
          <maml:para>Get all groups whose name contains "windows" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 2005</dev:code>
        <dev:remarks>
          <maml:para>Get the group with ID 2005</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe contoso | Get-Group</dev:code>
        <dev:remarks>
          <maml:para>Get all groups under the probe named "contoso"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Tag ny,ca</dev:code>
        <dev:remarks>
          <maml:para>Get all devices that have the tag "ny" or "ca"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Tags ny,south</dev:code>
        <dev:remarks>
          <maml:para>Get all groups in South New York</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -ParentId 3045</dev:code>
        <dev:remarks>
          <maml:para>Get all groups directly under the object with ID 3045 using a dynamic parameter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; flt parentid eq 3045 | Get-Group</dev:code>
        <dev:remarks>
          <maml:para>Get all groups directly under the object with ID 3045 using a SearchFilter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Count 1</dev:code>
        <dev:remarks>
          <maml:para>Get only 1 group from PRTG.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 2001 | Get-Group -Recurse:$false</dev:code>
        <dev:remarks>
          <maml:para>Get all groups directly under the group with ID 2001, ignoring all grandchildren.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Groups#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SearchFilter</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Group</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-GroupNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-GroupNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>GroupNode</command:noun>
      <maml:description>
        <maml:para>Creates a new GroupNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-GroupNode cmdlet creates a new GroupNode object for modelling a PRTG Tree. Each GroupNode object encapsulates a single Group object along with any optional children (such as DeviceNode and other GroupNode items).</maml:para>
      <maml:para>New-GroupNode supports many different ways of being invoked, however at its core there are two pieces of information that can be provided to the cmdlet: information that identifies the Group to encapsulate, and the nodes that should be used as the children of the node.</maml:para>
      <maml:para>If an existing Group object retrieved from the Get-Group cmdlet is not specified or piped to the -Value parameter, one or more of -Name or -Id must be specified to identify the object to encapsulate. If multiple values are returned as a result of these parameters, a unique GroupNode object will be created for each item.</maml:para>
      <maml:para>Child nodes to this node can either be specified via the pipeline, or declaratively via a ScriptBlock. When a ScriptBlock defining children is specified, GroupNode will incorporate a copy of the children in each GroupNode that is produced. While each GroupNode will end up with a unique copy of all its descendant nodes, the underlying Value of each nodw will be the same.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-GroupNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromSet -->
      <command:syntaxItem>
        <maml:name>New-GroupNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-GroupNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromManualSet -->
      <command:syntaxItem>
        <maml:name>New-GroupNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Group</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScriptBlock -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A script block that returns the children to use for this node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Children -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Children</maml:name>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 3001 | New-GroupNode</dev:code>
        <dev:remarks>
          <maml:para>Create a group node from the group with ID 3001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; New-GroupNode -Id 3001</dev:code>
        <dev:remarks>
          <maml:para>Create a group node from the group with ID 3001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; New-GroupNode windows*</dev:code>
        <dev:remarks>
          <maml:para>Create a group node for each group whose name starts with "windows".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; GroupNode -Id 3001 {
&gt;&gt;      DeviceNode -Id 2001 {
&gt;&gt;          SensorNode -Id 1001
&gt;&gt;      }
&gt;&gt;
&gt;&gt;      DeviceNode -Id 2002 {
&gt;&gt;          SensorNode -Id 1002
&gt;&gt;      }
&gt;&gt; }</dev:code>
        <dev:remarks>
          <maml:para>Create a new group node from the object with ID 3001 with child nodes for the devices with IDs 2001 and 2002, which contain the sensors with IDs 1001 and 1002 respectively.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>New-Device -Id 2001,2002 | New-GroupNode -Id 3001</dev:code>
        <dev:remarks>
          <maml:para>Create a new group node from the object with ID 3001 with child nodes for the devices with IDs 2001 and 2002.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ProbeNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PropertyNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-GroupParameters -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-GroupParameters</command:name>
      <command:verb>New</command:verb>
      <command:noun>GroupParameters</command:noun>
      <maml:description>
        <maml:para>Creates a new set of group parameters for creating a brand new group under a group or probe.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-GroupParameters cmdlet creates a set of parameters for adding a brand new group to PRTG. Group parameter objects returned from New-GroupParameters allow specifying a variety of group specific configuration details including auto-discovery settings at the time of object creation.</maml:para>
      <maml:para>Note that not all group parameters (such as settings that can be inherited from the parent group or probe) can be specified with PrtgAPI at the time of object creation. If you wish to modify such properties, this can be achieved after the group has been created via the Set-ObjectProperty cmdlet.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>New-GroupParameters</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to give the new group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name to give the new group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-GroupParameters Servers

C:\&gt; Get-Probe contoso | Add-Group $params</dev:code>
        <dev:remarks>
          <maml:para>Add a new group called "Servers" to the Contoso probe.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-GroupParameters Servers
C:\&gt; $params.Tags = "awesomeGroup"

C:\&gt; Get-Probe Contoso | Add-Group $params</dev:code>
        <dev:remarks>
          <maml:para>Add a new group called "Servers" to the Contoso probe with a custom tag "awesomeGroup".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#group-creation-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ObjectProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-ModificationHistory -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-ModificationHistory</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ModificationHistory</command:noun>
      <maml:description>
        <maml:para>Retrieves the setting/state modification history of a PRTG Object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-ModificationHistory cmdlet retrieves all setting/state modifications of an object. The Get-ModificationHistory cmdlet corresponds with the "History" tab of objects in the PRTG UI.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-ModificationHistory</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve historical data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ModificationHistory</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve historical data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to retrieve historical data for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve historical data for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve historical data for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: ModificationEvent -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.ModificationEvent</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-ModificationHistory</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all modification events for the sensor with ID 1001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Historical-Information#modification-history-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-NotificationAction -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-NotificationAction</command:name>
      <command:verb>Get</command:verb>
      <command:noun>NotificationAction</command:noun>
      <maml:description>
        <maml:para>Retrieves all Notification Actions from a PRTG Server.</maml:para>
        <maml:para>Get-NotificationAction supports filtering returned actions by a number of parameters, including by -Name, -Id, -Tags or a custom SearchFilter. When filtering by tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for notification actions containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-NotificationAction retrieves notification actions present on a PRTG Server. Notification actions can be triggered under various circumstances via notification triggers. For more information on notification triggers, see Get-NotificationTrigger.</maml:para>
      <maml:para>Get-NotificationAction provides two parameter sets for filtering objects by tags. When filtering for notification actions that contain one of several tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for notification actions containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      <maml:para>If you are currently signed in as a read only user, you may not be able to see all notification actions or notification action properties.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: LogicalAndTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationAction</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: LogicalOrTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationAction</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tag -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tag -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: NotificationAction -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationAction</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-NotificationTrigger</dev:code>
        <dev:remarks>
          <maml:para>Get all notification actions.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-NotificationTrigger *pager*</dev:code>
        <dev:remarks>
          <maml:para>Get all notification actions whose name contains "pager"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-NotificationTrigger -Id 301,302</dev:code>
        <dev:remarks>
          <maml:para>Get the notification actions with IDs 301 and 302.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-NotificationTrigger -Tags PagerDuty</dev:code>
        <dev:remarks>
          <maml:para>Get all notification actions tagged with "PagerDuty"</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Actions#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerParameters</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Add-NotificationTrigger -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-NotificationTrigger</command:name>
      <command:verb>Add</command:verb>
      <command:noun>NotificationTrigger</command:noun>
      <maml:description>
        <maml:para>Adds a notification trigger to a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-NotificationTrigger/New-NotificationTrigger cmdlet adds a new notification trigger to an object in PRTG. When adding a notification trigger, you can either specify the settings for the trigger as parameters to the cmdlet (PowerShell style), or must first create a TriggerParameters object that defines the settings to use (object-oriented style). TriggerParameters can be defined from existing notification triggers or created from scratch. Certain objects do support certain types of notification triggers (e.g. different types of sensors).</maml:para>
      <maml:para>Attempting to add a notification trigger to an object that does not supported that trigger type will generate an InvalidTriggerTypeException. Notification triggers applied to parent objects that are not supported by their children are simply ignored within PRTG, and do not generate exceptions. For information on viewing the trigger types supported by an object, see Get-NotificationTrigger -Types</maml:para>
      <maml:para>By default, Add-NotificationTrigger will attempt to resolve the created trigger to a NotificationTrigger object. As PRTG does not return the ID of the created object, PrtgAPI identifies the newly created trigger by comparing the triggers on the parent object before and after the new trigger is created. While this is generally very reliable, in the event something or someone else creates another new trigger directly under the target object with the same OnNotificationAction, that object will also be returned in the objects resolved by Add-NotificationTrigger. If you do not wish to resolve the created trigger, this behavior can be disabled by specifying -Resolve:$false.</maml:para>
      <maml:para>For more information on creating TriggerParameters , see New-NotificationTriggerParameters.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>Add-NotificationTrigger</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of notification trigger to create.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>State</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to create a notification trigger under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channel</maml:name>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <maml:description>
            <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerCondition</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerCondition</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: EscalationLatency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationLatency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EscalationNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Latency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Latency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OffNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OffNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OnNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerPeriod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerPeriod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RepeatInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RepeatInterval</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: State -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerSensorState</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerSensorState</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Threshold -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Threshold</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnitSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitSize</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitTime</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Add-NotificationTrigger</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>The parameters to use to add a NotificationTrigger.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to create a notification trigger under.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of notification trigger to create.</maml:para>
          <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>State</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Parameters -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>The parameters to use to add a NotificationTrigger.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerParameters</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: State -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>State</maml:name>
        <maml:description>
          <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerSensorState</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerSensorState</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Latency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Latency</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OnNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OnNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: OffNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OffNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationLatency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationLatency</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RepeatInterval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RepeatInterval</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Channel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Channel</maml:name>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Period -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Period</maml:name>
        <maml:description>
          <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerPeriod</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerPeriod</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UnitSize -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitSize</maml:name>
        <maml:description>
          <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Condition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Condition</maml:name>
        <maml:description>
          <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerCondition</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerCondition</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Threshold -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Threshold</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnitTime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitTime</maml:name>
        <maml:description>
          <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TimeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to create a notification trigger under.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parameters to use to add a NotificationTrigger.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\ Get-Probe -Id 1001 | New-Trigger -Type State -OnNotificationAction *ticket* -Latency 40</dev:code>
        <dev:remarks>
          <maml:para>Create a new state trigger on the probe with ID 1001 that activates the "Ticket Notification" action 40 seconds after being triggered.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe | Get-NotificationTrigger | New-TriggerParameters 2001 | Add-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Add all triggers on all probes directly to the object with ID 2001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#add-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NotificationTriggerParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NotificationTriggerProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-NotificationTrigger -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-NotificationTrigger</command:name>
      <command:verb>Get</command:verb>
      <command:noun>NotificationTrigger</command:noun>
      <maml:description>
        <maml:para>Retrieves notification triggers from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-NotificationTrigger cmdlet retrieves notification triggers that are defined on a PRTG Object as well as the types of triggers an object supports. Notification triggers define conditions that when met by a sensor or one of its channels, should result in the firing of a notification action. When notification triggers are defined on a device, group, or probe, the triggers are inherited by all nodes under the object. Individual objects can choose to block inheritance of notification triggers, preventing those triggers from trickling down.</maml:para>
      <maml:para>When looking at notification triggers defined on a single object, Get-NotificationTrigger can be invoked with no arguments. When looking at notification triggers across multiple objects, it is often useful to filter out notification triggers inherited from a parent object via the -Inherited parameter.</maml:para>
      <maml:para>NotificationTrigger objects returned from Get-NotificationTrigger can be passed to Set-TriggerProperty or New-TriggerParameters, to allow cloning or editing the trigger's properties.</maml:para>
      <maml:para>Notification trigger types that are supported by a specified object can be determined using the -Types parameter. While there is no restriction on the types of triggers assignable to container-like objects (including devices, groups and probes) each sensor can only be assigned specific types based on the types of channels it contains. When adding a new trigger, Add-NotificationTrigger will automatically validate whether the specified TriggerParameters are assignable to the target object. If the new trigger's type is incompatible with the target object, PrtgAPI will throw an exception alerting you to this error.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: TypeSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationTrigger</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve notification triggers for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Types -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Types</maml:name>
          <maml:description>
            <maml:para>List all notification trigger types compatible with the specified object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationTrigger</maml:name>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>OnNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain OnNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve notification triggers for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channel</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified Channel. Can refer to an object capable of being used as the source of a TriggerChannel or a wildcard indicating the name of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <maml:description>
            <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerCondition[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerCondition[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: EscalationLatency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationLatency</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EscalationNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain EscalationNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Inherited -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Inherited</maml:name>
          <maml:description>
            <maml:para>Indicates whether to include inherited triggers in the response.</maml:para>
          </maml:description>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Latency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Latency</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OffNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OffNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain OffNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerPeriod[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerPeriod[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RepeatInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RepeatInterval</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: State -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerSensorState[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerSensorState[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Id">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified SubId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Threshold -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Threshold</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects of a certain type.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitSize</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitTime</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TypeManualSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationTrigger</maml:name>
        <!-- Parameter: ObjectId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ObjectId</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve notification triggers for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Types -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Types</maml:name>
          <maml:description>
            <maml:para>List all notification trigger types compatible with the specified object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicManualSet -->
      <command:syntaxItem>
        <maml:name>Get-NotificationTrigger</maml:name>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>OnNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain OnNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ObjectId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ObjectId</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve notification triggers for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channel</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified Channel. Can refer to an object capable of being used as the source of a TriggerChannel or a wildcard indicating the name of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <maml:description>
            <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerCondition[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerCondition[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: EscalationLatency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationLatency</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EscalationNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain EscalationNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Inherited -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Inherited</maml:name>
          <maml:description>
            <maml:para>Indicates whether to include inherited triggers in the response.</maml:para>
          </maml:description>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Latency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Latency</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OffNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OffNotificationAction</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain OffNotificationAction. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerPeriod[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerPeriod[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RepeatInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RepeatInterval</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: State -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerSensorState[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerSensorState[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Id">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>Filter the reponse to objects with a specified SubId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Threshold -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Threshold</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects of a certain type.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitSize</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitTime</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to retrieve notification triggers for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ObjectId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve notification triggers for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: OnNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>OnNotificationAction</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain OnNotificationAction. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: OffNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OffNotificationAction</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain OffNotificationAction. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationNotificationAction</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain EscalationNotificationAction. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects of a certain type.</maml:para>
          <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SubId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Id">
        <maml:name>SubId</maml:name>
        <maml:description>
          <maml:para>Filter the reponse to objects with a specified SubId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Id">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Filter the reponse to objects with a specified SubId.</maml:para>
          <maml:para>This is an alias of the SubId parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentId</maml:name>
        <maml:description>
          <maml:para>Filter the reponse to objects with a specified ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Channel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Channel</maml:name>
        <maml:description>
          <maml:para>Filter the reponse to objects with a specified Channel. Can refer to an object capable of being used as the source of a TriggerChannel or a wildcard indicating the name of the channel.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Types -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Types</maml:name>
        <maml:description>
          <maml:para>List all notification trigger types compatible with the specified object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Inherited -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Inherited</maml:name>
        <maml:description>
          <maml:para>Indicates whether to include inherited triggers in the response.</maml:para>
        </maml:description>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: State -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>State</maml:name>
        <maml:description>
          <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerSensorState[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerSensorState[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Latency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Latency</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationLatency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationLatency</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RepeatInterval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RepeatInterval</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Period -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Period</maml:name>
        <maml:description>
          <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerPeriod[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerPeriod[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UnitSize -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitSize</maml:name>
        <maml:description>
          <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataUnit[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataUnit[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Condition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Condition</maml:name>
        <maml:description>
          <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerCondition[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerCondition[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Threshold -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Threshold</maml:name>
        <command:parameterValue required="true">double[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Double[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnitTime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitTime</maml:name>
        <maml:description>
          <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeUnit[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TimeUnit[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve notification triggers for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: NotificationTrigger -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe | Get-NotificationTrigger</dev:code>
        <dev:remarks>
          <maml:para>Get all notification triggers defined on all probes</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device | Get-NotificationTrigger *pager* -Inherited $false</dev:code>
        <dev:remarks>
          <maml:para>Get all notification triggers from all devices whose OnNotificationAction action name contains "pager" in the name and are not inherited from any parent objects.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 2001 | Get-NotificationTrigger -Type State</dev:code>
        <dev:remarks>
          <maml:para>Get all State notification triggers from the sensor with ID 2001</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-NotificationTrigger -Types</dev:code>
        <dev:remarks>
          <maml:para>Get all notification trigger types supported by the object with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#get-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NotificationTriggerParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NotificationTriggerProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Remove-NotificationTrigger -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-NotificationTrigger</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>NotificationTrigger</command:noun>
      <maml:description>
        <maml:para>Removes a notification trigger from a PRTG Object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-NotificationTrigger cmdlet removes a notification trigger from a PRTG Object. Notification triggers can only be removed from the objects on which they are explicitly defined. Attempting to remove a notification trigger from an object which inherits the trigger from its parent will generate an exception.</maml:para>
      <maml:para>If invoked with no arguments other than the notification trigger to be deleted, Remove-NotificationTrigger will prompt for confirmation of each trigger to be deleted. If you wish to remove multiple triggers, it is recommended to first run Remove-NotificationTrigger with the -WhatIf parameter, and then re-run with the -Force parameter if the results of -WhatIf look correct</maml:para>
      <maml:para>When invoked with -WhatIf, Remove-NotificationTrigger will list all notification triggers that would have been removed, along with the OnNotificationAction and Sub ID of the notification trigger and the object ID of the object to which the triggers are applied. Even if you are sure of the triggers you wish to delete, it is recommended to always run with -WhatIf first to confirm you have specified the correct triggers and that PrtgAPI has interpreted your request in the way you intended.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Remove-NotificationTrigger</maml:name>
        <!-- Parameter: Trigger -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Trigger</maml:name>
          <maml:description>
            <maml:para>Notification trigger to remove.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces a notification trigger to be removed without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Trigger -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Trigger</maml:name>
        <maml:description>
          <maml:para>Notification trigger to remove.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces a notification trigger to be removed without displaying a confirmation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Notification trigger to remove.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Get-NotificationTrigger | Remove-NotificationTrigger -WhatIf
"What if: Performing operation "Remove-NotificationTrigger" on target "'Email to Administrator' (Object ID: 2002, Sub ID: 1)""</dev:code>
        <dev:remarks>
          <maml:para>Preview what will happen when you attempt all triggers from all devices with the name 'dc-1'</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Get-NotificationTrigger | Remove-NotificationTrigger -Force</dev:code>
        <dev:remarks>
          <maml:para>Remove all notification triggers from devices named 'dc-1' without prompting for confirmation.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#remove-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-NotificationTrigger -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-NotificationTrigger</command:name>
      <command:verb>Set</command:verb>
      <command:noun>NotificationTrigger</command:noun>
      <maml:description>
        <maml:para>Modifies a notification trigger on a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-NotificationTrigger cmdlet updates an existing notification trigger defined on an object in PRTG. When editing a notification trigger, you must first create a TriggerParameters object that defines the settings you wish to modify. TriggerParameters can be created from an existing notification trigger or created from scratch.</maml:para>
      <maml:para>For more information on creating TriggerParameters, see New-NotificationTriggerParameters</maml:para>
      <maml:para>For information on how to quickly edit a single trigger property, see Edit-NotificationTriggerProperty.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-NotificationTrigger</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>The parameters to use to modify a NotificationTrigger.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Parameters -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>The parameters to use to modify a NotificationTrigger.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerParameters</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parameters to use to modify a NotificationTrigger.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $triggerParams = Get-Probe | Get-Trigger -Type State | New-TriggerParameters
C:\&gt; $triggerParams.RepeatInterval = 20
C:\&gt; $triggerParams.OffNotificationAction = $null

C:\&gt; $triggerParams | Set-NotificationTrigger</dev:code>
        <dev:remarks>
          <maml:para>Set the repeat interval of the notification to trigger to every 20 minutes, and remove the off notification action. This example assumes there is exactly one probe in the system with exactly one state notification trigger defined on it.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#modify-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NotificationTriggerParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Edit-NotificationTriggerProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-NotificationTriggerParameters -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-NotificationTriggerParameters</command:name>
      <command:verb>New</command:verb>
      <command:noun>NotificationTriggerParameters</command:noun>
      <maml:description>
        <maml:para>Creates a new set of notification trigger parameters for adding or editing a notification trigger.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-NotificationTriggerParameters cmdlet creates a set of trigger parameters for creating or editing a notification trigger. When editing notification triggers, New-NotificationTriggerParameters should only be used when multiple values require updating. For updating a single notification trigger property Edit-NotificationTriggerProperty should be used instead.</maml:para>
      <maml:para>When creating a new notification trigger, the trigger's parameters can either be imported from an existing notification trigger's properties and then further modified, or defined manually from scratch.</maml:para>
      <maml:para>Based on the type of notification trigger specified, New-NotificationTriggerParameters will create one of several TriggerParameter type objects, exposing only the parameters relevant to that trigger type.</maml:para>
      <maml:para>When working with TriggerParameters objects, all parameter properties support nullable values, allowing you to clear any properties you wish to remove or undo. The exception to this however is Notification Action related properties. When a Notification Action is set to null, it will set the property to the "empty" notification action. This allows you to easily clear unwanted notification actions within the PRTG Interface.</maml:para>
      <maml:para>When editing existing notification triggers, all properties on the TriggerParameters object will be initially set to null. Specifying a value for a property will highlight to PrtgAPI that that property should be updated when the trigger request is executed. While holding a value of null by default, Notification Actions will not set themselves with the "empty" notification action unless this value is explicitly specified. Note that if you wish to undo modifying a notification action property you have set to null, you will be unable to do so without creating a brand new TriggerParameters object.</maml:para>
      <maml:para>For trigger types where the Channel property is supported (Speed, Threshold and Volume) when defining the trigger on a Probe, Group or Device, enum values "Primary", "Total", "TrafficIn" and "TrafficOut" must be used. When applied directly to a Sensor, a specific Channel or Channel ID must be used. To safely resolve all channels supported by the sensor the Get-Channel cmdlet can be used. Once a Channel or Channel ID has been assigned to a trigger parameter's Channel property, it is wrapped as a TriggerChannel object and the underlying type cannot be retrieved. As such, if you wish to refer to your original type, you must keep a copy of the value assigned to the Channel property for further use in your code.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: AddSet -->
      <command:syntaxItem>
        <maml:name>New-NotificationTriggerParameters</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of notification trigger to manipulate.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object a trigger should be created for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddManualSet -->
      <command:syntaxItem>
        <maml:name>New-NotificationTriggerParameters</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object the notification trigger will be created for or the ID of the object whose triggers should be modified.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of notification trigger to manipulate.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: EditManualSet -->
      <command:syntaxItem>
        <maml:name>New-NotificationTriggerParameters</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object the notification trigger will be created for or the ID of the object whose triggers should be modified.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TriggerId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>TriggerId</maml:name>
          <maml:description>
            <maml:para>The Sub ID of the trigger to manipulate.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of notification trigger to manipulate.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromSet -->
      <command:syntaxItem>
        <maml:name>New-NotificationTriggerParameters</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object the notification trigger will be created for or the ID of the object whose triggers should be modified.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Source -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Source</maml:name>
          <maml:description>
            <maml:para>The notification trigger import trigger parameters from.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: EditFromSet -->
      <command:syntaxItem>
        <maml:name>New-NotificationTriggerParameters</maml:name>
        <!-- Parameter: Source -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Source</maml:name>
          <maml:description>
            <maml:para>The notification trigger import trigger parameters from.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object a trigger should be created for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object the notification trigger will be created for or the ID of the object whose triggers should be modified.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Source -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Source</maml:name>
        <maml:description>
          <maml:para>The notification trigger import trigger parameters from.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TriggerId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>TriggerId</maml:name>
        <maml:description>
          <maml:para>The Sub ID of the trigger to manipulate.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of notification trigger to manipulate.</maml:para>
          <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerType</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object a trigger should be created for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The ID of the object the notification trigger will be created for or the ID of the object whose triggers should be modified.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The notification trigger import trigger parameters from.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: TriggerParameters -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.TriggerParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-TriggerParameters 1234 State

C:\&gt; $params | Add-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Add a new state notification trigger with default values to object with ID 1234</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-TriggerParameters 1234 3 State
C:\&gt; $params.Latency = 40

C:\&gt; $params | Set-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Edit the state notification trigger with sub ID 3 on the object with ID 1234, setting the Latency to 40 seconds</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Sensor -Id 1001 | Get-Trigger -Type State -Inherited $false | New-TriggerParameters 1234
C:\&gt; $params.OffNotificationAction = $null

C:\&gt; $params | Add-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Create a new notification trigger on the object with ID 1234 from the state trigger on the sensor with ID 1001, setting the OffNotificationAction to "None"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Sensor -Id 1001 | Get-Trigger -Type State -Inherited $false | New-TriggerParameters
C:\&gt; $params.Latency = 30

C:\&gt; $params | Set-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Edit the notification trigger on the sensor with ID 1001, setting the latency to 30 seconds</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; $sensor = Get-Sensor -Id 1001
C:\&gt; $channel = $sensor | Get-Channel "Available Memory"

C:\&gt; $params = $sensor | New-TriggerParameters Threshold
C:\&gt; $params.Channel = $channel

C:\&gt; $params | Add-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Create a new notification trigger on the sensor with ID 1001 that alerts based on the value of its "Available Memory" channel.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-TriggerParameters 1001 Threshold
C:\&gt; $params.Channel = 1

C:\&gt; $params | Add-Trigger</dev:code>
        <dev:remarks>
          <maml:para>Create a new threshold notification trigger on the sensor with ID 1001 that alerts based on the value of the channel with ID 1.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#add-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Edit-NotificationTriggerProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Channel</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-NotificationTriggerProperty -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-NotificationTriggerProperty</command:name>
      <command:verb>Set</command:verb>
      <command:noun>NotificationTriggerProperty</command:noun>
      <maml:description>
        <maml:para>Modifies the value of a PRTG Notification Trigger property.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-NotificationTriggerProperty cmdlet modifies properties and settings of PRTG Notification Triggers.</maml:para>
      <maml:para>When a value is specified, Set-NotificationTriggerProperty will attempt to parse the value into its expected type. If the type cannot be parsed, an exception will be thrown indicating the type of the object specified and the type of value that was expected. In the case of enums, Set-NotificationTriggerProperty will list all valid values of the target type so that you may know how exactly to interface with the specified property. In the event you wish to modify multiple properties in a single request, Set-NotificationTriggerProperty provides dynamically generated parameters for each property supported by PrtgAPI.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Set-NotificationTriggerProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Property of the trigger to set.</maml:para>
            <maml:para>Possible values: State, Latency, OnNotificationAction, OffNotificationAction, EscalationNotificationAction, EscalationLatency, RepeatInterval, Channel, Period, UnitSize, Condition, Threshold, UnitTime</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>State</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Latency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OnNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OffNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EscalationNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EscalationLatency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RepeatInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Channel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Period</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnitSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Condition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnitTime</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Value to set the property to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Trigger -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Trigger</maml:name>
          <maml:description>
            <maml:para>Notification Trigger to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>Set-NotificationTriggerProperty</maml:name>
        <!-- Parameter: Trigger -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Trigger</maml:name>
          <maml:description>
            <maml:para>Notification Trigger to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channel</maml:name>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <maml:description>
            <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerCondition</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerCondition</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: EscalationLatency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationLatency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EscalationNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Latency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Latency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OffNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OffNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OnNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerPeriod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerPeriod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RepeatInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RepeatInterval</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: State -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerSensorState</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerSensorState</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Threshold -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Threshold</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnitSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitSize</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitTime</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Set-NotificationTriggerProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Property of the trigger to set.</maml:para>
            <maml:para>Possible values: State, Latency, OnNotificationAction, OffNotificationAction, EscalationNotificationAction, EscalationLatency, RepeatInterval, Channel, Period, UnitSize, Condition, Threshold, UnitTime</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>State</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Latency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OnNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OffNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EscalationNotificationAction</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EscalationLatency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RepeatInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Channel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Period</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnitSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Condition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnitTime</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Value to set the property to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ObjectId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ObjectId</maml:name>
          <maml:description>
            <maml:para>ID of the notification trigger's parent object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>ID of the trigger to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicManualSet -->
      <command:syntaxItem>
        <maml:name>Set-NotificationTriggerProperty</maml:name>
        <!-- Parameter: ObjectId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ObjectId</maml:name>
          <maml:description>
            <maml:para>ID of the notification trigger's parent object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>ID of the trigger to set the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Channel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channel</maml:name>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Condition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Condition</maml:name>
          <maml:description>
            <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerCondition</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerCondition</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: EscalationLatency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationLatency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EscalationNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EscalationNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Latency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Latency</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OffNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OffNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OnNotificationAction</maml:name>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerPeriod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerPeriod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RepeatInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RepeatInterval</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: State -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerSensorState</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerSensorState</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Threshold -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Threshold</maml:name>
          <command:parameterValue required="true">double</command:parameterValue>
          <dev:type>
            <maml:name>System.Double</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnitSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitSize</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: UnitTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnitTime</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Trigger -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Trigger</maml:name>
        <maml:description>
          <maml:para>Notification Trigger to set the properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ObjectId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>ID of the notification trigger's parent object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: SubId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>SubId</maml:name>
        <maml:description>
          <maml:para>ID of the trigger to set the properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>Property of the trigger to set.</maml:para>
          <maml:para>Possible values: State, Latency, OnNotificationAction, OffNotificationAction, EscalationNotificationAction, EscalationLatency, RepeatInterval, Channel, Period, UnitSize, Condition, Threshold, UnitTime</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerProperty</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>State</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Latency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">OnNotificationAction</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">OffNotificationAction</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EscalationNotificationAction</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EscalationLatency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">RepeatInterval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Channel</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Period</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UnitSize</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Condition</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UnitTime</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>Value to set the property to.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: State -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>State</maml:name>
        <maml:description>
          <maml:para>Possible values: Down, Warning, Unusual, DownPartial, Up, Unknown</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerSensorState</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerSensorState</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Latency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Latency</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OnNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OnNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: OffNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OffNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationNotificationAction</maml:name>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EscalationLatency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EscalationLatency</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RepeatInterval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RepeatInterval</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Channel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Channel</maml:name>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Period -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Period</maml:name>
        <maml:description>
          <maml:para>Possible values: Hour, Day, Week, Month</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerPeriod</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerPeriod</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Week</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Month</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UnitSize -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitSize</maml:name>
        <maml:description>
          <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Condition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Condition</maml:name>
        <maml:description>
          <maml:para>Possible values: Above, Below, Equals, NotEquals, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerCondition</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerCondition</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Above</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Below</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Threshold -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Threshold</maml:name>
        <command:parameterValue required="true">double</command:parameterValue>
        <dev:type>
          <maml:name>System.Double</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnitTime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnitTime</maml:name>
        <maml:description>
          <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TimeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Notification Trigger to set the properties of.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>Get-Sensor -Id 1001 | Get-Trigger | Set-TriggerProperty OnNotificationAction $null</dev:code>
        <dev:remarks>
          <maml:para>Remove the OnNotificationAction of all triggers defined on the object with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>Get-Device -Id 2001 | Get-Trigger -Type Threshold | Set-TriggerProperty -Latency 40 -Channel Primary</dev:code>
        <dev:remarks>
          <maml:para>Modify the Latency and Channel properties of all Threshold Triggers on the device with ID 2001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Notification-Triggers#modify-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NotificationTriggerParameters</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Copy-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Copy-Object</command:name>
      <command:verb>Copy</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Clones a sensor, device, group or notification trigger within PRTG.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Clone-Object cmdlet duplicates a PRTG Sensor, Device, Group or Notification Trigger, including all objects defined under it (such as all sensors of a device, or all devices and sensors of a group).</maml:para>
      <maml:para>Clone-Object can operate in two modes: Clone From and Clone To. In Clone From mode (the default) objects you wish to clone are piped into Clone-Object, requiring you to specify the Object ID of the parent the cloned object will sit under. In Clone To mode, objects you wish to clone a single object to are piped to Clone-Object, requiring you to specify the ID of the object you wish to clone.</maml:para>
      <maml:para>Sensors can only be cloned to Device objects, whereas devices and groups can both cloned to other groups or directly under a probe.</maml:para>
      <maml:para>When cloning sensors, devices and groups objects (in Clone From mode), a name can optionally be specified. When cloning sensors and groups, if a name is not specified the name of the original sensor or group will be used. When cloning devices, if a name is not specified PrtgAPI will automatically name the device as "Clone of &lt;device&gt;, where &lt;device&gt; is the name of the original device. When cloning devices, a Hostname/IP Address can optionally be specified. If a Hostname/IP Address is ommitted, PrtgAPI will use the name of the device as the hostname. Cloning a notification trigger with Clone-Object is equivalent to passing a trigger to the New-TriggerParameters cmdlet, followed by Add-NotificationTrigger.</maml:para>
      <maml:para>To clone a single child object to multiple destination objects, the -SourceId parameter can be specified. When operating in Clone To mode, Clone-Object will automatically assign the newly created object the same name as the source object. When Clone-Object executes, it will automatically attempt to resolve the target object specified by the -SourceId parameter. If -SourceId cannot be resolved to a valid sensor, device or group, Clone-Object will throw an exception specifying that the specified object ID is not valid. If the list of objects piped to Clone-Object includes the parent of the object specified to -SourceId, you can skip this parent by specifying -SkipParent.</maml:para>
      <maml:para>When an object has been cloned, by default Clone-Object will attempt to automatically resolve the object into its resultant Sensor, Device, Group or NotificationTrigger object. Based on the speed of your PRTG Server, this can sometimes result in a delay of 5-10 seconds due to the delay with which PRTG clones the object. If Clone-Object cannot resolve the resultant object on the first attempt, PrtgAPI will make a further 4 retries, pausing for a successively greater duration between each try. After each failed attempt a warning will be displayed indicating the number of attempts remaining. Object resolution can be aborted at any time by pressing an escape sequence such as Ctrl-C.</maml:para>
      <maml:para>If you do not wish to resolve the resultant object, you can specify -Resolve:$false, which will cause Clone-Object to output a clone summary, including the object ID, name and hostname (for devices) of the new object. When cloning triggers, is -Resolve:$false is specified, no summary will be returned (as PRTG does not automatically return any information regarding cloned triggers).</maml:para>
      <maml:para>As PRTG pauses all cloned sensors, devices and groups by default, it is generally recommended to resolve the new object so that you may unpause the object with Resume-Object. Objects can alternatively be resumed as Clone-Object progresses by specifying the -Resume parameter, however note that this will cause an additional resume API request to be executed for every cloned object, as opposed to Resume-Object which will simply resume all of the cloned objects in one go once all of the objects have been created.</maml:para>
      <maml:para>Object types that are not conventionally supported by the Clone-Object cmdlet can still be cloned by specifying both a -SourceId and -DestinationId. When cloning objects that fall outside the conventional object tree (such as Maps and Notification Actions) the -DestinationId will always be ignored in favour of the appropriate System object for that object type (such as the Notifications (ID: -3) object for Notification Actions). If a -DestinationId is not specified alongside a -SourceId, the source ID's parent will automatically be used.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: SensorToDestinationSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to rename the cloned object to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resume -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resume</maml:name>
          <maml:description>
            <maml:para>Resume the object immediately after cloning it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DeviceToDestinationSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to rename the cloned object to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Host</maml:name>
          <maml:description>
            <maml:para>The hostname or IP Address to set on the cloned device.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resume -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resume</maml:name>
          <maml:description>
            <maml:para>Resume the object immediately after cloning it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: GroupToDestinationSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to rename the cloned object to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resume -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resume</maml:name>
          <maml:description>
            <maml:para>Resume the object immediately after cloning it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TriggerToDestinationSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Trigger -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Trigger</maml:name>
          <maml:description>
            <maml:para>The notification trigger to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name to rename the cloned object to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SourceId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="Id">
          <maml:name>SourceId</maml:name>
          <maml:description>
            <maml:para>The ID of the object to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resume -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resume</maml:name>
          <maml:description>
            <maml:para>Resume the object immediately after cloning it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TargetForSourceSet -->
      <command:syntaxItem>
        <maml:name>Copy-Object</maml:name>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The object to clone the object specified by the SourceId to.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SourceId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="Id">
          <maml:name>SourceId</maml:name>
          <maml:description>
            <maml:para>The ID of the object to clone.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Resume -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resume</maml:name>
          <maml:description>
            <maml:para>Resume the object immediately after cloning it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SkipParent -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SkipParent</maml:name>
          <maml:description>
            <maml:para>Indicates that the -Destination specified for -SourceId should be skipped if it is the -SourceId's parent.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: DestinationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>DestinationId</maml:name>
        <maml:description>
          <maml:para>The ID of the device (for sensors), group or probe (for groups and devices) that will hold the cloned object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name to rename the cloned object to.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Host -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Host</maml:name>
        <maml:description>
          <maml:para>The hostname or IP Address to set on the cloned device.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The sensor to clone.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to clone.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Group -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>The group to clone.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Group</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Trigger -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Trigger</maml:name>
        <maml:description>
          <maml:para>The notification trigger to clone.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SourceId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="Id">
        <maml:name>SourceId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to clone.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="Id">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to clone.</maml:para>
          <maml:para>This is an alias of the SourceId parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: SkipParent -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SkipParent</maml:name>
        <maml:description>
          <maml:para>Indicates that the -Destination specified for -SourceId should be skipped if it is the -SourceId's parent.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Destination -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>The object to clone the object specified by the SourceId to.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resume -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resume</maml:name>
        <maml:description>
          <maml:para>Resume the object immediately after cloning it.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor to clone.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to clone.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The group to clone.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The notification trigger to clone.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to clone the object specified by the SourceId to.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1234 | Clone-Object -DestinationId 5678</dev:code>
        <dev:remarks>
          <maml:para>Clone the sensor with ID 1234 to the device with ID 5678</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1234 | Clone-Object -DestinationId 5678 MyNewSensor</dev:code>
        <dev:remarks>
          <maml:para>Clone the sensor with ID 1234 to the device with ID 5678 renamed as "MyNewSensor"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device *exch* | Clone-Object -SourceId 2002</dev:code>
        <dev:remarks>
          <maml:para>Clone the object with ID 2002 to all devices whose name contains "exch"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1234 | Clone-Object -DestinationId 5678 -Resolve:$false</dev:code>
        <dev:remarks>
          <maml:para>Clone the sensor with ID 1234 into the device with ID 5678 without resolving the resultant PrtgObject</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1234 | Clone-Object -DestinationId 5678 MyNewDevice 192.168.1.1</dev:code>
        <dev:remarks>
          <maml:para>Clone the device with ID 1234 into the group or probe with ID 5678 renamed as "MyNewDevice" with IP Address 192.168.1.1</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 1234 | Get-Trigger | Clone-Object -DestinationId 5678</dev:code>
        <dev:remarks>
          <maml:para>Clone all notification triggers (both inherited and explicitly defined) on the probe with ID 1234 to the object with ID 5678</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Clone-Object -Id 1001 -DestinationId 2002</dev:code>
        <dev:remarks>
          <maml:para>Clone the object with ID 1001 to under the object with ID 2002.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device *exch* | Clone-Object -SourceId 2002 | Resume-Object</dev:code>
        <dev:remarks>
          <maml:para>Clone the object with ID 2002 to all devices whose name contains "exch" and resume all the created objects once they have been created.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device *exch* | Clone-Object -SourceId 2002 -Resume</dev:code>
        <dev:remarks>
          <maml:para>Clone the object with ID 2002 to all devices whose name contains "exch", resuming each object as it is created.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; Clone-Object -Id 300 "New Notification Trigger"</dev:code>
        <dev:remarks>
          <maml:para>Clone the Notification Trigger with ID 300, automatically placing the trigger under the "Notifications" system object.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#cloning-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Trigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTriggerParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-Object</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Object</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Retrieves objects from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Object cmdlet retrieves objects from a PRTG Server. Get-Object is capable of retrieving any object with a unique identifier within the PRTG object hierarchy, including internal system nodes.</maml:para>
      <maml:para>By default, any objects returned by the Get-Object cmdlet are returned in their raw PrtgObject state. For objects that are natively supported by PrtgAPI's type system, these objects can be transformed into their "true" forms by specifying the -Resolve parameter. When specified, Get-Object will group objects of a similar type up together to re-retrieve them via as few API calls as possible. As objects must effectively be retrieved twice, care should be taken when attempting to resolve a large number of objects.</maml:para>
      <maml:para>Objects returned by Get-Object can be limited those of a particular ObjectType by specifying the -Type parameter. When filtering by sensors, the underlying raw type name must be specified (e.g. "ping", "wmivolume"). If the generic object type Sensor is specified, Get-Object will refrain from filtering by type server side, such that the complete type of each object may be inspected client side.</maml:para>
      <maml:para>The PRTG object hierarchy can also be explored by specifying the parent -Object to retrieve children of. When an -Object is specified, only children directly descended from the specified object will be returned.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-Object</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve direct descendents of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Specifies that returned objects should be resolved to their most derived object types (Sensor, Device, Probe, etc.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Filter results to those of a specified ObjectType.</maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to retrieve direct descendents of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Specifies that returned objects should be resolved to their most derived object types (Sensor, Device, Probe, etc.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Filter results to those of a specified ObjectType.</maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve direct descendents of.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: PrtgObject -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all uniquely identifiable objects.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object -Id 810</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the object with ID 810 (Web Server Options).</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object *report*</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all objects whose name contains "report".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object -Type Device,System</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all Device and System objects.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object -Type wmivolume -Resolve</dev:code>
        <dev:remarks>
          <maml:para>Get all WMI Volume sensor objects and resolve them to objects of type Sensor.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Object -Id -3 | Get-Object</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all objects under the system "Notifications" object.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Other-Objects#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationAction</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgSchedule</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ObjectProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ObjectProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Move-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Move-Object</command:name>
      <command:verb>Move</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Moves a device or group within the PRTG Object Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Move-Object cmdlet allows you to move a device or group to another group or probe within PRTG. Any device or group can be moved to any other group or probe, with the exception of special objects such as the "Probe Device" object under each probe, as well as the Root group (ID: 0).</maml:para>
      <maml:para>For object types not yet supported by Move-Object, an -Id can be specified pointing to any valid PRTG object. If a source/destination ID combination is specified that is not valid (such as placing a device under a sensor) an error will be thrown.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DeviceSet -->
      <command:syntaxItem>
        <maml:name>Move-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The group or probe to move the object to. This cannot be the Root PRTG Group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to move to another group or probe.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: GroupSet -->
      <command:syntaxItem>
        <maml:name>Move-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The group or probe to move the object to. This cannot be the Root PRTG Group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to move to another group or probe.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Group</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Group</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Move-Object</maml:name>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <maml:description>
            <maml:para>The group or probe to move the object to. This cannot be the Root PRTG Group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SourceId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to move.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to move to another group or probe.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Group -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>The group to move to another group or probe.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Group</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SourceId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to move.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="SourceId">
        <maml:name>SourceId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to move.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: DestinationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>DestinationId</maml:name>
        <maml:description>
          <maml:para>The group or probe to move the object to. This cannot be the Root PRTG Group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to move to another group or probe.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Group</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The group to move to another group or probe.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Move-Object 5678</dev:code>
        <dev:remarks>
          <maml:para>Move all devices named dc-1 to under the object with ID 5678</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Move-Object -Id 1001 -DestinationId 2002</dev:code>
        <dev:remarks>
          <maml:para>Move the object with ID 1001 to under the object with ID 2002</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Organization#moving-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Remove-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-Object</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Permanently removes an object from PRTG.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-Object cmdlet permanently removes an object from PRTG. Some objects cannot be deleted (e.g. the root PRTG group (ID 0) and will generate an exception if you attempt to do so.</maml:para>
      <maml:para>If invoked with no arguments other than the object to be deleted, Remove-Object will prompt for confirmation of each object to be deleted. If you wish to delete multiple objects, it is recommend to first run Remove-Object with the -WhatIf parameter, and then re-run with the -Force parameter if the results of -WhatIf look correct.</maml:para>
      <maml:para>Remove-Object is capable of operating in Batch Mode. In Batch Mode, Remove-Object will not execute a request for each individual object, but will rather store each item in a queue to remove all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects. Due to the inherent danger in batch removing multiple objects so quickly, Remove-Object will only operate in Batch mode if -Batch is specified. If Remove-Object is invoked with -Force, -Batch mode will be automatically enabled unless specified otherwise.</maml:para>
      <maml:para>When invoked with -WhatIf, Remove-Object will list all objects that would have been deleted, along with their corresponding object IDs. Even if you are sure of the objects you wish to delete, it is recommended to always run with -WhatIf first to confirm you have specified the correct objects and that PrtgAPI has interpreted your request in the way you intended.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Remove-Object</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to remove.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces an object to be removed without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Remove-Object</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to remove.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces an object to be removed without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to remove.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to remove.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces an object to be removed without displaying a confirmation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to remove.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Remove-Object -WhatIf
"What if: Performing the operation "Remove-Object" on target "'dc-1' (ID: 2001)""</dev:code>
        <dev:remarks>
          <maml:para>Preview what will happen when you attempt to remove all devices named 'dc-1'</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Remove-Object -Force</dev:code>
        <dev:remarks>
          <maml:para>Remove all devices with name 'dc-1' without prompting for confirmation.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Remove-Object -Id 1001 -Force</dev:code>
        <dev:remarks>
          <maml:para>Removes the object with ID 1001 without prompting for confirmation.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Organization#removing-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Rename-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Rename-Object</command:name>
      <command:verb>Rename</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Renames a PRTG object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Rename-Object cmdlet allows you to rename a Sensor, Device, Group or Probe within PRTG. When renaming objects, it is recommended to first execute Rename-Object first with the -WhatIf parameter. This will show you all the objects that will be renamed when you execute the command normally.</maml:para>
      <maml:para>By default, Rename-Object will operate in Batch Mode. In Batch Mode, Rename-Object will not execute a request for each individual object, but will rather store each item in a queue to rename all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Rename-Object will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Rename-Object</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The new name to give the object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to rename.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Rename-Object</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The new name to give the object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to rename.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to rename.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to rename.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The new name to give the object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to rename.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor Memory | Rename-Object "Memory Free"</dev:code>
        <dev:remarks>
          <maml:para>Rename all objects named "Memory" (case insensitive) to "Memory Free"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor Memory | Rename-Object "Memory Free" -WhatIf
What if: Performing the operation "Rename-Object" on target "'Memory' (ID: 2001)"</dev:code>
        <dev:remarks>
          <maml:para>Preview what will happen when you attempt to rename all objects named "Memory"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Rename-Object -Id 1001 "Memory Free"</dev:code>
        <dev:remarks>
          <maml:para>Rename the object with ID 1001 to "Memory Free"</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Organization#renaming-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Resume-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Resume-Object</command:name>
      <command:verb>Resume</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Resumes a PRTG object from a paused or simulated error state.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Resume-Object cmdlet resumes monitoring an object that has previously been stopped due to manually pausing or simulating an error state on the object.</maml:para>
      <maml:para>By default, Resume-Object will operate in Batch Mode. In Batch Mode, Resume-Object will not execute a request for each individual object, but will rather store each item in a queue to resume all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Resume-Object will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Resume-Object</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to resume.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Resume-Object</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to resume.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to resume.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to resume.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to resume.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Status PausedByUser | Resume-Object</dev:code>
        <dev:remarks>
          <maml:para>Resume all sensors that have been paused by the user. Note: if parent object has been manually paused, child objects will appear PausedByUser but will not be able to be unpaused.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Resume-Object -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Resumes the object with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/State-Manipulation#resume-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Suspend-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Suspend-Object</command:name>
      <command:verb>Suspend</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Disables monitoring on a PRTG object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Pause-Object cmdlet disables monitoring of an object in PRTG. When an object is paused, all children of the object are paused as well. Child objects can be independently paused and unpaused while their parent is paused, however their states will not modify as long as their parent is overriding them.</maml:para>
      <maml:para>When pausing an object, you must specify how long to pause the object for. While in a paused state PRTG will not attempt to execute any sensor objects covered by the paused object. Objects that have not been paused forever will be automatically unpaused when their pause duration expires. For information on how to unpause an object manually, see Resume-Object.</maml:para>
      <maml:para>By default, Pause-Object will operate in Batch Mode. In Batch Mode, Pause-Object will not execute a request for each individual object, but will rather store each item in a queue to pause all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Pause-Object will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Duration -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Duration</maml:name>
          <maml:description>
            <maml:para>The duration to pause the object for, in minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UntilSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Until -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Until</maml:name>
          <maml:description>
            <maml:para>The datetime at which the object should be unpaused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ForeverSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Forever -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Forever</maml:name>
          <maml:description>
            <maml:para>Indicates the object should be paused indefinitely.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Duration -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Duration</maml:name>
          <maml:description>
            <maml:para>The duration to pause the object for, in minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UntilManualSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Until -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Until</maml:name>
          <maml:description>
            <maml:para>The datetime at which the object should be unpaused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ForeverManualSet -->
      <command:syntaxItem>
        <maml:name>Suspend-Object</maml:name>
        <!-- Parameter: Forever -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Forever</maml:name>
          <maml:description>
            <maml:para>Indicates the object should be paused indefinitely.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to pause.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to pause.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to pause.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Duration -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Duration</maml:name>
        <maml:description>
          <maml:para>The duration to pause the object for, in minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Until -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Until</maml:name>
        <maml:description>
          <maml:para>The datetime at which the object should be unpaused.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Forever -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Forever</maml:name>
        <maml:description>
          <maml:para>Indicates the object should be paused indefinitely.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <maml:description>
          <maml:para>A message to display on the object indicating the reason it is paused.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to pause.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>ID of the object to pause.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 2001 | Pause-Object -Duration 60</dev:code>
        <dev:remarks>
          <maml:para>Pause the object with ID 2001 for 60 minutes.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe *chicago* | Pause-Object -Until (Get-Date).AddDays(2) -Message "Office move in progress"</dev:code>
        <dev:remarks>
          <maml:para>Pause all probes whose names contain "chicago" for three days with a message explaining the reason the object was paused.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device fw-1 | Pause-Object -Forever -Message "Decomissioning"</dev:code>
        <dev:remarks>
          <maml:para>Pause all devices named "fw-1" forever with a message explaining the reason the object was paused.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Pause-Object -Id 1001 -Duration 10</dev:code>
        <dev:remarks>
          <maml:para>Pause the object with ID 1001 for 10 minutes.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/State-Manipulation#pause-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-Object</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Update-Object -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Update-Object</command:name>
      <command:verb>Update</command:verb>
      <command:noun>Object</command:noun>
      <maml:description>
        <maml:para>Requests an object and any if its children refresh themselves immediately.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Refresh-Object cmdlet causes an object to refresh itself. Sensor objects automatically refresh according to their Scanning Interval. Refresh-Object allows you to bypass this interval and request the sensor update immediately. If Refresh-Object is applied to a Device, Group or Probe, all sensors under that object will be refreshed.</maml:para>
      <maml:para>Sensor Factory sensors do not support being manually refreshed.</maml:para>
      <maml:para>By default, Refresh-Object will operate in Batch Mode. In Batch Mode, Refresh-Object will not execute a request for each individual object, but will rather store each item in a queue to refresh all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Refresh-Object will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Update-Object</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to refresh.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Update-Object</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to refresh.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to refresh.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to refresh.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to refresh.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 2001 | Refresh-Object</dev:code>
        <dev:remarks>
          <maml:para>Refresh the sensor with object ID 2001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 2000 | Refresh-Object</dev:code>
        <dev:remarks>
          <maml:para>Refresh all sensors under the device with ID 2000.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Refresh-Object -Id 2001</dev:code>
        <dev:remarks>
          <maml:para>Refreshes the object with the ID 2001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/State-Manipulation#refresh-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-ObjectLog -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-ObjectLog</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ObjectLog</command:noun>
      <maml:description>
        <maml:para>Retrieves object logs from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-ObjectLog cmdlet retrieves event logs from a PRTG Server. If no object is specified, Get-ObjectLog will retrieve results from the Root PRTG Group (ID: 0). Logs are ordered from newest to oldest. When retrieving logs from an object, all logs on child objects are also included. By default, PRTG only stores 30 days worth of logs.</maml:para>
      <maml:para>If no date range or count is specified, by default Get-ObjectLog will retrieve all logs defined on the specified object for the last 7 days unless the specified object is the root group (ID: 0) or a probe, in which cause only logs that have occurred today will be retrieved.</maml:para>
      <maml:para>When specifying a date range, well known constants as well as manual start and end times can be specified. When specifying a date and time, the meaning of -StartDate and -EndDate are dependent upon the order with which the logs are being output. When logs are ordered from newest to oldest -StartDate refers to the time closest to now, while -EndDate represents the time furthest away from now. When logs are ordered from oldest to newest (i.e. when -Wait is specified) -StartDate represents the point in time logs furthest away from now logs should be retrieved from going into the future.</maml:para>
      <maml:para>Logs can be streamed continuously from a PRTG Object by specifying the -Wait parameter. When -Wait is specified (also aliased as -Tail) PrtgAPI will continuously poll PRTG for new logs according to a specified -Interval, outputting them to the console as they arrive in order from oldest to newest. If no -Interval is specified, by default Get-ObjectLog will poll once per second. A -StartDate can optionally be specified, specifying the initial point in time PrtgAPI should retrieve logs from. When -Wait is specified -EndDate will have no effect. Specifying an -EndDate in conjunction with -Wait will cause a warning to be emitted to the warning stream specifying that the -EndDate parameter will be ignored.</maml:para>
      <maml:para>Logs can be filtered to those of one or more event types by specifying the -Status parameter. Logs can also be filtered according to their event name, however note that name based filtering of Get-ObjectLog is performed client side, not server side. As such, specifying a -Name in conjunction with -Count will not work. This can be cirvumvented using Select-Object with the -First parameter instead.</maml:para>
      <maml:para>Note that while Get-ObjectLog considers the "start time" as being the point in time closest to now and the "end time" as the point in time furthest away from now when logs are ordered from newest to oldest, PRTG's underlying API actually defines these in the opposite way. Since logs are ordered from newest to oldest however, PrtgAPI flips these definitions as to prevent any confusion. Keep this in mind in the event the -Verbose parameter is specified, as the start and end times will appear to be switched. When -Wait is specified the meaning of -StartDate and -EndDate are flipped to match their meaningings in the underlying API so that logs can continuously be retrieved.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DateTimeSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectLog</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve logs until. If no value is specified, defaults to 7 prior from the StartDate.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>Object to retrieve logs for. If no object is specified, defaults to the root object (group ID: 0)</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve logs from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: SystemStart, SystemStop, ProbeIPDenied, ProbeGidDenied, WebServer, UpdateAvailable, GraphCache, Data, SystemInfo, ProbeDenied, NotificationItem, ProbeKeyDenied, NotifyChanged, Info, WMIFallback, UsePerfCounters, FtpConnectionMode, FtpMode, Created, Deleted, Moved, Edited, NewChildObject, ChildObjectDeleted, ChildObjectMoved, MovedObjectInserted, SubnodeCreated, SubnodeDeleted, SubnodeEdited, CreatedFromClone, Activation, Unknown, Resuming, Pausing, PausedByUser, PausedByDependency, PausedBySchedule, Up, Down, Warning, Unusual, Connected, Disconnected, ProbeInfo, PausedByLicense, Active, DownAcknowledged, DownPartial, ProbeApproved, UpdateCheck, SystemError, ReportDone, NewProbe, SmtpConfiguration, NewClusterNode, UpdateApplied, OverloadProtection, InvalidPushDevice, Reminder, GroupDiscoveryStarted, GroupDiscoveryFinished, DiscoveryDeviceFound, DiscoveryTemplateApplied, DiscoveryFailed, ClusterStart, ClusterStop, ClusterInit, ClusterConnection, ClusterNodeConnected, ClusterNodeDisconnected, ClusterMasterChanged, ClusterInfo, MultipleClusterMasters</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogStatus[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogStatus[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SystemStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeIPDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeGidDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WebServer</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateAvailable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphCache</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotificationItem</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeKeyDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Info</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WMIFallback</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UsePerfCounters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpConnectionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Created</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Deleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Moved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Edited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewChildObject</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectMoved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MovedObjectInserted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeCreated</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeEdited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CreatedFromClone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Activation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Resuming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Pausing</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeApproved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateCheck</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ReportDone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SmtpConfiguration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewClusterNode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverloadProtection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InvalidPushDevice</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reminder</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryStarted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryFinished</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryDeviceFound</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryTemplateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryFailed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterConnection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeConnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeDisconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterMasterChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MultipleClusterMasters</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RecordAgeSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectLog</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>Object to retrieve logs for. If no object is specified, defaults to the root object (group ID: 0)</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Period -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Period</maml:name>
          <maml:description>
            <maml:para>Time period to retrieve logs from. If no value is specified, retrieves logs from 7 days ago to the current date and time.</maml:para>
            <maml:para>Possible values: Today, Yesterday, LastWeek, LastMonth, LastSixMonths, LastYear, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">RecordAge</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.RecordAge</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Today</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Yesterday</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastWeek</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastMonth</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastSixMonths</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastYear</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: SystemStart, SystemStop, ProbeIPDenied, ProbeGidDenied, WebServer, UpdateAvailable, GraphCache, Data, SystemInfo, ProbeDenied, NotificationItem, ProbeKeyDenied, NotifyChanged, Info, WMIFallback, UsePerfCounters, FtpConnectionMode, FtpMode, Created, Deleted, Moved, Edited, NewChildObject, ChildObjectDeleted, ChildObjectMoved, MovedObjectInserted, SubnodeCreated, SubnodeDeleted, SubnodeEdited, CreatedFromClone, Activation, Unknown, Resuming, Pausing, PausedByUser, PausedByDependency, PausedBySchedule, Up, Down, Warning, Unusual, Connected, Disconnected, ProbeInfo, PausedByLicense, Active, DownAcknowledged, DownPartial, ProbeApproved, UpdateCheck, SystemError, ReportDone, NewProbe, SmtpConfiguration, NewClusterNode, UpdateApplied, OverloadProtection, InvalidPushDevice, Reminder, GroupDiscoveryStarted, GroupDiscoveryFinished, DiscoveryDeviceFound, DiscoveryTemplateApplied, DiscoveryFailed, ClusterStart, ClusterStop, ClusterInit, ClusterConnection, ClusterNodeConnected, ClusterNodeDisconnected, ClusterMasterChanged, ClusterInfo, MultipleClusterMasters</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogStatus[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogStatus[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SystemStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeIPDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeGidDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WebServer</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateAvailable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphCache</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotificationItem</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeKeyDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Info</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WMIFallback</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UsePerfCounters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpConnectionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Created</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Deleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Moved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Edited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewChildObject</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectMoved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MovedObjectInserted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeCreated</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeEdited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CreatedFromClone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Activation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Resuming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Pausing</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeApproved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateCheck</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ReportDone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SmtpConfiguration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewClusterNode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverloadProtection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InvalidPushDevice</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reminder</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryStarted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryFinished</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryDeviceFound</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryTemplateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryFailed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterConnection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeConnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeDisconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterMasterChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MultipleClusterMasters</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DateTimeManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectLog</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve logs until. If no value is specified, defaults to 7 prior from the StartDate.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to retrieve logs for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <maml:description>
            <maml:para>Interval with which Get-ObjectLog should poll for new records when using -Wait.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve logs from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: SystemStart, SystemStop, ProbeIPDenied, ProbeGidDenied, WebServer, UpdateAvailable, GraphCache, Data, SystemInfo, ProbeDenied, NotificationItem, ProbeKeyDenied, NotifyChanged, Info, WMIFallback, UsePerfCounters, FtpConnectionMode, FtpMode, Created, Deleted, Moved, Edited, NewChildObject, ChildObjectDeleted, ChildObjectMoved, MovedObjectInserted, SubnodeCreated, SubnodeDeleted, SubnodeEdited, CreatedFromClone, Activation, Unknown, Resuming, Pausing, PausedByUser, PausedByDependency, PausedBySchedule, Up, Down, Warning, Unusual, Connected, Disconnected, ProbeInfo, PausedByLicense, Active, DownAcknowledged, DownPartial, ProbeApproved, UpdateCheck, SystemError, ReportDone, NewProbe, SmtpConfiguration, NewClusterNode, UpdateApplied, OverloadProtection, InvalidPushDevice, Reminder, GroupDiscoveryStarted, GroupDiscoveryFinished, DiscoveryDeviceFound, DiscoveryTemplateApplied, DiscoveryFailed, ClusterStart, ClusterStop, ClusterInit, ClusterConnection, ClusterNodeConnected, ClusterNodeDisconnected, ClusterMasterChanged, ClusterInfo, MultipleClusterMasters</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogStatus[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogStatus[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SystemStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeIPDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeGidDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WebServer</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateAvailable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphCache</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotificationItem</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeKeyDenied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Info</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WMIFallback</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UsePerfCounters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpConnectionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FtpMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Created</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Deleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Moved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Edited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewChildObject</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChildObjectMoved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MovedObjectInserted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeCreated</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeDeleted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SubnodeEdited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CreatedFromClone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Activation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Resuming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Pausing</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeApproved</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateCheck</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SystemError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ReportDone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SmtpConfiguration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NewClusterNode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpdateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverloadProtection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InvalidPushDevice</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reminder</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryStarted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GroupDiscoveryFinished</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryDeviceFound</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryTemplateApplied</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiscoveryFailed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStart</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterStop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterConnection</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeConnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterNodeDisconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterMasterChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ClusterInfo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MultipleClusterMasters</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Wait -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Tail">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>Indicates Get-ObjectLog should continuously retrieve new records from PRTG according to a specified polling -Interval.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>Object to retrieve logs for. If no object is specified, defaults to the root object (group ID: 0)</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to retrieve logs for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: StartDate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartDate</maml:name>
        <maml:description>
          <maml:para>Start time to retrieve logs from. If no value is specified, defaults to the current date and time.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: EndDate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EndDate</maml:name>
        <maml:description>
          <maml:para>End time to retrieve logs until. If no value is specified, defaults to 7 prior from the StartDate.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Period -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Period</maml:name>
        <maml:description>
          <maml:para>Time period to retrieve logs from. If no value is specified, retrieves logs from 7 days ago to the current date and time.</maml:para>
          <maml:para>Possible values: Today, Yesterday, LastWeek, LastMonth, LastSixMonths, LastYear, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">RecordAge</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.RecordAge</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Today</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Yesterday</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastWeek</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastMonth</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastSixMonths</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastYear</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Only retrieve objects that match a specific status.</maml:para>
          <maml:para>Possible values: SystemStart, SystemStop, ProbeIPDenied, ProbeGidDenied, WebServer, UpdateAvailable, GraphCache, Data, SystemInfo, ProbeDenied, NotificationItem, ProbeKeyDenied, NotifyChanged, Info, WMIFallback, UsePerfCounters, FtpConnectionMode, FtpMode, Created, Deleted, Moved, Edited, NewChildObject, ChildObjectDeleted, ChildObjectMoved, MovedObjectInserted, SubnodeCreated, SubnodeDeleted, SubnodeEdited, CreatedFromClone, Activation, Unknown, Resuming, Pausing, PausedByUser, PausedByDependency, PausedBySchedule, Up, Down, Warning, Unusual, Connected, Disconnected, ProbeInfo, PausedByLicense, Active, DownAcknowledged, DownPartial, ProbeApproved, UpdateCheck, SystemError, ReportDone, NewProbe, SmtpConfiguration, NewClusterNode, UpdateApplied, OverloadProtection, InvalidPushDevice, Reminder, GroupDiscoveryStarted, GroupDiscoveryFinished, DiscoveryDeviceFound, DiscoveryTemplateApplied, DiscoveryFailed, ClusterStart, ClusterStop, ClusterInit, ClusterConnection, ClusterNodeConnected, ClusterNodeDisconnected, ClusterMasterChanged, ClusterInfo, MultipleClusterMasters</maml:para>
        </maml:description>
        <command:parameterValue required="true">LogStatus[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.LogStatus[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">SystemStart</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SystemStop</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeIPDenied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeGidDenied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WebServer</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpdateAvailable</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GraphCache</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SystemInfo</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeDenied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotificationItem</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeKeyDenied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Info</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WMIFallback</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UsePerfCounters</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FtpConnectionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FtpMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Created</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Deleted</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Moved</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Edited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NewChildObject</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ChildObjectDeleted</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ChildObjectMoved</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MovedObjectInserted</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SubnodeCreated</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SubnodeDeleted</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SubnodeEdited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CreatedFromClone</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Activation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Resuming</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Pausing</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeInfo</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeApproved</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpdateCheck</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SystemError</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ReportDone</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NewProbe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SmtpConfiguration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NewClusterNode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpdateApplied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">OverloadProtection</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InvalidPushDevice</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Reminder</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GroupDiscoveryStarted</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GroupDiscoveryFinished</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DiscoveryDeviceFound</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DiscoveryTemplateApplied</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DiscoveryFailed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterStart</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterStop</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterInit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterConnection</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterNodeConnected</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterNodeDisconnected</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterMasterChanged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ClusterInfo</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MultipleClusterMasters</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Wait -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Tail">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>Indicates Get-ObjectLog should continuously retrieve new records from PRTG according to a specified polling -Interval.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Tail">
        <maml:name>Tail</maml:name>
        <maml:description>
          <maml:para>Indicates Get-ObjectLog should continuously retrieve new records from PRTG according to a specified polling -Interval.</maml:para>
          <maml:para>This is an alias of the Wait parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <maml:description>
          <maml:para>Interval with which Get-ObjectLog should poll for new records when using -Wait.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Object to retrieve logs for. If no object is specified, defaults to the root object (group ID: 0)</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Log -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Log</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs from the root group (ID: 0) from today.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog -Count 4000</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the last 4000 logs from the root group.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Get-ObjectLog</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs on device "dc-1" for the last week.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog -Start (Get-Date).AddDays(-3)</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs from the root node from 3 and 4 days ago.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 2460 | Get-ObjectLog -EndDate (Get-Date).AddDays(-4)</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs from the sensor with ID 2460 between now and 4 days ago.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe *contoso* | Get-ObjectLog -Since LastWeek</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs from all probes whose name contains "contoso" between now and last week.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog -Status Disconnected -Count 3</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the last 3 times a probe disconnected.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device exch-1 | Get-ObjectLog ping | select -First 4</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the last 4 events that occurred to the sensor named "ping" on the device named "exch-1".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog -Id 1001 -EndDate $null</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all logs from the object with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectLog -Status Connected -Wait</dev:code>
        <dev:remarks>
          <maml:para>Continuously poll PRTG for new Probe Connected events, requesting once every second.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Historical-Information#logs-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-ObjectPosition -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-ObjectPosition</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ObjectPosition</command:noun>
      <maml:description>
        <maml:para>Adjusts the position of an object within its parent.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-ObjectPosition cmdlet adjusts the position of an object under its parent node. Set-ObjectPosition allows you to specify either the direction to move the object in (Up, Down, Top, Bottom) or an absolute number to move the object to a fixed position. If a numeric position lower than 1 or higher than the total number of objects under the parent object is specified, PRTG will automatically move the object to the top or bottom of the list.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectPosition</maml:name>
        <!-- Parameter: Position -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Position</maml:name>
          <maml:description>
            <maml:para>Position to move the object to. If this value is higher than the number of items in the parent object, this object will be moved to the position closest possible position.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Position</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.Position</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Represents an absolute or directional position.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to reposition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectPosition</maml:name>
        <!-- Parameter: Position -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Position</maml:name>
          <maml:description>
            <maml:para>Position to move the object to. If this value is higher than the number of items in the parent object, this object will be moved to the position closest possible position.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Position</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.Position</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Represents an absolute or directional position.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to reposition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to reposition.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to reposition.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Position -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Position</maml:name>
        <maml:description>
          <maml:para>Position to move the object to. If this value is higher than the number of items in the parent object, this object will be moved to the position closest possible position.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Position</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.Position</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Represents an absolute or directional position.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to reposition.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 3045 | Set-ObjectPosition 1</dev:code>
        <dev:remarks>
          <maml:para>Move the sensor with ID 3045 to be first in the list under its parent.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Set-ObjectPosition Up</dev:code>
        <dev:remarks>
          <maml:para>Move the sensor with ID 1001 up a single position from its current location.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Set-ObjectPosition -Id 1001 Up</dev:code>
        <dev:remarks>
          <maml:para>Move the object with ID 1001 uo a single position from its current location.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Organization#positioning-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-ObjectProperty -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-ObjectProperty</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ObjectProperty</command:noun>
      <maml:description>
        <maml:para>Retrieves properties and settings of a PRTG Object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-ObjectProperty cmdlet retrieves properties and settings of a PRTG Object, as found on the "Settings" tab within the PRTG UI. Properties retrieved by Get-ObjectProperty may not necessarily be active depending on the value of their dependent property (e.g. the Interval will not take effect if InheritInterval is $true).</maml:para>
      <maml:para>Get-ObjectProperty supports retrieving type safe and raw values. These values can be retrieved as part of larger property collections (by specifying no parameters or -Raw) or as individual values (-Property or -RawProperty). When retrieving property collections Get-ObjectProperty will fail to retrieve the expected properties if the current user has read only access to the specified object. To retrieve properties from read only objects a specific -Property or -RawProperty must be specified.</maml:para>
      <maml:para>Properties that are not currently supported by Get-ObjectProperty can be retrieved by specifying the -RawProperty parameter. Raw property names can be found by inspecting the "name" attribute of the &lt;input/&gt; tag under the object's Settings page in the PRTG UI. Unlike Set-ObjectProperty, raw property names do not need to include their trailing underscores when used with Get-ObjectProperty. If a trailing underscore is used, PrtgAPI will automatically truncate it. When retrieving raw properties please note that PRTG does not support the retrieval of Inheritance related properties via raw lookups.</maml:para>
      <maml:para>By default raw properties will display their values in their "raw" format, i.e. their literal string value or numeric representation (such as 0 or 1 for an "option" setting). If -Text is specified when retrieving an "option" property, the property's "label" in the PRTG UI will be returned instead of its numeric representation.</maml:para>
      <maml:para>Properties can be retrieved by piping in a PrtgObject or by specifying a single object ID. When retrieving by -Id individual properties of sub objects (such as Channels and Notification Triggers) can be retrieved by specifying a -SubId as well as -RawSubType. As sub objects typically include all properties known to them on their regular objects, retrieval of individual sub object properties is generally not necessary.</maml:para>
      <maml:para>In order to provide type safety when modifying properties, all properties supported by Set-ObjectProperty perform a lookup against their corresponding property in Get-ObjectProperty. If the type of value passed to Set-ObjectProperty does not match the property's expected type, PrtgAPI will attempt to parse the value into the expected type. For more information, see Set-ObjectProperty.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PropertySet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The name of one or more properties to retrieve. Note: PRTG does not support retrieving inheritance settings in via direct API calls.</maml:para>
            <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
          </maml:description>
          <command:parameterValue required="true">ObjectProperty[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ObjectProperty[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawPropertySet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawProperty -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawProperty</maml:name>
          <maml:description>
            <maml:para>The raw name of one or more properties to retrieve. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG. Note: PRTG does not support retrieving raw section inheritance settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Text -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Specifies whether to display option properties using their label names instead their internal numeric values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Retrieve all raw properties from the target object.</maml:para>
            <maml:para>Note: objects may have additional properties that cannot be retrieved via this method. For more information, see Get-Help about_ObjectProperty</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PropertyManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The name of one or more properties to retrieve. Note: PRTG does not support retrieving inheritance settings in via direct API calls.</maml:para>
            <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
          </maml:description>
          <command:parameterValue required="true">ObjectProperty[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ObjectProperty[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RawProperty -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawProperty</maml:name>
          <maml:description>
            <maml:para>The raw name of one or more properties to retrieve. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG. Note: PRTG does not support retrieving raw section inheritance settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Text -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Specifies whether to display option properties using their label names instead their internal numeric values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawSubPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RawProperty -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawProperty</maml:name>
          <maml:description>
            <maml:para>The raw name of one or more properties to retrieve. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG. Note: PRTG does not support retrieving raw section inheritance settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawSubType -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawSubType</maml:name>
          <maml:description>
            <maml:para>The type of the sub object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>The sub ID of the object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Text -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Specifies whether to display option properties using their label names instead their internal numeric values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawManualSet -->
      <command:syntaxItem>
        <maml:name>Get-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve properties for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Retrieve all raw properties from the target object.</maml:para>
            <maml:para>Note: objects may have additional properties that cannot be retrieved via this method. For more information, see Get-Help about_ObjectProperty</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to retrieve properties for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve properties for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: SubId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>SubId</maml:name>
        <maml:description>
          <maml:para>The sub ID of the object to retrieve properties for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: RawSubType -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawSubType</maml:name>
        <maml:description>
          <maml:para>The type of the sub object to retrieve properties for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>The name of one or more properties to retrieve. Note: PRTG does not support retrieving inheritance settings in via direct API calls.</maml:para>
          <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
        </maml:description>
        <command:parameterValue required="true">ObjectProperty[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ObjectProperty[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: RawProperty -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawProperty</maml:name>
        <maml:description>
          <maml:para>The raw name of one or more properties to retrieve. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG. Note: PRTG does not support retrieving raw section inheritance settings.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Raw -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Raw</maml:name>
        <maml:description>
          <maml:para>Retrieve all raw properties from the target object.</maml:para>
          <maml:para>Note: objects may have additional properties that cannot be retrieved via this method. For more information, see Get-Help about_ObjectProperty</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Text -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Specifies whether to display option properties using their label names instead their internal numeric values.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve properties for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | Get-ObjectProperty</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all properties and settings of the device with ID 1001</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | Get-ObjectProperty -RawProperty name_</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the value of raw property "name"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | Get-ObjectProperty -RawProperty query_ -Text</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the "query" field of a REST Custom sensor.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectProperty -Id 1001 -Raw</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all raw properties of the object with ID 1001</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-ObjectProperty -Id 1001 -SubId 1 -RawSubType channel -RawProperty limitmaxerror</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the upper error limit property of the channel with ID 1 on the object with ID 1001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Property-Manipulation#get-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ObjectProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-ObjectProperty -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-ObjectProperty</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ObjectProperty</command:noun>
      <maml:description>
        <maml:para>Modifies the value of a PRTG object property.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-ObjectProperty cmdlet modifies properties and settings of PRTG Objects including Sensors, Devices, Groups Probes, Notification Actions and Schedules. All supported properties that can be modified are typesafe, using the type of the property on the Settings object returned from Get-ObjectProperty.</maml:para>
      <maml:para>When a value is specified, Set-ObjectProperty will attempt to parse the value into its expected type. If the type cannot be parsed, an exception will be thrown indicating the type of the object specified and the type of value that was expected. In the case of enums, Set-ObjectProperty will list all valid values of the target type so that you may know how exactly to interface with the specified property. In the event you wish to modify multiple properties in a single request, Set-ObjectProperty provides dynamically generated parameters for each property supported by PrtgAPI.</maml:para>
      <maml:para>In the event a property is specified that has a dependency on another property being set (such as Interval requiring InheritInterval be $false, DBPort require DBPortMode be manual, etc) Set-ObjectProperty will automatically assign the required values such that the original property may be correctly enabled.</maml:para>
      <maml:para>For properties that are not currently supported by PrtgAPI, these settings can still be interfaced with via the -RawProperty and -RawValue parameters. When -Raw* parameters are specified, PrtgAPI will not perform any validation on the specified values. The -RawProperty parameter must contain the raw property name, as typically found on the "name" attribute of the &lt;input/&gt; tag under the object's Settings page in the PRTG UI. All properties that end in an underscore should include this in their names. All properties typically end in an underscore, with the exception of section inheritance properties (Inherit Windows Credentials, etc). Multiple raw properties can be modified at once by specifying a hashtable to the -RawParameters parameter.</maml:para>
      <maml:para>For a list of settings currently supported by Set-ObjectProperty, see Get-Help about_ObjectSettings and about_SensorSettings.</maml:para>
      <maml:para>By default, Set-ObjectProperty will operate in Batch Mode. In Batch Mode, Set-ObjectProperty will not execute a request for each individual object, but will rather store each item in a queue to modify object properties for all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Set-ObjectProperty will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The property to modify.</maml:para>
            <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
          </maml:description>
          <command:parameterValue required="true">ObjectProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ObjectProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Active</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to set for the specified property.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to modify the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawPropertySet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to modify the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawProperty -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawProperty</maml:name>
          <maml:description>
            <maml:para>The raw name of the property to modify. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawValue -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawValue</maml:name>
          <maml:description>
            <maml:para>The one or more values to set the object's property to. For radio buttons and dropdown lists, this is the integer found in the 'value' attribute. WARNING: If an invalid value is set for a property, minor corruption may occur.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Sets an unsafe object property without prompting for confirmation. WARNING: Setting an invalid value for a property can cause minor corruption. Only use if you know what you are doing.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to modify the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawParameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawParameters</maml:name>
          <maml:description>
            <maml:para>A collection of parameters for modifying multiple raw properties.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Sets an unsafe object property without prompting for confirmation. WARNING: Setting an invalid value for a property can cause minor corruption. Only use if you know what you are doing.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to modify the properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AmazonAccessKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AmazonAccessKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AmazonSecretKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AmazonSecretKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AutoAcknowledge -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoAcknowledge</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AutoDiscoveryMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscoveryMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Manual, Automatic, AutomaticDetailed, AutomaticTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoDiscoveryMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoDiscoveryMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutomaticDetailed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutomaticTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: AutoDiscoverySchedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscoverySchedule</maml:name>
          <maml:description>
            <maml:para>Possible values: Once, Hourly, Daily, Weekly</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoDiscoverySchedule</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoDiscoverySchedule</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Once</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hourly</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Daily</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Weekly</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthSpeedUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthSpeedUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthTimeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthTimeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthVolumeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthVolumeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ChannelDefinition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ChannelDefinition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Database -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Database</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBAuthMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBAuthMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Windows, SQL</maml:para>
          </maml:description>
          <command:parameterValue required="true">DBAuthMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DBAuthMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Windows</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SQL</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DBPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBPortMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPortMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DBTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBTimeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DebugMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DebugMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Discard, WriteToDisk, WriteToDiskWhenError</maml:para>
          </maml:description>
          <command:parameterValue required="true">DebugMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DebugMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Discard</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDisk</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDiskWhenError</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DiskSizeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DiskSizeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ExeFile -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExeFile</maml:name>
          <command:parameterValue required="true">ExeFileTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.ExeFileTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ExeParameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExeParameters</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FileSizeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FileSizeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: GraphType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>GraphType</maml:name>
          <maml:description>
            <maml:para>Possible values: Independent, Stacked</maml:para>
          </maml:description>
          <command:parameterValue required="true">GraphType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GraphType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Independent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stacked</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Host</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Hostv4 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Hostv4</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Hostv6 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Hostv6</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HttpRequestMethod -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HttpRequestMethod</maml:name>
          <maml:description>
            <maml:para>Possible values: GET, POST, HEAD</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpRequestMethod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpRequestMethod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">GET</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">POST</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HEAD</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritAccess</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritAmazonCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritAmazonCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritChannelUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritChannelUnit</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritDBCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritDBCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritLinuxCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritLinuxCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritLocation -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritLocation</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritProxy -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritProxy</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritSNMPCompatibility -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritSNMPCompatibility</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritSNMPCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritSNMPCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritVMwareCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritVMwareCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritWindowsCompatibility -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritWindowsCompatibility</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritWindowsCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritWindowsCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InstanceName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InstanceName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DownImmediately, OneWarningThenDown, TwoWarningsThenDown, ThreeWarningsThenDown, FourWarningsThenDown, FiveWarningsThenDown</maml:para>
          </maml:description>
          <command:parameterValue required="true">IntervalErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.IntervalErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DownImmediately</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OneWarningThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TwoWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ThreeWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FourWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FiveWarningsThenDown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LinuxLoginMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxLoginMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Password, PrivateKey</maml:para>
          </maml:description>
          <command:parameterValue required="true">LinuxLoginMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LinuxLoginMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrivateKey</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LinuxPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LinuxPrivateKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxPrivateKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LinuxUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Location -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Location</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LocationName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LocationName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MemoryUsageUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MemoryUsageUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MonitorPerformance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MonitorPerformance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Mutex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Mutex</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: NotifyChanged -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NotifyChanged</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PingCount -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingCount</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingDelay</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingMode</maml:name>
          <maml:description>
            <maml:para>Possible values: SinglePing, MultiPing</maml:para>
          </maml:description>
          <command:parameterValue required="true">PingMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PingMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SinglePing</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MultiPing</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PingPacketSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingPacketSize</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingRemotePacketSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingRemotePacketSize</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostContentType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostContentType</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostData -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostData</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PrimaryChannel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PrimaryChannel</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ProxyAddress -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyAddress</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ServiceUrl -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ServiceUrl</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SetExeEnvironmentVariables -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SetExeEnvironmentVariables</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCommunityStringV1 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCommunityStringV1</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCommunityStringV2 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCommunityStringV2</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCounterMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCounterMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Use64BitIfAvailable, Use32BitOnly</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPCounterMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPCounterMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Use64BitIfAvailable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Use32BitOnly</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPDelay</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPInterfaceEndIndex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPInterfaceEndIndex</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPInterfaceStartIndex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPInterfaceStartIndex</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPOverflowMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPOverflowMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Ignore, Handle</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPOverflowMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPOverflowMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPPortIdMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortIdMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, UseIfAlias, UseIfDescr, UseIfName, NoPortUpdate</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPPortIdentification</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPPortIdentification</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfAlias</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfDescr</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoPortUpdate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPPortNameTemplate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortNameTemplate</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPPortNameUpdateMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortNameUpdateMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Manual, Automatic</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPPortNameUpdateMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPPortNameUpdateMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPRequestMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPRequestMode</maml:name>
          <maml:description>
            <maml:para>Possible values: MultiGet, SingleGet</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPRequestMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPRequestMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">MultiGet</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SingleGet</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPRetryMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPRetryMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Retry, DoNotRetry</maml:para>
          </maml:description>
          <command:parameterValue required="true">RetryMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.RetryMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Retry</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DoNotRetry</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPTimeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3AuthType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3AuthType</maml:name>
          <maml:description>
            <maml:para>Possible values: MD5, SHA, SHA224, SHA256, SHA384, SHA512</maml:para>
          </maml:description>
          <command:parameterValue required="true">HashType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HashType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">MD5</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA224</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA256</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA384</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA512</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPv3Context -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3Context</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3EncryptionKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3EncryptionKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3EncryptionType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3EncryptionType</maml:name>
          <maml:description>
            <maml:para>Possible values: DES, AES, AES192, AES256</maml:para>
          </maml:description>
          <command:parameterValue required="true">EncryptionType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.EncryptionType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DES</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES192</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES256</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPv3Password -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3Password</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3UserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3UserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPVersion -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPVersion</maml:name>
          <maml:description>
            <maml:para>Possible values: v1, v2c, v3</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPVersion</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPVersion</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">v1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">v2c</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">v3</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPZeroValueMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPZeroValueMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Ignore, Handle</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPZeroValueMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPZeroValueMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlEncryptionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlEncryptionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, Encrypt, EncryptAndValidate</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlEncryptionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlEncryptionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Encrypt</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EncryptAndValidate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlInputParameter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlInputParameter</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SqlProcessingMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlProcessingMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Execute, CountRows</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlProcessingMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlProcessingMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Execute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CountRows</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlServerQuery -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlServerQuery</maml:name>
          <command:parameterValue required="true">SqlServerQueryTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.SqlServerQueryTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SqlTransactionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlTransactionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: None, Rollback, CommitOnSuccess</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlTransactionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlTransactionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Rollback</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CommitOnSuccess</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHElevationMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationMode</maml:name>
          <maml:description>
            <maml:para>Possible values: RunAsUser, RunAsAnotherWithPasswordViaSudo, RunAsAnotherWithoutPasswordViaSudo, RunAsAnotherViaSu</maml:para>
          </maml:description>
          <command:parameterValue required="true">SSHElevationMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SSHElevationMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">RunAsUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherWithPasswordViaSudo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherWithoutPasswordViaSudo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherViaSu</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHElevationPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHElevationSudoUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationSudoUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHElevationSuUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationSuUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHEngine -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHEngine</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, CompatibilityMode</maml:para>
          </maml:description>
          <command:parameterValue required="true">SSHEngine</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SSHEngine</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CompatibilityMode</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartStopped -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartStopped</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseCustomInstance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseCustomInstance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseCustomPostContent -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseCustomPostContent</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseSNIFromUrl -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseSNIFromUrl</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseSqlInputParameter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseSqlInputParameter</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseWindowsAuthentication -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseWindowsAuthentication</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VMwarePassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwarePassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VMwareProtocol -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareProtocol</maml:name>
          <maml:description>
            <maml:para>Possible values: HTTPS, HTTP</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: VMwareSessionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareSessionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ReuseSession, CreateNewSession</maml:para>
          </maml:description>
          <command:parameterValue required="true">VMwareSessionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.VMwareSessionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ReuseSession</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CreateNewSession</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: VMwareUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WbemPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemPort</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WbemPortMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemPortMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WbemProtocolMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemProtocolMode</maml:name>
          <maml:description>
            <maml:para>Possible values: HTTPS, HTTP</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WindowsDomain -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsDomain</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WindowsPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WindowsUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WmiDataSource -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiDataSource</maml:name>
          <maml:description>
            <maml:para>Possible values: PerformanceCountersAndWMI, PerformanceCounters, WMI</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiDataSource</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiDataSource</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">PerformanceCountersAndWMI</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PerformanceCounters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WMI</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WmiMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, Alternative</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Alternative</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WmiTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiTimeout</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WmiTimeoutMethod -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiTimeoutMethod</maml:name>
          <maml:description>
            <maml:para>Possible values: OnePointFiveTimesInterval, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiTimeoutMethod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiTimeoutMethod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">OnePointFiveTimesInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The property to modify.</maml:para>
            <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
          </maml:description>
          <command:parameterValue required="true">ObjectProperty</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ObjectProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Active</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to set for the specified property.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to modify properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to modify properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawProperty -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawProperty</maml:name>
          <maml:description>
            <maml:para>The raw name of the property to modify. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawValue -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawValue</maml:name>
          <maml:description>
            <maml:para>The one or more values to set the object's property to. For radio buttons and dropdown lists, this is the integer found in the 'value' attribute. WARNING: If an invalid value is set for a property, minor corruption may occur.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Sets an unsafe object property without prompting for confirmation. WARNING: Setting an invalid value for a property can cause minor corruption. Only use if you know what you are doing.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to modify properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawParameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawParameters</maml:name>
          <maml:description>
            <maml:para>A collection of parameters for modifying multiple raw properties.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Sets an unsafe object property without prompting for confirmation. WARNING: Setting an invalid value for a property can cause minor corruption. Only use if you know what you are doing.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicManualSet -->
      <command:syntaxItem>
        <maml:name>Set-ObjectProperty</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to modify properties of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AmazonAccessKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AmazonAccessKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AmazonSecretKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AmazonSecretKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AutoAcknowledge -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoAcknowledge</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AutoDiscoveryMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscoveryMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Manual, Automatic, AutomaticDetailed, AutomaticTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoDiscoveryMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoDiscoveryMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutomaticDetailed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutomaticTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: AutoDiscoverySchedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscoverySchedule</maml:name>
          <maml:description>
            <maml:para>Possible values: Once, Hourly, Daily, Weekly</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoDiscoverySchedule</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoDiscoverySchedule</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Once</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hourly</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Daily</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Weekly</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthSpeedUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthSpeedUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthTimeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthTimeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TimeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: BandwidthVolumeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BandwidthVolumeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ChannelDefinition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ChannelDefinition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Database -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Database</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBAuthMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBAuthMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Windows, SQL</maml:para>
          </maml:description>
          <command:parameterValue required="true">DBAuthMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DBAuthMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Windows</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SQL</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DBPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBPortMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBPortMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DBTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBTimeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DBUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DBUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DebugMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DebugMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Discard, WriteToDisk, WriteToDiskWhenError</maml:para>
          </maml:description>
          <command:parameterValue required="true">DebugMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DebugMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Discard</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDisk</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDiskWhenError</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: DiskSizeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DiskSizeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ExeFile -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExeFile</maml:name>
          <command:parameterValue required="true">ExeFileTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.ExeFileTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ExeParameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExeParameters</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FileSizeUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FileSizeUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: GraphType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>GraphType</maml:name>
          <maml:description>
            <maml:para>Possible values: Independent, Stacked</maml:para>
          </maml:description>
          <command:parameterValue required="true">GraphType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.GraphType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Independent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stacked</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Host -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Host</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Hostv4 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Hostv4</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Hostv6 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Hostv6</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HttpRequestMethod -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HttpRequestMethod</maml:name>
          <maml:description>
            <maml:para>Possible values: GET, POST, HEAD</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpRequestMethod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpRequestMethod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">GET</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">POST</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HEAD</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritAccess</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritAmazonCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritAmazonCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritChannelUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritChannelUnit</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritDBCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritDBCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritLinuxCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritLinuxCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritLocation -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritLocation</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritProxy -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritProxy</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritSNMPCompatibility -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritSNMPCompatibility</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritSNMPCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritSNMPCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritVMwareCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritVMwareCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritWindowsCompatibility -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritWindowsCompatibility</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritWindowsCredentials -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritWindowsCredentials</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InstanceName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InstanceName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DownImmediately, OneWarningThenDown, TwoWarningsThenDown, ThreeWarningsThenDown, FourWarningsThenDown, FiveWarningsThenDown</maml:para>
          </maml:description>
          <command:parameterValue required="true">IntervalErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.IntervalErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DownImmediately</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OneWarningThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TwoWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ThreeWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FourWarningsThenDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">FiveWarningsThenDown</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LinuxLoginMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxLoginMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Password, PrivateKey</maml:para>
          </maml:description>
          <command:parameterValue required="true">LinuxLoginMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LinuxLoginMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Password</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PrivateKey</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LinuxPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LinuxPrivateKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxPrivateKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LinuxUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LinuxUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Location -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Location</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LocationName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LocationName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MemoryUsageUnit -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MemoryUsageUnit</maml:name>
          <maml:description>
            <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
          </maml:description>
          <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MonitorPerformance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MonitorPerformance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Mutex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Mutex</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: NotifyChanged -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NotifyChanged</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PingCount -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingCount</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingDelay</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingMode</maml:name>
          <maml:description>
            <maml:para>Possible values: SinglePing, MultiPing</maml:para>
          </maml:description>
          <command:parameterValue required="true">PingMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PingMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SinglePing</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MultiPing</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PingPacketSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingPacketSize</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PingRemotePacketSize -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PingRemotePacketSize</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostContentType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostContentType</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostData -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostData</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PrimaryChannel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PrimaryChannel</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ProxyAddress -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyAddress</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProxyUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProxyUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ServiceUrl -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ServiceUrl</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SetExeEnvironmentVariables -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SetExeEnvironmentVariables</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCommunityStringV1 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCommunityStringV1</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCommunityStringV2 -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCommunityStringV2</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPCounterMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPCounterMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Use64BitIfAvailable, Use32BitOnly</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPCounterMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPCounterMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Use64BitIfAvailable</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Use32BitOnly</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPDelay</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPInterfaceEndIndex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPInterfaceEndIndex</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPInterfaceStartIndex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPInterfaceStartIndex</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPOverflowMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPOverflowMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Ignore, Handle</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPOverflowMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPOverflowMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPPortIdMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortIdMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, UseIfAlias, UseIfDescr, UseIfName, NoPortUpdate</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPPortIdentification</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPPortIdentification</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfAlias</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfDescr</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UseIfName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoPortUpdate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPPortNameTemplate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortNameTemplate</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPPortNameUpdateMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPPortNameUpdateMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Manual, Automatic</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPPortNameUpdateMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPPortNameUpdateMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPRequestMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPRequestMode</maml:name>
          <maml:description>
            <maml:para>Possible values: MultiGet, SingleGet</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPRequestMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPRequestMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">MultiGet</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SingleGet</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPRetryMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPRetryMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Retry, DoNotRetry</maml:para>
          </maml:description>
          <command:parameterValue required="true">RetryMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.RetryMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Retry</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DoNotRetry</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPTimeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3AuthType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3AuthType</maml:name>
          <maml:description>
            <maml:para>Possible values: MD5, SHA, SHA224, SHA256, SHA384, SHA512</maml:para>
          </maml:description>
          <command:parameterValue required="true">HashType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HashType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">MD5</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA224</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA256</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA384</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SHA512</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPv3Context -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3Context</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3EncryptionKey -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3EncryptionKey</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3EncryptionType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3EncryptionType</maml:name>
          <maml:description>
            <maml:para>Possible values: DES, AES, AES192, AES256</maml:para>
          </maml:description>
          <command:parameterValue required="true">EncryptionType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.EncryptionType</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DES</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES192</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AES256</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPv3Password -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3Password</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPv3UserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPv3UserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SNMPVersion -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPVersion</maml:name>
          <maml:description>
            <maml:para>Possible values: v1, v2c, v3</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPVersion</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPVersion</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">v1</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">v2c</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">v3</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SNMPZeroValueMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SNMPZeroValueMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Ignore, Handle</maml:para>
          </maml:description>
          <command:parameterValue required="true">SNMPZeroValueMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SNMPZeroValueMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlEncryptionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlEncryptionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, Encrypt, EncryptAndValidate</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlEncryptionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlEncryptionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Encrypt</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EncryptAndValidate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlInputParameter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlInputParameter</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SqlProcessingMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlProcessingMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Execute, CountRows</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlProcessingMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlProcessingMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Execute</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CountRows</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SqlServerQuery -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlServerQuery</maml:name>
          <command:parameterValue required="true">SqlServerQueryTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.SqlServerQueryTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SqlTransactionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SqlTransactionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: None, Rollback, CommitOnSuccess</maml:para>
          </maml:description>
          <command:parameterValue required="true">SqlTransactionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SqlTransactionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Rollback</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CommitOnSuccess</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHElevationMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationMode</maml:name>
          <maml:description>
            <maml:para>Possible values: RunAsUser, RunAsAnotherWithPasswordViaSudo, RunAsAnotherWithoutPasswordViaSudo, RunAsAnotherViaSu</maml:para>
          </maml:description>
          <command:parameterValue required="true">SSHElevationMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SSHElevationMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">RunAsUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherWithPasswordViaSudo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherWithoutPasswordViaSudo</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RunAsAnotherViaSu</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHElevationPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHElevationSudoUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationSudoUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHElevationSuUser -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHElevationSuUser</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SSHEngine -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHEngine</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, CompatibilityMode</maml:para>
          </maml:description>
          <command:parameterValue required="true">SSHEngine</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SSHEngine</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CompatibilityMode</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: SSHPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SSHPort</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartStopped -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartStopped</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseCustomInstance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseCustomInstance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseCustomPostContent -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseCustomPostContent</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseSNIFromUrl -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseSNIFromUrl</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseSqlInputParameter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseSqlInputParameter</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseWindowsAuthentication -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseWindowsAuthentication</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VMwarePassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwarePassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VMwareProtocol -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareProtocol</maml:name>
          <maml:description>
            <maml:para>Possible values: HTTPS, HTTP</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: VMwareSessionMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareSessionMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ReuseSession, CreateNewSession</maml:para>
          </maml:description>
          <command:parameterValue required="true">VMwareSessionMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.VMwareSessionMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ReuseSession</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CreateNewSession</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: VMwareUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VMwareUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WbemPort -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemPort</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WbemPortMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemPortMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Automatic, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">AutoMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.AutoMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WbemProtocolMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WbemProtocolMode</maml:name>
          <maml:description>
            <maml:para>Possible values: HTTPS, HTTP</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WindowsDomain -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsDomain</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WindowsPassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsPassword</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WindowsUserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WindowsUserName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WmiDataSource -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiDataSource</maml:name>
          <maml:description>
            <maml:para>Possible values: PerformanceCountersAndWMI, PerformanceCounters, WMI</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiDataSource</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiDataSource</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">PerformanceCountersAndWMI</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PerformanceCounters</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WMI</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WmiMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Default, Alternative</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Alternative</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: WmiTimeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiTimeout</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WmiTimeoutMethod -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WmiTimeoutMethod</maml:name>
          <maml:description>
            <maml:para>Possible values: OnePointFiveTimesInterval, Manual</maml:para>
          </maml:description>
          <command:parameterValue required="true">WmiTimeoutMethod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.WmiTimeoutMethod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">OnePointFiveTimesInterval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to modify the properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to modify properties of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>The property to modify.</maml:para>
          <maml:para>Possible values: Active, InheritLocation, Location, LocationName, InheritWindowsCredentials, WindowsDomain, WindowsUserName, WindowsPassword, InheritLinuxCredentials, LinuxUserName, LinuxLoginMode, LinuxPassword, LinuxPrivateKey, WbemProtocolMode, WbemPortMode, WbemPort, SSHPort, SSHElevationMode, SSHElevationSuUser, SSHElevationSudoUser, SSHElevationPassword, SSHEngine, InheritVMwareCredentials, VMwareUserName, VMwarePassword, VMwareProtocol, VMwareSessionMode, InheritSNMPCredentials, SNMPVersion, SNMPCommunityStringV1, SNMPCommunityStringV2, SNMPv3AuthType, SNMPv3UserName, SNMPv3Password, SNMPv3EncryptionType, SNMPv3EncryptionKey, SNMPv3Context, SNMPPort, SNMPTimeout, InheritDBCredentials, DBPortMode, DBPort, DBAuthMode, DBUserName, DBPassword, DBTimeout, InheritAmazonCredentials, AmazonAccessKey, AmazonSecretKey, InheritWindowsCompatibility, WmiDataSource, WmiTimeoutMethod, WmiTimeout, InheritSNMPCompatibility, SNMPDelay, SNMPRetryMode, SNMPOverflowMode, SNMPZeroValueMode, SNMPCounterMode, SNMPRequestMode, SNMPPortNameTemplate, SNMPPortNameUpdateMode, SNMPPortIdMode, SNMPInterfaceStartIndex, SNMPInterfaceEndIndex, InheritChannelUnit, BandwidthVolumeUnit, BandwidthSpeedUnit, BandwidthTimeUnit, MemoryUsageUnit, DiskSizeUnit, FileSizeUnit, InheritAccess, Name, Tags, Priority, DebugMode, Url, HttpRequestMethod, PostData, UseCustomPostContent, PostContentType, UseSNIFromUrl, InheritProxy, ProxyAddress, ProxyPort, ProxyUser, ProxyPassword, Timeout, PingPacketSize, PingMode, PingCount, PingDelay, AutoAcknowledge, InheritInterval, Interval, IntervalErrorMode, PrimaryChannel, GraphType, ExeFile, ExeParameters, SetExeEnvironmentVariables, UseWindowsAuthentication, Mutex, WmiMode, Target, PingRemotePacketSize, ChannelDefinition, FactoryErrorMode, FactoryErrorFormula, FactoryMissingDataMode, StartStopped, NotifyChanged, MonitorPerformance, Database, UseCustomInstance, InstanceName, SqlEncryptionMode, SqlServerQuery, UseSqlInputParameter, SqlInputParameter, SqlTransactionMode, SqlProcessingMode, InheritTriggers, Comments, Host, Hostv4, Hostv6, ServiceUrl, AutoDiscoveryMode, AutoDiscoverySchedule</maml:para>
        </maml:description>
        <command:parameterValue required="true">ObjectProperty</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ObjectProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Active</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritLocation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LocationName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritWindowsCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsDomain</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WindowsPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritLinuxCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxLoginMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LinuxPrivateKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemProtocolMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemPortMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WbemPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationSuUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationSudoUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHElevationPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SSHEngine</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritVMwareCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwarePassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareProtocol</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">VMwareSessionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritSNMPCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPVersion</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV1</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCommunityStringV2</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3AuthType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3UserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3Password</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3EncryptionKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPv3Context</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritDBCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPortMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBAuthMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBUserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DBTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritAmazonCredentials</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AmazonAccessKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AmazonSecretKey</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritWindowsCompatibility</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiDataSource</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiTimeoutMethod</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiTimeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritSNMPCompatibility</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPDelay</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPRetryMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPOverflowMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPZeroValueMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPCounterMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPRequestMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortNameTemplate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortNameUpdateMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPPortIdMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPInterfaceStartIndex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SNMPInterfaceEndIndex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritChannelUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthVolumeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthSpeedUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BandwidthTimeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MemoryUsageUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DiskSizeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FileSizeUnit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritAccess</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DebugMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HttpRequestMethod</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PostData</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseCustomPostContent</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PostContentType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseSNIFromUrl</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritProxy</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyAddress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyPort</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProxyPassword</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Timeout</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingPacketSize</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingCount</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingDelay</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoAcknowledge</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritInterval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">IntervalErrorMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PrimaryChannel</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GraphType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ExeFile</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ExeParameters</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SetExeEnvironmentVariables</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseWindowsAuthentication</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mutex</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Target</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PingRemotePacketSize</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ChannelDefinition</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryErrorMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryErrorFormula</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FactoryMissingDataMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">StartStopped</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotifyChanged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MonitorPerformance</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Database</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseCustomInstance</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InstanceName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlEncryptionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlServerQuery</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseSqlInputParameter</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlInputParameter</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlTransactionMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlProcessingMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">InheritTriggers</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hostv4</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hostv6</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ServiceUrl</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoDiscoveryMode</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutoDiscoverySchedule</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to set for the specified property.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawProperty -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawProperty</maml:name>
        <maml:description>
          <maml:para>The raw name of the property to modify. This can be typically discovered by inspecting the "name" attribute of the properties' &lt;input/&gt; tag on the Settings page of PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawValue -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawValue</maml:name>
        <maml:description>
          <maml:para>The one or more values to set the object's property to. For radio buttons and dropdown lists, this is the integer found in the 'value' attribute. WARNING: If an invalid value is set for a property, minor corruption may occur.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawParameters -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawParameters</maml:name>
        <maml:description>
          <maml:para>A collection of parameters for modifying multiple raw properties.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Sets an unsafe object property without prompting for confirmation. WARNING: Setting an invalid value for a property can cause minor corruption. Only use if you know what you are doing.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritLocation -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritLocation</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Location -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Location</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LocationName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LocationName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritWindowsCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritWindowsCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WindowsDomain -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WindowsDomain</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WindowsUserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WindowsUserName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WindowsPassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WindowsPassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritLinuxCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritLinuxCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LinuxUserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LinuxUserName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LinuxLoginMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LinuxLoginMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Password, PrivateKey</maml:para>
        </maml:description>
        <command:parameterValue required="true">LinuxLoginMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.LinuxLoginMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Password</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PrivateKey</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: LinuxPassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LinuxPassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LinuxPrivateKey -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LinuxPrivateKey</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WbemProtocolMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WbemProtocolMode</maml:name>
        <maml:description>
          <maml:para>Possible values: HTTPS, HTTP</maml:para>
        </maml:description>
        <command:parameterValue required="true">HttpMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HttpMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: WbemPortMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WbemPortMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Automatic, Manual</maml:para>
        </maml:description>
        <command:parameterValue required="true">AutoMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.AutoMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: WbemPort -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WbemPort</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SSHPort -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHPort</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SSHElevationMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHElevationMode</maml:name>
        <maml:description>
          <maml:para>Possible values: RunAsUser, RunAsAnotherWithPasswordViaSudo, RunAsAnotherWithoutPasswordViaSudo, RunAsAnotherViaSu</maml:para>
        </maml:description>
        <command:parameterValue required="true">SSHElevationMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SSHElevationMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">RunAsUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">RunAsAnotherWithPasswordViaSudo</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">RunAsAnotherWithoutPasswordViaSudo</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">RunAsAnotherViaSu</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SSHElevationSuUser -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHElevationSuUser</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SSHElevationSudoUser -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHElevationSudoUser</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SSHElevationPassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHElevationPassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SSHEngine -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SSHEngine</maml:name>
        <maml:description>
          <maml:para>Possible values: Default, CompatibilityMode</maml:para>
        </maml:description>
        <command:parameterValue required="true">SSHEngine</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SSHEngine</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CompatibilityMode</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: InheritVMwareCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritVMwareCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: VMwareUserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>VMwareUserName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: VMwarePassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>VMwarePassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: VMwareProtocol -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>VMwareProtocol</maml:name>
        <maml:description>
          <maml:para>Possible values: HTTPS, HTTP</maml:para>
        </maml:description>
        <command:parameterValue required="true">HttpMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HttpMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">HTTPS</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HTTP</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: VMwareSessionMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>VMwareSessionMode</maml:name>
        <maml:description>
          <maml:para>Possible values: ReuseSession, CreateNewSession</maml:para>
        </maml:description>
        <command:parameterValue required="true">VMwareSessionMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.VMwareSessionMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ReuseSession</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CreateNewSession</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: InheritSNMPCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritSNMPCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPVersion -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPVersion</maml:name>
        <maml:description>
          <maml:para>Possible values: v1, v2c, v3</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPVersion</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPVersion</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">v1</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">v2c</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">v3</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPCommunityStringV1 -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPCommunityStringV1</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPCommunityStringV2 -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPCommunityStringV2</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPv3AuthType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3AuthType</maml:name>
        <maml:description>
          <maml:para>Possible values: MD5, SHA, SHA224, SHA256, SHA384, SHA512</maml:para>
        </maml:description>
        <command:parameterValue required="true">HashType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HashType</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">MD5</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SHA</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SHA224</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SHA256</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SHA384</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SHA512</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPv3UserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3UserName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPv3Password -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3Password</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPv3EncryptionType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3EncryptionType</maml:name>
        <maml:description>
          <maml:para>Possible values: DES, AES, AES192, AES256</maml:para>
        </maml:description>
        <command:parameterValue required="true">EncryptionType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.EncryptionType</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">DES</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AES</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AES192</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AES256</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPv3EncryptionKey -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3EncryptionKey</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPv3Context -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPv3Context</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPPort -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPPort</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPTimeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPTimeout</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritDBCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritDBCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DBPortMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBPortMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Automatic, Manual</maml:para>
        </maml:description>
        <command:parameterValue required="true">AutoMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.AutoMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DBPort -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBPort</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DBAuthMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBAuthMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Windows, SQL</maml:para>
        </maml:description>
        <command:parameterValue required="true">DBAuthMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DBAuthMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Windows</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SQL</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DBUserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBUserName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DBPassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBPassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DBTimeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DBTimeout</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritAmazonCredentials -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritAmazonCredentials</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AmazonAccessKey -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AmazonAccessKey</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AmazonSecretKey -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AmazonSecretKey</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritWindowsCompatibility -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritWindowsCompatibility</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WmiDataSource -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WmiDataSource</maml:name>
        <maml:description>
          <maml:para>Possible values: PerformanceCountersAndWMI, PerformanceCounters, WMI</maml:para>
        </maml:description>
        <command:parameterValue required="true">WmiDataSource</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.WmiDataSource</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">PerformanceCountersAndWMI</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PerformanceCounters</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WMI</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: WmiTimeoutMethod -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WmiTimeoutMethod</maml:name>
        <maml:description>
          <maml:para>Possible values: OnePointFiveTimesInterval, Manual</maml:para>
        </maml:description>
        <command:parameterValue required="true">WmiTimeoutMethod</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.WmiTimeoutMethod</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">OnePointFiveTimesInterval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: WmiTimeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WmiTimeout</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritSNMPCompatibility -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritSNMPCompatibility</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPDelay -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPDelay</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPRetryMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPRetryMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Retry, DoNotRetry</maml:para>
        </maml:description>
        <command:parameterValue required="true">RetryMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.RetryMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Retry</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DoNotRetry</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPOverflowMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPOverflowMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Ignore, Handle</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPOverflowMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPOverflowMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPZeroValueMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPZeroValueMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Ignore, Handle</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPZeroValueMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPZeroValueMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Handle</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPCounterMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPCounterMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Use64BitIfAvailable, Use32BitOnly</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPCounterMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPCounterMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Use64BitIfAvailable</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Use32BitOnly</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPRequestMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPRequestMode</maml:name>
        <maml:description>
          <maml:para>Possible values: MultiGet, SingleGet</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPRequestMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPRequestMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">MultiGet</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SingleGet</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPPortNameTemplate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPPortNameTemplate</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPPortNameUpdateMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPPortNameUpdateMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Manual, Automatic</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPPortNameUpdateMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPPortNameUpdateMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPPortIdMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPPortIdMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Automatic, UseIfAlias, UseIfDescr, UseIfName, NoPortUpdate</maml:para>
        </maml:description>
        <command:parameterValue required="true">SNMPPortIdentification</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SNMPPortIdentification</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseIfAlias</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseIfDescr</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UseIfName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NoPortUpdate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SNMPInterfaceStartIndex -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPInterfaceStartIndex</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SNMPInterfaceEndIndex -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SNMPInterfaceEndIndex</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritChannelUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritChannelUnit</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BandwidthVolumeUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BandwidthVolumeUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: BandwidthSpeedUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BandwidthSpeedUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Bit, Kbit, Mbit, Gbit, Tbit, Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Bit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Kbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Mbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Gbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tbit</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: BandwidthTimeUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BandwidthTimeUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Second, Minute, Hour, Day</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TimeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Second</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Minute</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hour</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Day</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MemoryUsageUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MemoryUsageUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DiskSizeUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DiskSizeUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FileSizeUnit -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FileSizeUnit</maml:name>
        <maml:description>
          <maml:para>Possible values: Byte, KByte, MByte, GByte, TByte</maml:para>
        </maml:description>
        <command:parameterValue required="true">DataVolumeUnit</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DataVolumeUnit</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Byte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">KByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GByte</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TByte</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: InheritAccess -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritAccess</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
        </maml:description>
        <command:parameterValue required="true">Priority</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Priority</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: DebugMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DebugMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Discard, WriteToDisk, WriteToDiskWhenError</maml:para>
        </maml:description>
        <command:parameterValue required="true">DebugMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DebugMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Discard</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WriteToDisk</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WriteToDiskWhenError</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: HttpRequestMethod -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HttpRequestMethod</maml:name>
        <maml:description>
          <maml:para>Possible values: GET, POST, HEAD</maml:para>
        </maml:description>
        <command:parameterValue required="true">HttpRequestMethod</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HttpRequestMethod</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">GET</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">POST</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HEAD</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PostData -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PostData</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseCustomPostContent -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseCustomPostContent</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PostContentType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PostContentType</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseSNIFromUrl -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseSNIFromUrl</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritProxy -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritProxy</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ProxyAddress -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProxyAddress</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ProxyPort -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProxyPort</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ProxyUser -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProxyUser</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ProxyPassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProxyPassword</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PingPacketSize -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PingPacketSize</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PingMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PingMode</maml:name>
        <maml:description>
          <maml:para>Possible values: SinglePing, MultiPing</maml:para>
        </maml:description>
        <command:parameterValue required="true">PingMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PingMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">SinglePing</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MultiPing</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PingCount -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PingCount</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PingDelay -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PingDelay</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AutoAcknowledge -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AutoAcknowledge</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritInterval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritInterval</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">ScanningInterval</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ScanningInterval</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IntervalErrorMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IntervalErrorMode</maml:name>
        <maml:description>
          <maml:para>Possible values: DownImmediately, OneWarningThenDown, TwoWarningsThenDown, ThreeWarningsThenDown, FourWarningsThenDown, FiveWarningsThenDown</maml:para>
        </maml:description>
        <command:parameterValue required="true">IntervalErrorMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.IntervalErrorMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">DownImmediately</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">OneWarningThenDown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TwoWarningsThenDown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ThreeWarningsThenDown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FourWarningsThenDown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">FiveWarningsThenDown</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PrimaryChannel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PrimaryChannel</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: GraphType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>GraphType</maml:name>
        <maml:description>
          <maml:para>Possible values: Independent, Stacked</maml:para>
        </maml:description>
        <command:parameterValue required="true">GraphType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.GraphType</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Independent</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Stacked</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: ExeFile -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExeFile</maml:name>
        <command:parameterValue required="true">ExeFileTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Targets.ExeFileTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ExeParameters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExeParameters</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SetExeEnvironmentVariables -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SetExeEnvironmentVariables</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseWindowsAuthentication -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseWindowsAuthentication</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Mutex -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Mutex</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WmiMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WmiMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Default, Alternative</maml:para>
        </maml:description>
        <command:parameterValue required="true">WmiMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.WmiMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Alternative</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Target -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PingRemotePacketSize -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PingRemotePacketSize</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ChannelDefinition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ChannelDefinition</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FactoryErrorMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryErrorMode</maml:name>
        <maml:description>
          <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
        </maml:description>
        <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FactoryErrorFormula -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryErrorFormula</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FactoryMissingDataMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryMissingDataMode</maml:name>
        <maml:description>
          <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
        </maml:description>
        <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: StartStopped -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartStopped</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: NotifyChanged -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NotifyChanged</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MonitorPerformance -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MonitorPerformance</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Database -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Database</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseCustomInstance -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseCustomInstance</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InstanceName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InstanceName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SqlEncryptionMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SqlEncryptionMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Default, Encrypt, EncryptAndValidate</maml:para>
        </maml:description>
        <command:parameterValue required="true">SqlEncryptionMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SqlEncryptionMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Default</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Encrypt</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EncryptAndValidate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SqlServerQuery -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SqlServerQuery</maml:name>
        <command:parameterValue required="true">SqlServerQueryTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Targets.SqlServerQueryTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseSqlInputParameter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseSqlInputParameter</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SqlInputParameter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SqlInputParameter</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SqlTransactionMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SqlTransactionMode</maml:name>
        <maml:description>
          <maml:para>Possible values: None, Rollback, CommitOnSuccess</maml:para>
        </maml:description>
        <command:parameterValue required="true">SqlTransactionMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SqlTransactionMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Rollback</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CommitOnSuccess</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: SqlProcessingMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SqlProcessingMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Execute, CountRows</maml:para>
        </maml:description>
        <command:parameterValue required="true">SqlProcessingMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SqlProcessingMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Execute</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CountRows</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: InheritTriggers -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritTriggers</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comments -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comments</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Host -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Host</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Hostv4 -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Hostv4</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Hostv6 -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Hostv6</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ServiceUrl -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ServiceUrl</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AutoDiscoveryMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AutoDiscoveryMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Manual, Automatic, AutomaticDetailed, AutomaticTemplate</maml:para>
        </maml:description>
        <command:parameterValue required="true">AutoDiscoveryMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.AutoDiscoveryMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Manual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Automatic</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutomaticDetailed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">AutomaticTemplate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: AutoDiscoverySchedule -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AutoDiscoverySchedule</maml:name>
        <maml:description>
          <maml:para>Possible values: Once, Hourly, Daily, Weekly</maml:para>
        </maml:description>
        <command:parameterValue required="true">AutoDiscoverySchedule</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.AutoDiscoverySchedule</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Once</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hourly</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Daily</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Weekly</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to modify the properties of.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Set-ObjectProperty Interval "00:00:30"
C:\&gt; Get-Sensor -Id 1001 | Set-ObjectProperty Interval ([TimeSpan]"00:00:30")
C:\&gt; Get-Sensor -Id 1001 | Set-ObjectProperty Interval ThirtySeconds</dev:code>
        <dev:remarks>
          <maml:para>Set the Scanning Interval of the sensor with ID 1001 to 30 seconds three different ways. Type "ScanningInterval" expected by property Interval will attempt to coerce strings, TimeSpans and enums into a ScanningInterval object. If the cmdlet succeeds, InheritInterval will also be set to false.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 2002 | Set-ObjectProperty -VMwareUserName root -VMwarePassword password</dev:code>
        <dev:remarks>
          <maml:para>Set the value of both the VMwareUserName and VMwarePassword in a single request.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Set-ObjectProperty -RawProperty name_ -RawValue newName</dev:code>
        <dev:remarks>
          <maml:para>Set raw property "name" to value "newName"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $schedule = Get-PrtgSchedule -Id 621

C:\&gt; Get-Sensor -Id 2024 | Set-ObjectProperty -RawParameters @{
&gt;&gt;      scheduledependency = 0
&gt;&gt;      schedule_ = $schedule
&gt;&gt;   }</dev:code>
        <dev:remarks>
          <maml:para>Apply the schedule with ID 621 to the sensor with ID 2024</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Set-ObjectProperty -Id 1001 Name "New Name"</dev:code>
        <dev:remarks>
          <maml:para>Set the name of the object with ID 1001 to "New Name"</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Property-Manipulation#set-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Help ObjectSettings</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Help SensorSettings</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ObjectProperty</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationAction</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgSchedule</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-ChannelProperty</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Approve-Probe -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Approve-Probe</command:name>
      <command:verb>Approve</command:verb>
      <command:noun>Probe</command:noun>
      <maml:description>
        <maml:para>Approves or denies a new probe for use within PRTG.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Approve-Probe cmdlet approves or denies a newly installed probe for use within PRTG. The Approve-Probe cmdlet can only be used on probes that have not yet been approved for use within PRTG. If Approve-Probe is executed on a probe that has already been approved, a warning will be emitted and the probe will be ignored.</maml:para>
      <maml:para>When a probe is approved, PRTG will automatically create the "Probe Device" object under the probe containing the default probe sensors. If the -AutoDiscover parameter is specified, PRTG will additionally attempt to perform an auto-discovery to add any devices present in the probe's network.</maml:para>
      <maml:para>If -Deny is specified, the probe will be removed from PRTG and its GID will be blacklisted. If a probe GID is blacklisted, it will not be able to communicate with PRTG unless its GID is changed or the GID is removed from the blacklist under Setup -&gt; System Administration -&gt; Core &amp; Probes</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: Probe -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>Probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DenySet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: Deny -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Deny</maml:name>
          <maml:description>
            <maml:para>Deny the probe from communicating with PRTG. This will also blacklist the probe's GID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>Probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AutoDiscoverSet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: AutoDiscover -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscover</maml:name>
          <maml:description>
            <maml:para>Approve the probe and automatically perform an auto-discovery.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>Probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="ProbeId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DenyManualSet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: Deny -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Deny</maml:name>
          <maml:description>
            <maml:para>Deny the probe from communicating with PRTG. This will also blacklist the probe's GID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="ProbeId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AutoDiscoverManualSet -->
      <command:syntaxItem>
        <maml:name>Approve-Probe</maml:name>
        <!-- Parameter: AutoDiscover -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>AutoDiscover</maml:name>
          <maml:description>
            <maml:para>Approve the probe and automatically perform an auto-discovery.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="ProbeId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the probe to set the approval status of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Probe -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Probe</maml:name>
        <maml:description>
          <maml:para>Probe to set the approval status of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Probe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="ProbeId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the probe to set the approval status of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="ProbeId">
        <maml:name>ProbeId</maml:name>
        <maml:description>
          <maml:para>ID of the probe to set the approval status of.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Deny -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Deny</maml:name>
        <maml:description>
          <maml:para>Deny the probe from communicating with PRTG. This will also blacklist the probe's GID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: AutoDiscover -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>AutoDiscover</maml:name>
        <maml:description>
          <maml:para>Approve the probe and automatically perform an auto-discovery.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Probe to set the approval status of.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>ID of the probe to set the approval status of.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe | Approve-Probe</dev:code>
        <dev:remarks>
          <maml:para>Approve all PRTG probes. Any probes that have already been approved will be skipped.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe | where { ($_ | Get-ObjectProperty).ProbeApproved -eq $false } | Approve-Probe</dev:code>
        <dev:remarks>
          <maml:para>Approve all probes that have not been approved.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Approve-Probe -Id 1001 -Deny</dev:code>
        <dev:remarks>
          <maml:para>Deny the probe with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe | Approve-Probe -AutoDiscover</dev:code>
        <dev:remarks>
          <maml:para>Approve all probes and immediately perform an auto-discovery. Any probes that have already been approved will be skipped.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#approvedeny-probes-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Probe -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Probe</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Probe</command:noun>
      <maml:description>
        <maml:para>Retrieves probes from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Probe cmdlet retrieves probes from a PRTG Server. Probes represent sites where the PRTG Probe Service has been installed. Each PRTG Server has a single Core Probe. Additional probes may be installed with the PRTG Remote Probe installer for monitoring of remote sites.</maml:para>
      <maml:para>Get-Probe provides a variety of methods of filtering the probes requested from PRTG, including by probe name, probe status (Connected / Disconnected), ID and tags. Multiple filters can be used in conjunction to further limit the number of results returned. Probe properties that do not contain explicitly defined parameters on Get-Group can be specified as dynamic parameters, allowing one or more values to be specified of the specified type. All string parameters support the use of wildcards.</maml:para>
      <maml:para>For scenarios in which you wish to exert finer grained control over search filters, a custom SearchFilter object can be created by specifying the field name, condition and value to filter upon. For information on properties that can be filtered upon, see New-SearchFilter</maml:para>
      <maml:para>Get-Probe provides two parameter sets for filtering objects by tags. When filtering for probes that contain one of several tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for probes containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      <maml:para>The Probe objects returned from Get-Probe can be piped to a variety of other cmdlets for further processing, including Get-Group, Get-Device and Get-Sensor, where the ID or name of the probe will be used to filter for child objects of the specified type.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: LogicalAndTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Probe</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Collapsed -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Collapsed</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ProbeStatus -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProbeStatus</maml:name>
          <maml:description>
            <maml:para>Only retrieve probes that match a specified connection state.</maml:para>
            <maml:para>Possible values: Disconnected, Connected</maml:para>
          </maml:description>
          <command:parameterValue required="true">ProbeStatus[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ProbeStatus[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDevices -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDevices</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalGroups -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalGroups</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: LogicalOrTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Probe</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Collapsed -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Collapsed</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownAcknowledgedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownAcknowledgedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PartialDownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PartialDownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PausedSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PausedSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ProbeStatus -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProbeStatus</maml:name>
          <maml:description>
            <maml:para>Only retrieve probes that match a specified connection state.</maml:para>
            <maml:para>Possible values: Disconnected, Connected</maml:para>
          </maml:description>
          <command:parameterValue required="true">ProbeStatus[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ProbeStatus[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tag -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDevices -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDevices</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalGroups -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalGroups</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnknownSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnknownSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UnusualSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UnusualSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WarningSensors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>WarningSensors</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: ProbeStatus -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProbeStatus</maml:name>
        <maml:description>
          <maml:para>Only retrieve probes that match a specified connection state.</maml:para>
          <maml:para>Possible values: Disconnected, Connected</maml:para>
        </maml:description>
        <command:parameterValue required="true">ProbeStatus[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ProbeStatus[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Disconnected</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Connected</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Only retrieve objects that match a specific status.</maml:para>
          <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
        </maml:description>
        <command:parameterValue required="true">Status[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Status[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tag -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Access -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Access</maml:name>
        <maml:description>
          <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
        </maml:description>
        <command:parameterValue required="true">Access[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Access[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Dependency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Dependency</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
        </maml:description>
        <command:parameterValue required="true">Priority[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Priority[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: UpSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownAcknowledgedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownAcknowledgedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PartialDownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PartialDownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WarningSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WarningSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PausedSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PausedSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnusualSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnusualSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UnknownSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UnknownSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalSensors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalSensors</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Schedule -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Schedule</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comments -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comments</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BaseType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseType</maml:name>
        <maml:description>
          <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.BaseType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentId</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Collapsed -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Collapsed</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalGroups -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalGroups</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalDevices -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalDevices</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Position -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Position</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Probe -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe contoso</dev:code>
        <dev:remarks>
          <maml:para>Get all probes named "contoso" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe *office*</dev:code>
        <dev:remarks>
          <maml:para>Get all probes whose name contains "office" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 1</dev:code>
        <dev:remarks>
          <maml:para>Get the probe with ID 1</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -TotalGroups 10</dev:code>
        <dev:remarks>
          <maml:para>Get all probes that contain exactly 10 child groups using dynamic parameters.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; flt totalgroups eq 10 | Get-Probe</dev:code>
        <dev:remarks>
          <maml:para>Get all probes that contain exactly 10 child groups using a SearchFilter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Count 1</dev:code>
        <dev:remarks>
          <maml:para>Get only 1 probe from PRTG.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; flt totalsens greaterthan 100 | Get-Probe</dev:code>
        <dev:remarks>
          <maml:para>Get all probes that contain more than 100 sensors.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Probes#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SearchFilter</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Approve-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Restart-Probe -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Restart-Probe</command:name>
      <command:verb>Restart</command:verb>
      <command:noun>Probe</command:noun>
      <maml:description>
        <maml:para>Restarts the PRTG Probe Service of PRTG Network Monitor probes.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Restart-Probe cmdlet restarts the PRTG Probe Service of a specified PRTG Probe. If no probe is specified, Restart-Probe will restart the PRTG Probe Service of all PRTG Probes in your environment.</maml:para>
      <maml:para>When executed, Restart-Probe will prompt to confirm you wish to restart the PRTG Probe Service of each PRTG Probe. Within this prompt you may respond to each probe individually or answer yes/no to all. To override this prompt completely, the -Force parameter can be specified.</maml:para>
      <maml:para>By default, Restart-Probe will wait for one hour for all probes restart and reconnect to PRTG. If you do not wish to wait at all, this can be overridden by specifying -Wait:$false. You may additionally specify a custom timeout duration (in seconds) via the -Timeout parameter. If Restart-Probe times out waiting for a PRTG Probe Service to restart, a TimeoutException will be thrown specifying the number of probes that failed to restart.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Restart-Probe</maml:name>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the PRTG Probe Service to be restarted on all specified probes without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The probe to restart. If no probe is specified, all probes will be restarted.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for the PRTG Probe Service of all probes to restart. Default value is 3600 (1 hour). If Wait is false, this parameter will have no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3600</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Wait -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>Wait for the PRTG Core Service to restart before ending the cmdlet. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Restart-Probe</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="ProbeId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the probe to restart.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the PRTG Probe Service to be restarted on all specified probes without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for the PRTG Probe Service of all probes to restart. Default value is 3600 (1 hour). If Wait is false, this parameter will have no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3600</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Wait -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>Wait for the PRTG Core Service to restart before ending the cmdlet. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Probe -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Probe</maml:name>
        <maml:description>
          <maml:para>The probe to restart. If no probe is specified, all probes will be restarted.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Probe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="ProbeId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the probe to restart.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="ProbeId">
        <maml:name>ProbeId</maml:name>
        <maml:description>
          <maml:para>ID of the probe to restart.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces the PRTG Probe Service to be restarted on all specified probes without displaying a confirmation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Wait -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>Wait for the PRTG Core Service to restart before ending the cmdlet. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Duration (in seconds) to wait for the PRTG Probe Service of all probes to restart. Default value is 3600 (1 hour). If Wait is false, this parameter will have no effect.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>3600</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The probe to restart. If no probe is specified, all probes will be restarted.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Restart-Probe</dev:code>
        <dev:remarks>
          <maml:para>Restart all probes on a PRTG Server and wait for them to restart.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe *contoso* | Restart-Probe -Timeout 180 -Force</dev:code>
        <dev:remarks>
          <maml:para>Restart all probes containing "contoso" in their names, waiting 3 minutes for them to restart, without displaying a confirmation prompt.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 2004 | Restart-Probe -Wait:$false</dev:code>
        <dev:remarks>
          <maml:para>Restart the probe with ID 2004, without waiting for the probe to restart.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Restart-Probe -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Restart the probe with ID 1001. If 1001 is not a valid probe, an error will be thrown.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#restart-probe-service-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Restart-PrtgCore</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-ProbeNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-ProbeNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>ProbeNode</command:noun>
      <maml:description>
        <maml:para>Creates a new ProbeNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-ProbeNode cmdlet creates a new ProbeNode object for modelling a PRTG Tree. Each ProbeNode object encapsulates a single Probe object along with any optional children (such as GroupNode and DeviceNode items).</maml:para>
      <maml:para>New-ProbeNode supports many different ways of being invoked, however at its core there are two pieces of information that can be provided to the cmdlet: information that identifies the Probe to encapsulate, and the nodes that should be used as the children of the node.</maml:para>
      <maml:para>If an existing Probe object retrieved from the Get-Probe cmdlet is not specified or piped to the -Value parameter, one or more of -Name or -Id must be specified to identify the object to encapsulate. If multiple values are returned as a result of these parameters, a unique ProbeNode object will be created for each item.</maml:para>
      <maml:para>Child nodes to this node can either be specified via the pipeline, or declaratively via a ScriptBlock. When a ScriptBlock defining children is specified, ProbeNode will incorporate a copy of the children in each ProbeNode that is produced. While each ProbeNode will end up with a unique copy of all its descendant nodes, the underlying Value of each nodw will be the same.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-ProbeNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromSet -->
      <command:syntaxItem>
        <maml:name>New-ProbeNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Probe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Probe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-ProbeNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromManualSet -->
      <command:syntaxItem>
        <maml:name>New-ProbeNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Probe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScriptBlock -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A script block that returns the children to use for this node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Children -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Children</maml:name>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Probe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 3001 | New-ProbeNode</dev:code>
        <dev:remarks>
          <maml:para>Create a probe node from the probe with ID 3001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; New-ProbeNode -Id 3001</dev:code>
        <dev:remarks>
          <maml:para>Create a probe node from the probe with ID 3001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; New-ProbeNode windows*</dev:code>
        <dev:remarks>
          <maml:para>Create a probe node for each probe whose name starts with "windows".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; ProbeNode -Id 3001 {
&gt;&gt;      DeviceNode -Id 2001 {
&gt;&gt;          SensorNode -Id 1001
&gt;&gt;      }
&gt;&gt;
&gt;&gt;      DeviceNode -Id 2002 {
&gt;&gt;          SensorNode -Id 1002
&gt;&gt;      }
&gt;&gt; }</dev:code>
        <dev:remarks>
          <maml:para>Create a new probe node from the object with ID 3001 with child nodes for the devices with IDs 2001 and 2002, which contain the sensors with IDs 1001 and 1002 respectively.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>New-Device -Id 2001,2002 | New-ProbeNode -Id 3001</dev:code>
        <dev:remarks>
          <maml:para>Create a new probe node from the object with ID 3001 with child nodes for the devices with IDs 2001 and 2002.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PropertyNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-PropertyNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-PropertyNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>PropertyNode</command:noun>
      <maml:description>
        <maml:para>Creates a new PropertyNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-PropertyNode cmdlet creates a new PropertyNode object for modelling a PRTG Tree. Each PropertyNode object encapsulates a single PropertyValuePair object.</maml:para>
      <maml:para>If an existing PropertyValuePair from a PRTG Tree is not specified or piped to the -Value parameter, the -Id or -Object, Property and optional PropertyValue can be specified to identify the information that should be encapsulated in a node. If a -PropertyValue is not specified, New-PropertyNode will perform a lookup against the specified -Property to get the current property value from PRTG. -Property accepts both raw property names as well as type safe ObjectProperty values.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ObjectWithManualSet -->
      <command:syntaxItem>
        <maml:name>New-PropertyNode</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The ObjectProperty or raw property to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Either`2</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Either`2[[PrtgAPI.ObjectProperty, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PropertyValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>PropertyValue</maml:name>
          <maml:description>
            <maml:para>The value of the property. If this value is emitted, New-PropertyNode will resolve the Property value from PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object that contains the property.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgObject</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PrtgObject</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-PropertyNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PropertyValuePair</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PropertyValuePair</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualWithManualSet -->
      <command:syntaxItem>
        <maml:name>New-PropertyNode</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>The ObjectProperty or raw property to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Either`2</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Either`2[[PrtgAPI.ObjectProperty, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PropertyValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>PropertyValue</maml:name>
          <maml:description>
            <maml:para>The value of the property. If this value is emitted, New-PropertyNode will resolve the Property value from PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object containing the property.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object that contains the property.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgObject</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PropertyValuePair</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PropertyValuePair</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object containing the property.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>The ObjectProperty or raw property to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Either`2</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Either`2[[PrtgAPI.ObjectProperty, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null],[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PropertyValue -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>PropertyValue</maml:name>
        <maml:description>
          <maml:para>The value of the property. If this value is emitted, New-PropertyNode will resolve the Property value from PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PrtgObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object that contains the property.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PropertyValuePair</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $node.Value | New-PropertyNode</dev:code>
        <dev:remarks>
          <maml:para>Create a property node from the PropertyValuePair of an existing node.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | New-PropertyNode Name Ping</dev:code>
        <dev:remarks>
          <maml:para>Create a property node for the Name property with the value "Ping" for the object ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>New-PropertyNode -Id 1001 Name Ping</dev:code>
        <dev:remarks>
          <maml:para>Create a property node for the Name property with the value "Ping" for the object ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>New-PropertyNode -Id 1001 Name</dev:code>
        <dev:remarks>
          <maml:para>Create a property node with the current value of the Name property for the object with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>New-PropertyNode -Id 1001 name_</dev:code>
        <dev:remarks>
          <maml:para>Create a property node with the current value of the name_ raw property for the object with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ProbeNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Clear-PrtgCache -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Clear-PrtgCache</command:name>
      <command:verb>Clear</command:verb>
      <command:noun>PrtgCache</command:noun>
      <maml:description>
        <maml:para>Clears cached data used by a PRTG Network Monitor server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Clear-PrtgCache cmdlet clears Geo Map, Active Directory authentication and Graph Data details from a PRTG server. Geo Map and Active Directory authentication caches are grouped together under the General cache type. Graph Data is cleared separately, under the GraphData cache type.</maml:para>
      <maml:para>When Graph Data is cleared, the PRTG Core Service will automatically restart. To prevent this happening accidentally, Clear-PrtgCache will prompt you to confirm you are sure you wish to proceed. This can be overridden by specifying the -Force parameter.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Clear-PrtgCache</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of cache to clear.</maml:para>
            <maml:para>Possible values: General, GraphData</maml:para>
          </maml:description>
          <command:parameterValue required="true">SystemCacheType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SystemCacheType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>General</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GraphData</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces PRTG to clear caches that may cause a reboot of the PRTG Server without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of cache to clear.</maml:para>
          <maml:para>Possible values: General, GraphData</maml:para>
        </maml:description>
        <command:parameterValue required="true">SystemCacheType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SystemCacheType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>General</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">General</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GraphData</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces PRTG to clear caches that may cause a reboot of the PRTG Server without displaying a confirmation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Clear-PrtgCache General</dev:code>
        <dev:remarks>
          <maml:para>Clear Geo Map and Active Directory authentication caches.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Clear-PrtgCache GraphData -Force</dev:code>
        <dev:remarks>
          <maml:para>Clear PRTG's graph data cache without displaying a confirmation prompt that this will restart the PRTG Core Service.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#clear-system-caches-1</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-PrtgClient -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-PrtgClient</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PrtgClient</command:noun>
      <maml:description>
        <maml:para>Retrieves the current session's PrtgClient</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-PrtgClient cmdlet allows you to access the PrtgClient of the current session previously created with a call to Connect-PrtgServer. This allows you to view/edit the properties of the PrtgClient previously defined in your call to Connect-PrtgServer, as well as access the raw C# PrtgAPI should you wish to bypass or access methods not in the PowerShell interface.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-PrtgClient</maml:name>
        <!-- Parameter: Diagnostic -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Diagnostic</maml:name>
          <maml:description>
            <maml:para>Displays diagnostic information to assist when raising a PrtgAPI issue.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Diagnostic -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Diagnostic</maml:name>
        <maml:description>
          <maml:para>Displays diagnostic information to assist when raising a PrtgAPI issue.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: PrtgClient -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.PrtgClient</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgClient</dev:code>
        <dev:remarks>
          <maml:para>View the settings of the session's PrtgClient. If the session does not have a PrtgClient, the cmdlet returns null</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; (Get-PrtgClient).RetryCount = 5</dev:code>
        <dev:remarks>
          <maml:para>Change the RetryCount of the PrtgClient to 5</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; (Get-PrtgClient).GetSensors()</dev:code>
        <dev:remarks>
          <maml:para>Invoke the GetSensors method of the PrtgClient</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Getting-Started#session-management-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PrtgClient</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Set-PrtgClient -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-PrtgClient</command:name>
      <command:verb>Set</command:verb>
      <command:noun>PrtgClient</command:noun>
      <maml:description>
        <maml:para>Modifies settings on the current session's PrtgClient.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-PrtgClient cmdlet modifies settings present on the current session's PrtgClient. Typically these settings are specified when establishing a PRTG session with Connect-PrtgServer. This cmdlet allows you to modify these settings after the session has already been created, such as when you've connected to a GoPrtg Server.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-PrtgClient</maml:name>
        <!-- Parameter: IgnoreSSL -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSSL</maml:name>
          <maml:description>
            <maml:para>Ignore any SSL validation when communicating with PRTG. Modifying this property will regenerate the current session's PrtgClient.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LogLevel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogLevel</maml:name>
          <maml:description>
            <maml:para>The type of events to log when -Verbose is specified.</maml:para>
            <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogLevel[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogLevel[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the PrtgClient that will be used by this session after processing all parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Progress -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Progress</maml:name>
          <maml:description>
            <maml:para>Enable or disable PowerShell Progress when piping between cmdlets. By default, if Connect-PrtgServer is being called from within a script or the PowerShell ISE this value is false. Otherwise, true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RetryCount -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RetryCount</maml:name>
          <maml:description>
            <maml:para>The number of times to retry a request that times out while communicating with PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RetryDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RetryDelay</maml:name>
          <maml:description>
            <maml:para>The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: RetryCount -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RetryCount</maml:name>
        <maml:description>
          <maml:para>The number of times to retry a request that times out while communicating with PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RetryDelay -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RetryDelay</maml:name>
        <maml:description>
          <maml:para>The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogLevel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogLevel</maml:name>
        <maml:description>
          <maml:para>The type of events to log when -Verbose is specified.</maml:para>
          <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">LogLevel[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.LogLevel[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Progress -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Progress</maml:name>
        <maml:description>
          <maml:para>Enable or disable PowerShell Progress when piping between cmdlets. By default, if Connect-PrtgServer is being called from within a script or the PowerShell ISE this value is false. Otherwise, true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IgnoreSSL -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IgnoreSSL</maml:name>
        <maml:description>
          <maml:para>Ignore any SSL validation when communicating with PRTG. Modifying this property will regenerate the current session's PrtgClient.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the PrtgClient that will be used by this session after processing all parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Set-PrtgClient -RetryCount 5 -LogLevel Trace,Response</dev:code>
        <dev:remarks>
          <maml:para>Update the RetryCount and LogLevel on the current session's PrtgClient.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Getting-Started#session-management-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgClient</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Backup-PrtgConfig -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Backup-PrtgConfig</command:name>
      <command:verb>Backup</command:verb>
      <command:noun>PrtgConfig</command:noun>
      <maml:description>
        <maml:para>Requests a PRTG Network Monitor server create a backup of its configuration database.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Backup-PrtgConfig cmdlet requests a PRTG Network Monitor server create a backup of its configuration database after first writing the current running configuration to disk. Configuration backups are stored under the Configuration Auto-Backups folder, by default located at C:\ProgramData\Paessler\PRTG Network Monitor\Configuration Auto-Backups</maml:para>
      <maml:para>When this cmdlet is executed, PRTG will asynchronously start creating a configuration backup. As such, this cmdlet will return before the backup has completed. Depending on the size of your configuration database, this may take several seconds to complete. In order to guarantee a backup has been successfully completed, it is recommended to probe the contents of the Configuration Auto-Backups folder before and after running this script, to identify the backup file that was created as a result of running this cmdlet. The created backup can also be identified by parsing the DateTime timestamp in the created filename, typically "PRTG Configuration (Snapshot yyyy-MM-dd HH-mm-ss)"</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Backup-PrtgConfig</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Backup-PrtgConfig</dev:code>
        <dev:remarks>
          <maml:para>Trigger a backup of the PRTG Configuration Database.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#backup-config-database-1</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Sync-PrtgConfigFile -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Sync-PrtgConfigFile</command:name>
      <command:verb>Sync</command:verb>
      <command:noun>PrtgConfigFile</command:noun>
      <maml:description>
        <maml:para>Reloads config files including sensor lookups and device icons used by PRTG Network Monitor.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Load-PrtgConfigFile cmdlet reloads miscellaneous config files used by PRTG Network Monitor, including lookup definitions used for customizing how sensor values are displayed, as well as other miscellaneous config files including device icons, report templates and language files.</maml:para>
      <maml:para>Config files used by PRTG are automatically reloaded whenever the PRTG Core Service is restarted. To prevent having to completely restart PRTG whenever a config file is installed or modified, Load-PrtgConfigFile can instead be used.</maml:para>
      <maml:para>Device icons, report templates and language files are refreshed together by a single request, categorised by PrtgAPI as the General config file type. Sensor lookups are reloaded separately, under the Lookups file type.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Sync-PrtgConfigFile</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of config files to reload.</maml:para>
            <maml:para>Possible values: General, Lookups</maml:para>
          </maml:description>
          <command:parameterValue required="true">ConfigFileType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ConfigFileType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>General</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">General</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lookups</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of config files to reload.</maml:para>
          <maml:para>Possible values: General, Lookups</maml:para>
        </maml:description>
        <command:parameterValue required="true">ConfigFileType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ConfigFileType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>General</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">General</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Lookups</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Load-PrtgConfigFile General</dev:code>
        <dev:remarks>
          <maml:para>Reload any device icons, report templates or language files that may have been installed or modified since PRTG started.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Load-PrtgConfigFile Lookups</dev:code>
        <dev:remarks>
          <maml:para>Loads or reloads any sensor lookups that may have been changed or installed since PRTG was started.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#load-config-files-1</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Restart-PrtgCore -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Restart-PrtgCore</command:name>
      <command:verb>Restart</command:verb>
      <command:noun>PrtgCore</command:noun>
      <maml:description>
        <maml:para>Restarts the PRTG Core Service of a PRTG Network Monitor server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Restart-PrtgCore cmdlet restarts the PRTG Core Service of a PRTG Network Monitor Server. Upon restarting the service, all monitoring will cease functioning and all users will be completely disconnected. If PRTG is in a cluster setup, this cmdlet will only restart the PRTG Core Service of the server PrtgAPI is connected to.</maml:para>
      <maml:para>When executed, Restart-PrtgCore will prompt to confirm you wish to restart the PRTG Core Service. To override this prompt, the -Force parameter can be specified.By default, Restart-PrtgCore will one hour for the PRTG Core Service to completely restart and come back online. If you do not wish to wait at all, this can be overridden by specifying -Wait:$false. You may additionally specify a custom timeout duration (in seconds) via the -Timeout parameter. If Restart-PrtgCore times out waiting for the PRTG Core Service to restart, a TimeoutException will be thrown. Extreme caution should be used when using Restart-PrtgCore. While smaller PRTG installs can restart in a matter of minutes, servers containing in excess of 10,000 sensors can take over half an hour to restart.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Restart-PrtgCore</maml:name>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the PRTG Core Service to be restarted without displaying a confirmation prompt.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for the PRTG Core Service to restart. Default value is 3600 (1 hour). If Wait is false, this parameter will have no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3600</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Wait -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>Wait for the PRTG Core Service to restart before ending the cmdlet. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces the PRTG Core Service to be restarted without displaying a confirmation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Wait -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>Wait for the PRTG Core Service to restart before ending the cmdlet. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Duration (in seconds) to wait for the PRTG Core Service to restart. Default value is 3600 (1 hour). If Wait is false, this parameter will have no effect.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>3600</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Restart-PrtgCore</dev:code>
        <dev:remarks>
          <maml:para>Restart the PRTG Core Service. The cmdlet will wait up to 60 minutes for the service to restart.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Restart-PrtgCore -Wait:$false</dev:code>
        <dev:remarks>
          <maml:para>Restart the PRTG Core Service, without waiting for the service to restart before ending the cmdlet.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Restart-PrtgCore -Timeout 600</dev:code>
        <dev:remarks>
          <maml:para>Restart the PRTG Core Service, waiting 10 minutes (600 seconds) for the service to restart.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Administrative-Tools#restart-core-service-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Restart-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Open-PrtgObject -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Open-PrtgObject</command:name>
      <command:verb>Open</command:verb>
      <command:noun>PrtgObject</command:noun>
      <maml:description>
        <maml:para>Opens the URL of a PRTG Object in the PRTG Web Interface.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Open-PrtgObject cmdlet opens the web page of a PRTG Object in your default browser. Care should be taken with Open-PrtgObject, as your system may experience performance issues if too many URLs are opened at one time.</maml:para>
      <maml:para>Open-PrtgObject is only compatible with objects that contain a URL field; namely Probes, Devices, Groups Sensors, Notification Actions and Schedules.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Open-PrtgObject</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The sensor, device, group or probe to open.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: NotificationSet -->
      <command:syntaxItem>
        <maml:name>Open-PrtgObject</maml:name>
        <!-- Parameter: Notification -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Notification</maml:name>
          <maml:description>
            <maml:para>The notification action to open.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationAction</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationAction</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ScheduleSet -->
      <command:syntaxItem>
        <maml:name>Open-PrtgObject</maml:name>
        <!-- Parameter: Schedule -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Schedule</maml:name>
          <maml:description>
            <maml:para>The schedule to open.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Schedule</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Schedule</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Open-PrtgObject</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object to open.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The sensor, device, group or probe to open.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Notification -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Notification</maml:name>
        <maml:description>
          <maml:para>The notification action to open.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationAction</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationAction</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Schedule -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Schedule</maml:name>
        <maml:description>
          <maml:para>The schedule to open.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Schedule</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Schedule</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object to open.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor, device, group or probe to open.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationAction</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The notification action to open.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Schedule</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The schedule to open.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc-1 | Get-Sensor ping | Open-PrtgObject</dev:code>
        <dev:remarks>
          <maml:para>Open all sensors named "ping" under devices named "dc-1" in the default web browser.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Open-PrtgObject -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Opens the object with ID 1001 in the default web browser.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Miscellaneous#open-prtg-objects</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Disable-PrtgProgress -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Disable-PrtgProgress</command:name>
      <command:verb>Disable</command:verb>
      <command:noun>PrtgProgress</command:noun>
      <maml:description>
        <maml:para>Disables PRTG Progress for the current PowerShell Session.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Disable-PrtgProgress disables displaying progress when piping between PrtgAPI cmdlets. By default, progress is enabled when PrtgAPI is used outside of scripts or the PowerShell ISE. Progress can then be manually controlled via the Enable-PrtgProgress and Disable-PrtgProgress cmdlets. If progress is manually disabled, this setting will only persist for the current PowerShell session, or until the next time Connect-PrtgServer is run.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Disable-PrtgProgress</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Disable-PrtgProgress</dev:code>
        <dev:remarks>
          <maml:para>Disable PrtgAPI progress for the current session</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Progress</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-PrtgProgress</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Enable-PrtgProgress -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Enable-PrtgProgress</command:name>
      <command:verb>Enable</command:verb>
      <command:noun>PrtgProgress</command:noun>
      <maml:description>
        <maml:para>Enables PRTG Progress for the current PowerShell Session.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Enable-PrtgProgress enables displaying progress when piping between PrtgAPI cmdlets. By default, progress is enabled when PrtgAPI is used outside of scripts or the PowerShell ISE. Progress can then be manually controlled via the Enable-PrtgProgress and Disable-PrtgProgress cmdlets. If progress is manually enabled, this setting will only persist for the current PowerShell session, or until the next time Connect-PrtgServer is run.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Enable-PrtgProgress</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Enable-PrtgProgress</dev:code>
        <dev:remarks>
          <maml:para>Enable PrtgAPI progress for the current session</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Progress</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-PrtgProgress</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-PrtgSchedule -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-PrtgSchedule</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PrtgSchedule</command:noun>
      <maml:description>
        <maml:para>Retrieves all Monitoring Schedules from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-PrtgSchedule cmdlet retrieves all monitoring schedules present on a PRTG Server. Schedules define the timeframes during which monitoring on sensors can be active. When sensors are deactivated due to schedules, their statuses will automatically be set to PausedBySchedule.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-PrtgSchedule</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Schedule -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Schedule</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgSchedule</dev:code>
        <dev:remarks>
          <maml:para>Get all monitoring schedules.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgSchedule *night*</dev:code>
        <dev:remarks>
          <maml:para>Get all monitoring schedules whose name contains "night"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $schedule = Get-PrtgSchedule -Id 621

C:\&gt; Get-Sensor -Id 2024 | Set-ObjectProperty -RawParameters @{
&gt;&gt;      scheduledependency = 0
&gt;&gt;      schedule_ = $schedule
&gt;&gt;   }</dev:code>
        <dev:remarks>
          <maml:para>Apply the schedule with ID 621 to the sensor with ID 2024</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Schedules#powershell</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Connect-PrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Connect-PrtgServer</command:name>
      <command:verb>Connect</command:verb>
      <command:noun>PrtgServer</command:noun>
      <maml:description>
        <maml:para>Initializes a new instance of a PrtgClient. This cmdlet must be called at least once before attempting to use any other cmdlets.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Connect-PrtgServer cmdlet establishes a new connection to a PRTG Server. As PRTG uses a stateless REST API, Connect-PrtgServer initializes a PrtgClient which stores the settings that will be used when generating each request.</maml:para>
      <maml:para>PRTG supports two authentication methods: username/password and username/passhash. A PassHash is a numeric password generated by PRTG that can be used in place of your regular password. When your PrtgClient is initialized, if you have specified a password PrtgAPI will automatically retrieve your account's PassHash for use in all future requests.</maml:para>
      <maml:para>By default when PRTG times out while processing a request PrtgAPI will throw an exception. This can be quite problematic when attempting to batch process a large number of items with PrtgAPI in PowerShell. You can request PrtgAPI automatically attempt to retry failed requests by specifying the -RetryCount and -RetryDelay parameters. If -RetryCount is greater than 0, PrtgAPI will send a warning to the pipeline indicating a failure has occurred, as well as the number of retries remaining before PrtgAPI gives up. Each request invocation uses a separate retry count.</maml:para>
      <maml:para>If a protocol is not specified, PrtgAPI will connect with HTTPS. If your PRTG Server is HTTP only, this will cause an exception. For HTTP only servers, prefix your URL with http://</maml:para>
      <maml:para>When Connect-PrtgServer is run from outside of a script or the PowerShell ISE, PrtgAPI will display PowerShell progress when piping between PrtgAPI cmdlets or when piping from variables containing PrtgAPI objects. This default setting can be overridden by specifying a value to the -Progress parameter, or by using the Enable-PrtgProgress and Disable-PrtgProgress cmdlets.</maml:para>
      <maml:para>Attempting to invoke Connect-PrtgServer after a PrtgClient has already been initialized for the current session will generate an exception. To override the existing PrtgClient, specify the -Force parameter to Connect-PrtgServer, or invalidate the PrtgClient by calling Disconnect-PrtgServer. The current PrtgClient can be retrieved via the Get-PrtgClient cmdlet. This cmdlet can also be used to detect whether a connection is active. If you wish to retrieve the PrtgClient immediately upon connecting to PRTG, this can be achieved by specifying the -PassThru parameter to Connect-PrtgServer.</maml:para>
      <maml:para>For information on viewing and editing the session's PrtgClient settings see Get-Help Get-PrtgClient.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Connect-PrtgServer</maml:name>
        <!-- Parameter: Server -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>Specifies the PRTG Server requests will be made against.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Credential -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the username and password to authenticate with. If PassHash is specified, the password will be treated as a PassHash instead.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces a PrtgClient to be replaced if one already exists.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSSL -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSSL</maml:name>
          <maml:description>
            <maml:para>Whether to ignore SSL certificate errors encountered when communicating with your Server. In Windows PowerShell affects all requests for the life of your process.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LogLevel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogLevel</maml:name>
          <maml:description>
            <maml:para>The type of events to log when -Verbose is specified.</maml:para>
            <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">LogLevel[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.LogLevel[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: PassHash -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassHash</maml:name>
          <maml:description>
            <maml:para>Specifies that the Credential's password contains a PassHash instead of a Password.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the PrtgClient that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Progress -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Progress</maml:name>
          <maml:description>
            <maml:para>Enable or disable PowerShell Progress when piping between cmdlets. By default, if Connect-PrtgServer is being called from within a script or the PowerShell ISE this value is false. Otherwise, true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RetryCount -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RetryCount</maml:name>
          <maml:description>
            <maml:para>The number of times to retry a request that times out while communicating with PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RetryDelay -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RetryDelay</maml:name>
          <maml:description>
            <maml:para>The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Server -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>Specifies the PRTG Server requests will be made against.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Credential -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the username and password to authenticate with. If PassHash is specified, the password will be treated as a PassHash instead.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces a PrtgClient to be replaced if one already exists.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassHash -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassHash</maml:name>
        <maml:description>
          <maml:para>Specifies that the Credential's password contains a PassHash instead of a Password.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: RetryCount -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RetryCount</maml:name>
        <maml:description>
          <maml:para>The number of times to retry a request that times out while communicating with PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: RetryDelay -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RetryDelay</maml:name>
        <maml:description>
          <maml:para>The base delay (in seconds) between retrying a timed out request. Each successive failure of a given request will wait an additional multiple of this value.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>3</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: LogLevel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogLevel</maml:name>
        <maml:description>
          <maml:para>The type of events to log when -Verbose is specified.</maml:para>
          <maml:para>Possible values: None, Trace, Request, Response, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">LogLevel[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.LogLevel[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Trace</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Request</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Response</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Progress -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Progress</maml:name>
        <maml:description>
          <maml:para>Enable or disable PowerShell Progress when piping between cmdlets. By default, if Connect-PrtgServer is being called from within a script or the PowerShell ISE this value is false. Otherwise, true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the PrtgClient that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IgnoreSSL -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IgnoreSSL</maml:name>
        <maml:description>
          <maml:para>Whether to ignore SSL certificate errors encountered when communicating with your Server. In Windows PowerShell affects all requests for the life of your process.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Specifies the username and password to authenticate with. If PassHash is specified, the password will be treated as a PassHash instead.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Connect-PrtgServer prtg.example.com</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server. You will receive a login prompt requesting you enter your credentials.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Connect-PrtgServer prtg.example.com (New-Credential prtgadmin prtgadmin)</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server specifying your credentials as part of the command. The New-Credential cmdlet can be used when developing scripts to avoid a login prompt.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Connect-PrtgServer prtg.example2.com -Force</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server, overriding the session's existing PrtgClient (if applicable)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Connect-PrtgServer http://prtg.example.com</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server using HTTP. http:// must be specified for servers that do not accept HTTPS.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>if(!(Get-PrtgClient))
{
    Connect-PrtgServer prtg.example.com
}</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server only if an existing connection is not active.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; $client = Connect-PrtgServer prtg.example.com -PassThru</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server, storing the PrtgClient for later use.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Connect-PrtgServer prtg.example.com -RetryCount 3 -RetryDelay 5</dev:code>
        <dev:remarks>
          <maml:para>Connect to a PRTG Server, indicating that any requests that fail during the use of the PrtgClient should be attempted at most 3 times, with a delay of 5 seconds between each attempt.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Getting-Started#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgClient</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PrtgClient</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-PrtgProgress</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-PrtgProgress</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Install-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-GoPrtgServer</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Disconnect-PrtgServer -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Disconnect-PrtgServer</command:name>
      <command:verb>Disconnect</command:verb>
      <command:noun>PrtgServer</command:noun>
      <maml:description>
        <maml:para>Invalidates a PrtgClient previously created with Connect-PrtgServer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Disconnect-PrtgServer cmdlet invalidates a PrtgClient previously created with Connect-PrtgServer. As PRTG uses a stateless REST API, it is not necessary to call Disconnect-PrtgServer when you have finished making requests unless you are developing a script, in which case Connect-PrtgServer will fail to create a PrtgClient if a PRTG connection is already active in the current session. This can be circumvented by specifying the -Force parameter when establishing the connection. For more information, see Connect-PrtgServer.</maml:para>
      <maml:para>If Disconnect-PrtgServer is called when you are not connected to a PRTG Server, this cmdlet does nothing.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Disconnect-PrtgServer</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Disconnect-PrtgServer</dev:code>
        <dev:remarks>
          <maml:para>Disconnect from the current PRTG Server</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Getting-Started#session-management-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-PrtgServer</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgClient</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-PrtgStatus -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-PrtgStatus</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PrtgStatus</command:noun>
      <maml:description>
        <maml:para>Retrieves configuration, status and version details from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-PrtgStatus cmdlet retrieves status details from a PRTG Server, including details regarding sensor types, license and version details, cluster config and user access rights.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-PrtgStatus</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: ServerStatus -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.ServerStatus</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgStatus</dev:code>
        <dev:remarks>
          <maml:para>Retrieve the current system status.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Miscellaneous#prtg-system-status-1</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Compare-PrtgTree -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Compare-PrtgTree</command:name>
      <command:verb>Compare</command:verb>
      <command:noun>PrtgTree</command:noun>
      <maml:description>
        <maml:para>Compares two PrtgNode trees and creates a new tree that describes their differences.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Compare-PrtgTree cndlet compares two PrtgNode trees and creates a comparison tree that describes their differences. If the -Reduce parameter is specified, the resulting tree will be reduced to only the branches that contain differences (if no branches contain differences the tree will be reduced to null).</maml:para>
      <maml:para>By default all tree node difference types will be considered in the comparison. This can be overridden by specifying types to the -Include and -Ignore parameters. Any parameters specified to -Ignore will override any values that would otherwise be included.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Compare-PrtgTree</maml:name>
        <!-- Parameter: Second -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>The root of the second tree to compare.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: First -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>First</maml:name>
          <maml:description>
            <maml:para>The root of the first tree to compare.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Ignore -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Ignore</maml:name>
          <maml:description>
            <maml:para>Specifies the comparison differences to ignore. Supersedes any conflicting values specified to -Type.</maml:para>
            <maml:para>Possible values: None, Type, ParentId, Name, Value, Position, HasChildren, NumberOfChildren, Added, Removed</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeNodeDifference[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeNodeDifference[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HasChildren</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NumberOfChildren</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Added</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Removed</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Include -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Include</maml:name>
          <maml:description>
            <maml:para>Specifies the types of comparisons to consider. By default all comparisons will be performed.</maml:para>
            <maml:para>Possible values: None, Type, ParentId, Name, Value, Position, HasChildren, NumberOfChildren, Added, Removed</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeNodeDifference[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeNodeDifference[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HasChildren</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NumberOfChildren</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Added</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Removed</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Reduce -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Reduce</maml:name>
          <maml:description>
            <maml:para>Reduce the resulting tree to only the branches that contain differences.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: First -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>First</maml:name>
        <maml:description>
          <maml:para>The root of the first tree to compare.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Second -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Second</maml:name>
        <maml:description>
          <maml:para>The root of the second tree to compare.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Include -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Include</maml:name>
        <maml:description>
          <maml:para>Specifies the types of comparisons to consider. By default all comparisons will be performed.</maml:para>
          <maml:para>Possible values: None, Type, ParentId, Name, Value, Position, HasChildren, NumberOfChildren, Added, Removed</maml:para>
        </maml:description>
        <command:parameterValue required="true">TreeNodeDifference[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeNodeDifference[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HasChildren</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NumberOfChildren</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Added</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Removed</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Ignore -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Ignore</maml:name>
        <maml:description>
          <maml:para>Specifies the comparison differences to ignore. Supersedes any conflicting values specified to -Type.</maml:para>
          <maml:para>Possible values: None, Type, ParentId, Name, Value, Position, HasChildren, NumberOfChildren, Added, Removed</maml:para>
        </maml:description>
        <command:parameterValue required="true">TreeNodeDifference[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeNodeDifference[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HasChildren</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NumberOfChildren</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Added</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Removed</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Reduce -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Reduce</maml:name>
        <maml:description>
          <maml:para>Reduce the resulting tree to only the branches that contain differences.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The root of the first tree to compare.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $firstTree | Compare-PrtgTree $secondTree</dev:code>
        <dev:remarks>
          <maml:para>Compare two PrtgNode trees.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $firstTree | Compare-PrtgTree $secondTree -Reduce</dev:code>
        <dev:remarks>
          <maml:para>Compare two PrtgNode trees, reducing the comparison to tree to only branches that contain differences.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $firstTree | Compare-PrtgTree $secondTree -Include Added,Removed -Reduce</dev:code>
        <dev:remarks>
          <maml:para>Compare two PrtgNode trees, including only nodes that have been added or removed and then reducing the result to only the pertinent branches.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $firstTree | Compare-PrtgTree $secondTree -Ignore Value</dev:code>
        <dev:remarks>
          <maml:para>Compare two PrtgNode trees, ignoring differences in PropertyNode values.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Manipulation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgTree</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-PrtgTree -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-PrtgTree</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PrtgTree</command:noun>
      <maml:description>
        <maml:para>Retrieves a PRTG Tree for a PRTG Object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-PrtgTree cmdlet retrieves a PRTG Tree for a PRTG Object. Get-PrtgTree will recurse all children of a specified object to construct a hierarchy of nodes representing the specified object and all of its descendants. PRTG Node Trees can then be further manipulated using various extension methods, or passed to additional PRTG Tree cmdlets for further processing.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-PrtgTree</maml:name>
        <!-- Parameter: Lazy -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lazy</maml:name>
          <maml:description>
            <maml:para>Specifies that child nodes should be retrieved lazily on demand rather than synchronously all at once.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to construct a tree for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Options -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
            <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-PrtgTree</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to construct a tree for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Lazy -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lazy</maml:name>
          <maml:description>
            <maml:para>Specifies that child nodes should be retrieved lazily on demand rather than synchronously all at once.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Options -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
            <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to construct a tree for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Options -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Options</maml:name>
        <maml:description>
          <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
          <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to construct a tree for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Lazy -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Lazy</maml:name>
        <maml:description>
          <maml:para>Specifies that child nodes should be retrieved lazily on demand rather than synchronously all at once.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to construct a tree for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgTree</dev:code>
        <dev:remarks>
          <maml:para>Construct a PRTG Tree from the Root Object (ID: 0).</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Probe -Id 1 | Get-PrtgTree</dev:code>
        <dev:remarks>
          <maml:para>Construct a PRTG Tree from the Probe with ID 1.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgTree -Id 1</dev:code>
        <dev:remarks>
          <maml:para>Construct a PRTG Tree from the object with ID 1.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Show-PrtgTree</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Show-PrtgTree -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Show-PrtgTree</command:name>
      <command:verb>Show</command:verb>
      <command:noun>PrtgTree</command:noun>
      <maml:description>
        <maml:para>Pretty prints a TreeNode object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Show-PrtgTree cmdlet pretty prints a PRTG Tree Object, such as a PrtgNode or CompareNode. When printing PrtgNode objects, key nodes are colored according to their state or purpose (e.g. sensors that are Up are green, Down red, etc). When printing CompareNode objects, nodes are colored according to the result of their comparisons. If an object is red, it was removed, green added, yellow changed.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Show-PrtgTree</maml:name>
        <!-- Parameter: Tree -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Tree</maml:name>
          <maml:description>
            <maml:para>The tree to print.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeNode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeNode</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Options -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
            <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Reduce -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Reduce</maml:name>
          <maml:description>
            <maml:para>Reduces the specified Tree before printing. If the specified tree does not support reducing, a ParameterBindingException will be thrown.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ObjectSet -->
      <command:syntaxItem>
        <maml:name>Show-PrtgTree</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object whose tree should be printed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Options -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
            <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Show-PrtgTree</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object whose tree should be printed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Options -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
            <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Tree -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Tree</maml:name>
        <maml:description>
          <maml:para>The tree to print.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TreeNode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeNode</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Reduce -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Reduce</maml:name>
        <maml:description>
          <maml:para>Reduces the specified Tree before printing. If the specified tree does not support reducing, a ParameterBindingException will be thrown.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object whose tree should be printed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorOrDeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Options -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Options</maml:name>
        <maml:description>
          <maml:para>Specifies the types of descendants to include when constructing a PrtgNode tree. If no value is specified, Common will be used.</maml:para>
          <maml:para>Possible values: Sensors, Devices, Groups, Probes, Properties, Triggers, Common, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">TreeParseOption[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeParseOption[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Devices</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Groups</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probes</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Properties</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Triggers</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Common</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object whose tree should be printed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.TreeNode</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The tree to print.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SensorOrDeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object whose tree should be printed.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-PrtgTree -Id 1 | Show-PrtgTree</dev:code>
        <dev:remarks>
          <maml:para>Prints the PRTG Tree for the object with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Manipulation#visualization-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PrtgTree</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-SearchFilter -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-SearchFilter</command:name>
      <command:verb>New</command:verb>
      <command:noun>SearchFilter</command:noun>
      <maml:description>
        <maml:para>Filters results on the PRTG Server to improve performance.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-SearchFilter cmdlet allows you to filter the results returned by a cmdlet by a custom property. Each object returned from New-SearchFilter defines a single filter rule. Multiple filters can often be passed to compatible cmdlets to filter on multiple values. As a shorthand, you can access the New-SearchFilter cmdlet via the alias 'flt'.</maml:para>
      <maml:para>To view all properties that can be filtered on for on objects, see the SYNTAX or PARAMETERS section of this cmdlet's help page.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>New-SearchFilter</maml:name>
        <!-- Parameter: Property -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Object property to filter on.</maml:para>
            <maml:para>Possible values: Id, Type, Name, Tags, Active, Downtime, TotalDowntime, DownDuration, Uptime, TotalUptime, UpDuration, TotalMonitorTime, DataCollectedSince, Sensor, Interval, LastCheck, LastUp, LastDown, Device, Group, Probe, GrpDev, NotificationTypes, Access, Dependency, Status, Message, Priority, LastValue, UpSensors, DownSensors, DownAcknowledgedSensors, PartialDownSensors, WarningSensors, PausedSensors, UnusualSensors, UnknownSensors, TotalSensors, Value, Coverage, Favorite, UserName, Parent, DateTime, DateOnly, TimeOnly, Schedule, Period, Email, Template, LastRun, NextRun, Size, MiniGraph, DeviceIcon, Comments, Host, Condition, ProbeStatus, BaseType, Url, Icon, ParentId, Location, Collapsed, TotalGroups, TotalDevices, TicketType, ModifiedBy, Actions, Content, Position, StartDate, EndDate, RecordAge</maml:para>
          </maml:description>
          <command:parameterValue required="true">Property</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Property</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Id</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Downtime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalDowntime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownDuration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Uptime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalUptime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpDuration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalMonitorTime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DataCollectedSince</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastCheck</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastUp</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastDown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GrpDev</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotificationTypes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Access</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Dependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Status</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Message</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastValue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UpSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledgedSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PartialDownSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarningSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnusualSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UnknownSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalSensors</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Coverage</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Favorite</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UserName</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Parent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DateOnly</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TimeOnly</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Schedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Period</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Email</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Template</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LastRun</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NextRun</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Size</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">MiniGraph</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DeviceIcon</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Condition</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ProbeStatus</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BaseType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Icon</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collapsed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalGroups</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TotalDevices</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">TicketType</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ModifiedBy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Actions</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Content</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">StartDate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EndDate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">RecordAge</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Operator -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Operator</maml:name>
          <maml:description>
            <maml:para>Operator to filter with.</maml:para>
            <maml:para>Possible values: Equals, NotEquals, GreaterThan, LessThan, Contains</maml:para>
          </maml:description>
          <command:parameterValue required="true">FilterOperator</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FilterOperator</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Equals</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GreaterThan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LessThan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Contains</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Value to filter for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Illegal -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Illegal</maml:name>
          <maml:description>
            <maml:para>Permits constructing search expressions believed to be incompatible with all versions of PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Specifies to avoid performing formatting the serialized filter value based on the required format of the specified filter property.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Property -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>Object property to filter on.</maml:para>
          <maml:para>Possible values: Id, Type, Name, Tags, Active, Downtime, TotalDowntime, DownDuration, Uptime, TotalUptime, UpDuration, TotalMonitorTime, DataCollectedSince, Sensor, Interval, LastCheck, LastUp, LastDown, Device, Group, Probe, GrpDev, NotificationTypes, Access, Dependency, Status, Message, Priority, LastValue, UpSensors, DownSensors, DownAcknowledgedSensors, PartialDownSensors, WarningSensors, PausedSensors, UnusualSensors, UnknownSensors, TotalSensors, Value, Coverage, Favorite, UserName, Parent, DateTime, DateOnly, TimeOnly, Schedule, Period, Email, Template, LastRun, NextRun, Size, MiniGraph, DeviceIcon, Comments, Host, Condition, ProbeStatus, BaseType, Url, Icon, ParentId, Location, Collapsed, TotalGroups, TotalDevices, TicketType, ModifiedBy, Actions, Content, Position, StartDate, EndDate, RecordAge</maml:para>
        </maml:description>
        <command:parameterValue required="true">Property</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Property</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Id</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Type</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Name</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Tags</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Downtime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalDowntime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownDuration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Uptime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalUptime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpDuration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalMonitorTime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DataCollectedSince</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Interval</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastCheck</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastUp</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastDown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GrpDev</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotificationTypes</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Access</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Dependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Status</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Message</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Priority</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastValue</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UpSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledgedSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PartialDownSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WarningSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UnusualSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UnknownSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalSensors</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Coverage</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Favorite</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">UserName</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Parent</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DateOnly</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TimeOnly</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Schedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Period</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Email</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Template</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LastRun</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NextRun</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Size</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">MiniGraph</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DeviceIcon</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Comments</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Host</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Condition</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ProbeStatus</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">BaseType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Url</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Icon</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ParentId</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Location</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Collapsed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalGroups</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TotalDevices</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">TicketType</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ModifiedBy</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Actions</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Content</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Position</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">StartDate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EndDate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">RecordAge</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Operator -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Operator</maml:name>
        <maml:description>
          <maml:para>Operator to filter with.</maml:para>
          <maml:para>Possible values: Equals, NotEquals, GreaterThan, LessThan, Contains</maml:para>
        </maml:description>
        <command:parameterValue required="true">FilterOperator</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.FilterOperator</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Equals</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Equals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEquals</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GreaterThan</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LessThan</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Contains</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>Value to filter for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Illegal -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Illegal</maml:name>
        <maml:description>
          <maml:para>Permits constructing search expressions believed to be incompatible with all versions of PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Raw -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Raw</maml:name>
        <maml:description>
          <maml:para>Specifies to avoid performing formatting the serialized filter value based on the required format of the specified filter property.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Property</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Object property to filter on.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.FilterOperator</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Operator to filter with.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Value to filter for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: SearchFilter -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; flt parentid eq 1001 | Get-Sensor</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors under the object with ID 1001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Filters#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Add-Sensor -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-Sensor</command:name>
      <command:verb>Add</command:verb>
      <command:noun>Sensor</command:noun>
      <maml:description>
        <maml:para>Adds a new sensor to a PRTG Device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-Sensor cmdlet adds a new sensor to a PRTG Device. When adding a new sensor, you must first create a NewSensorParameters object that defines the type of sensor to create and the settings to use in the new object.</maml:para>
      <maml:para>When adding sensor types that are natively supported by PrtgAPI, Add-Sensor will validate that all mandatory parameter fields contain values. If a mandatory field is missing a value, Add-Sensor will throw an InvalidOperationException, listing the field whose value was missing. When adding unsupported sensor types defined in RawSensorParameters, Add-Sensor does not perform any parameter validation. As such, it is critical to ensure that all parameter names and values are valid before passing the parameters to the Add-Sensor cmdlet.</maml:para>
      <maml:para>For parameter types that support specifying multiple SensorTarget objects (such as WmiServiceSensorParameters) PRTG can fail to add all sensors properly if the size of a single request is too large (generally 60 items or greater). To prevent this issue from happening, PrtgAPI automatically splits your request into a series of smaller requests, however if you find yourself experiencing issues, this is something to be aware of.</maml:para>
      <maml:para>By default, Add-Sensor will attempt to resolve the created sensor(s) to one or more Sensor objects. As PRTG does not return the ID of the created object, PrtgAPI identifies the newly created group by comparing the sensors under the parent object before and after the new sensor(s) are created. While this is generally very reliable, in the event something or someone else creates another new sensor directly under the target object with the same Name, that object will also be returned in the objects resolved by Add-Sensor. If you do not wish to resolve the created sensor, this behavior can be disabled by specifying -Resolve:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Add-Sensor</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NewSensorParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.NewSensorParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Destination -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>The parent object to create an object under.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: TargetSet -->
      <command:syntaxItem>
        <maml:name>Add-Sensor</maml:name>
        <!-- Parameter: Parameters -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NewSensorParameters</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Parameters.NewSensorParameters</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Destination -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Parameters -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NewSensorParameters</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.NewSensorParameters</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parent object to create an object under.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Parameters.NewSensorParameters</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>A set of parameters whose properties describe the type of object to add, with what settings.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters ExeXml "Monitor Traffic" "TrafficMonitor.ps1"

C:\&gt; Get-Device *fw* | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Add an EXE/Script Advanced sensor to all firewall devices, using the script "TrafficMonitor.ps1"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $raw = @{
&gt;&gt;      name_ = "my raw sensor"
&gt;&gt;      tags_ = "xmlexesensor"
&gt;&gt;      priority_ = 4
&gt;&gt;      exefile_ = "CustomScript.ps1|CustomScript.ps1||
&gt;&gt;      exeparams_ = "arg1 arg2 arg3"
&gt;&gt;      environment_ = 1
&gt;&gt;      usewindowsauthentication_ = 1
&gt;&gt;      mutexname_ = "testMutex"
&gt;&gt;      timeout_ = 70
&gt;&gt;      writeresult_ = 1
&gt;&gt;      intervalgroup = 0
&gt;&gt;      interval_ = "30|30 seconds"
&gt;&gt;      errorintervalsdown_ = 2
&gt;&gt;      sensortype = "exexml"
&gt;&gt; }

C:\&gt; $params = New-SensorParameters $raw

C:\&gt; Get-Device dc-1 | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Add a new EXE/Script Advanced sensor to the device named dc-1 using a hashtable containing its raw parameters.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorParameters</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Confirm-Sensor -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Confirm-Sensor</command:name>
      <command:verb>Confirm</command:verb>
      <command:noun>Sensor</command:noun>
      <maml:description>
        <maml:para>Marks a Down sensor as DownAcknowledged.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Acknowledge-Sensor cmdlet acknowledges a sensor that is currently in a 'Down' state. When a sensor is acknowledged, it no longer generates notification triggers and is moved from the 'Down' sensors page to the 'Down (Acknowledged)' sensors page.</maml:para>
      <maml:para>When acknowledging a sensor, you must specify how long to acknowledge the sensor for. If the sensor is still in a down state when the acknowledgement period expires, the sensor will return to a Down state. While in a Down (Acknowledged) state PRTG will continue refreshing the sensor according to its scanning interval. If at any time the requisite conditions are met for the sensor to enter an 'Up' state, the sensor will turn 'Up' and no further action will be required. If an acknowledged sensor that has gone Up fails and returns to a Down state, the sensor will need to be re-acknowledged.</maml:para>
      <maml:para>If a sensor is continually flapping, it may be better to pause the sensor rather than acknowledge it. For more information on pausing objects, see Pause-Object.</maml:para>
      <maml:para>By default, Acknowledge-Sensor will operate in Batch Mode. In Batch Mode, Acknowledge-Sensor will not execute a request for each individual object, but will rather store each item in a queue to acknowledge all objects at once, via a single request. This allows PrtgAPI to be extremely performant in performing operations against a large number of objects.</maml:para>
      <maml:para>If the pipeline is cancelled (either due to a cmdlet throwing an exception or the user pressing Ctrl-C) before fully completing, Acknowledge-Sensor will not generate a request against PRTG. If you wish to disable Batch Mode and fully process objects individually one at a time, this can be achieved by specifying -Batch:$false.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Duration -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Duration</maml:name>
          <maml:description>
            <maml:para>The duration to acknowledge the sensor for, in minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UntilSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Until -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Until</maml:name>
          <maml:description>
            <maml:para>The datetime at which the object should become unacknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ForeverSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Forever -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Forever</maml:name>
          <maml:description>
            <maml:para>Indicates the object should be acknowledged indefinitely.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Duration -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Duration</maml:name>
          <maml:description>
            <maml:para>The duration to acknowledge the sensor for, in minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="SensorId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UntilManualSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="SensorId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Until -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Until</maml:name>
          <maml:description>
            <maml:para>The datetime at which the object should become unacknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ForeverManualSet -->
      <command:syntaxItem>
        <maml:name>Confirm-Sensor</maml:name>
        <!-- Parameter: Forever -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Forever</maml:name>
          <maml:description>
            <maml:para>Indicates the object should be acknowledged indefinitely.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="SensorId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the sensor to acknowledge.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Batch -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Batch</maml:name>
          <maml:description>
            <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The sensor to acknowledge.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="SensorId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the sensor to acknowledge.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named" aliases="SensorId">
        <maml:name>SensorId</maml:name>
        <maml:description>
          <maml:para>ID of the sensor to acknowledge.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Duration -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Duration</maml:name>
        <maml:description>
          <maml:para>The duration to acknowledge the sensor for, in minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Until -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Until</maml:name>
        <maml:description>
          <maml:para>The datetime at which the object should become unacknowledged.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1/1/0001 12:00:00 AM</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Forever -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Forever</maml:name>
        <maml:description>
          <maml:para>Indicates the object should be acknowledged indefinitely.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <maml:description>
          <maml:para>A message to display on the object indicating the reason it is acknowledged.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Batch -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Batch</maml:name>
        <maml:description>
          <maml:para>Specifies whether this cmdlet should queue all objects piped to this cmdlet to execute a single request against PRTG for processing all objects. By default this value is true.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original PrtgObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor to acknowledge.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>ID of the sensor to acknowledge.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Status Down | Acknowledge-Sensor -Duration 60</dev:code>
        <dev:remarks>
          <maml:para>Acknowledge all down sensors for the next 60 minutes</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Status Down | Acknowledge-Sensor -Until (Get-Date).AddDays(30) -Message "Honestly, CBF"</dev:code>
        <dev:remarks>
          <maml:para>Acknowledge all down sensors for the next 30 days with a message explaining the reason the sensor was acknowledged</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor Ping -Status Down | Acknowledge-Sensor -Forever</dev:code>
        <dev:remarks>
          <maml:para>Acknowledge all down ping sensors forever (or until they comes back up by themselves)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Acknowledge-Sensor -Id 1001 -Duration 10</dev:code>
        <dev:remarks>
          <maml:para>Acknowledge the sensor with ID 1001 for 10 minutes.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/State-Manipulation#acknowledge-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pause-Object</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-Sensor -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-Sensor</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Sensor</command:noun>
      <maml:description>
        <maml:para>Retrieves sensors from a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Sensor cmdlet retrieves sensors from a PRTG Server. Sensors are the fundamental unit of monitoring in PRTG, and the most populous type of object in the system by far. Get-Sensor provides a variety of methods of filtering the sensors requested from PRTG, including by sensor name, ID, status and tags as well as parent probe/group/device. Multiple filters can be used in conjunction to further limit the number of results returned. Sensor properties that do not contain explicitly defined parameters on Get-Sensor can be specified as dynamic parameters, allowing one or more values to be specified of the specified type. All string parameters support the use of wildcards.</maml:para>
      <maml:para>For scenarios in which you wish to exert finer grained control over search filters, a custom SearchFilter object can be created specifying the field name, condition and value to filter upon. For information on properties that can be filtered on, see New-SearchFilter. When searching for Sensor Factory objects, please note that these objects do not respond to server side filters by "type". To filter for Sensor Factory sensors, filter by the tag "factorysensor".</maml:para>
      <maml:para>When invoked with no arguments, Get-Sensor will query the number of sensors present on your PRTG Server. If PrtgAPI detects the number is about a specified threshold, PrtgAPI will split the request up into several smaller requests which will each be invoked one after the other. Results will then be "streamed" to the pipeline as each smaller request completes. A progress bar will also be visible up the top indicating the total number of sensors retrieved/remaining.</maml:para>
      <maml:para>Get-Sensor provides two parameter sets for filtering objects by tags. When filtering for sensors that contain one of several tags, the -Tag parameter can be used, performing a logical OR between all specified operands. For scenarios in which you wish to filter for sensors containing ALL specified tags, the -Tags parameter can be used, performing a logical AND between all specified operands.</maml:para>
      <maml:para>When requesting sensors belonging to a specified group, PRTG will not return any objects that may be present under further child groups of the parent group. To work around this, by default Get-Sensor will automatically recurse child groups if it detects the initial sensor request did not return all items (as evidenced by the parent group's TotalSensors property. If you do not wish Get-Sensor to recurse child groups, this behavior can be overridden by specifying -Recurse:$false.</maml:para>
      <maml:para>The Sensor objects returned from Get-Sensor can be piped to a variety of other cmdlets for further processing, including Get-Channel, wherein the ID of the sensor will be used to acquire its underlying channels.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: LogicalAndTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Sensor</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DataCollectedSince -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DataCollectedSince</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The parent Device to retrieve sensors for, or a wildcard expression specifying the names of the devices to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Device, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownDuration -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownDuration</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Downtime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Downtime</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Favorite -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Favorite</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastCheck -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastCheck</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastDown -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastDown</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastUp -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastUp</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastValue</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MiniGraph -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MiniGraph</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The Probe to retrieve sensors for, or a wildcard expression specifying the names of the probes to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDowntime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDowntime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalMonitorTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalMonitorTime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalUptime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalUptime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpDuration -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpDuration</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Uptime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Uptime</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: LogicalOrTagsSet -->
      <command:syntaxItem>
        <maml:name>Get-Sensor</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Filter -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SearchFilter[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Access -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Access</maml:name>
          <maml:description>
            <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
          </maml:description>
          <command:parameterValue required="true">Access[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Access[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseType</maml:name>
          <maml:description>
            <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.BaseType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Comments -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comments</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DataCollectedSince -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DataCollectedSince</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Dependency -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Dependency</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The parent Device to retrieve sensors for, or a wildcard expression specifying the names of the devices to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Device, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: DownDuration -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DownDuration</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Downtime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Downtime</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Favorite -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Favorite</maml:name>
          <command:parameterValue required="true">bool[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Group -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>The group to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Retrieve an object with a specified ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastCheck -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastCheck</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastDown -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastDown</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastUp -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastUp</maml:name>
          <command:parameterValue required="true">DateTime[]</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LastValue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LastValue</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Message -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Message</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MiniGraph -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MiniGraph</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentId</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Position -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Position</maml:name>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
          </maml:description>
          <command:parameterValue required="true">Priority[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Priority[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Probe -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Probe</maml:name>
          <maml:description>
            <maml:para>The Probe to retrieve sensors for, or a wildcard expression specifying the names of the probes to retrieve sensors for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Schedule -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Schedule</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Only retrieve objects that match a specific status.</maml:para>
            <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
          </maml:description>
          <command:parameterValue required="true">Status[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Status[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Tag -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalDowntime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalDowntime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalMonitorTime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalMonitorTime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: TotalUptime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TotalUptime</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UpDuration -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UpDuration</maml:name>
          <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Uptime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Uptime</maml:name>
          <command:parameterValue required="true">double[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Double[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The parent Device to retrieve sensors for, or a wildcard expression specifying the names of the devices to retrieve sensors for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Device, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Probe -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Probe</maml:name>
        <maml:description>
          <maml:para>The Probe to retrieve sensors for, or a wildcard expression specifying the names of the probes to retrieve sensors for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Group -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>The group to retrieve sensors for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Recurse -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>When piping from a Group, specifies that PrtgAPI should also recursively traverse all subgroups until all objects that should be returned by this cmdlet have been found. By default this value is true. If this value is false, PrtgAPI will not return objects from under any subgroups of the target group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Only retrieve objects that match a specific status.</maml:para>
          <maml:para>Possible values: None, Unknown, Collecting, Up, Warning, Down, NoProbe, PausedByUser, PausedByDependency, PausedBySchedule, Unusual, PausedByLicense, PausedUntil, DownAcknowledged, DownPartial, Paused</maml:para>
        </maml:description>
        <command:parameterValue required="true">Status[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Status[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Collecting</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Up</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Down</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NoProbe</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByDependency</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedBySchedule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Unusual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedByLicense</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">PausedUntil</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownAcknowledged</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">DownPartial</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Paused</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with all specified tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tag -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with one of several tags. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Retrieve an object with a specified ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects with a certain name. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Filter -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchFilter[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Maximum number of results to return. Note: when this parameter is specified wildcard filters such as Name may behave unexpectedly when wildcard characters are not used and records are being filtered by an additional property other than ParentId.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <command:parameterValue required="true">StringEnum`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.StringEnum`1[[PrtgAPI.ObjectType, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Downtime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Downtime</maml:name>
        <command:parameterValue required="true">double[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Double[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalDowntime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalDowntime</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DownDuration -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DownDuration</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Uptime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Uptime</maml:name>
        <command:parameterValue required="true">double[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Double[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalUptime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalUptime</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UpDuration -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UpDuration</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: TotalMonitorTime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TotalMonitorTime</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DataCollectedSince -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DataCollectedSince</maml:name>
        <command:parameterValue required="true">DateTime[]</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">TimeSpan[]</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LastCheck -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LastCheck</maml:name>
        <command:parameterValue required="true">DateTime[]</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LastUp -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LastUp</maml:name>
        <command:parameterValue required="true">DateTime[]</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LastDown -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LastDown</maml:name>
        <command:parameterValue required="true">DateTime[]</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Access -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Access</maml:name>
        <maml:description>
          <maml:para>Possible values: Inherited, None, Read, Write, Full, Admin</maml:para>
        </maml:description>
        <command:parameterValue required="true">Access[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Access[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Inherited</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Read</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Write</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Full</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Admin</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Dependency -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Dependency</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Message -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Message</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Possible values: None, One, Two, Three, Four, Five</maml:para>
        </maml:description>
        <command:parameterValue required="true">Priority[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Priority[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">One</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Two</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Three</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Four</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Five</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: LastValue -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LastValue</maml:name>
        <command:parameterValue required="true">double[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Double[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Favorite -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Favorite</maml:name>
        <command:parameterValue required="true">bool[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Schedule -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Schedule</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MiniGraph -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MiniGraph</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comments -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comments</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BaseType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseType</maml:name>
        <maml:description>
          <maml:para>Possible values: Sensor, Device, Group, Probe</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.BaseType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Sensor</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Device</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Group</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Probe</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentId</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Position -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Position</maml:name>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Device, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The parent Device to retrieve sensors for, or a wildcard expression specifying the names of the devices to retrieve sensors for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Probe, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The Probe to retrieve sensors for, or a wildcard expression specifying the names of the probes to retrieve sensors for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.Group, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The group to retrieve sensors for.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.SearchFilter[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Filter the response to objects that match one or more criteria.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Sensor -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor Ping</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors named "Ping" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor *cpu*</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors whose name contains "cpu" (case insensitive)</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 2001</dev:code>
        <dev:remarks>
          <maml:para>Get the sensor with ID 2001</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Status Down</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors in a "Down" status.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device *fw* | Get-Sensor Ping</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors named "Ping" (case insensitive) from all devices whose name contains "fw"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Count 1</dev:code>
        <dev:remarks>
          <maml:para>Get only 1 sensor from PRTG.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tag wmicpu*,wmimem*</dev:code>
        <dev:remarks>
          <maml:para>Get all WMI CPU Load and WMI Memory sensors.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags ny,wmicpu*</dev:code>
        <dev:remarks>
          <maml:para>Get all WMI CPU Load sensors from all New York devices.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Type *snmp*</dev:code>
        <dev:remarks>
          <maml:para>Get all SNMP sensors using a dynamic parameter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; flt type contains snmp | Get-Sensor</dev:code>
        <dev:remarks>
          <maml:para>Get all SNMP sensors using a SearchFilter.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 11  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 2001 | Get-Sensor -Recurse:$false</dev:code>
        <dev:remarks>
          <maml:para>Get all sensors from devices directly under the specified group, ignoring all child groups.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensors#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Channel</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SearchFilter</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Sensor</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-Sensor -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-Sensor</command:name>
      <command:verb>New</command:verb>
      <command:noun>Sensor</command:noun>
      <maml:description>
        <maml:para>Adds a new sensor to a PRTG Device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-Sensor cmdlet adds a new sensor to a PRTG Device. Unlike the similar Add-Sensor cmdlet, New-Sensor provides the ability to specify the properties of each sensor type as dynamic parameters directly to the cmdlet. As such, New-Sensor can only be used for creating sensor types that are properly supported by PrtgAPI.</maml:para>
      <maml:para>All parameter sets found on New-Sensor adhere to the following basic rules: 1. The first parameter is always a SwitchParameter specifying the sensor type. 2. The second parameter is always the Name (if applicable). 3. The -Device parameter specifies where the sensor will be created (unless otherwise specified). 4. Required values are positional parameters, unless they would conflict with another parameter set. 5. Unless otherwise specified, all other parameters are named parameters.</maml:para>
      <maml:para>Sensor types that require the use of complex sensor targets can either specify the target objects directly or specify one or more wildcard expressions, which New-Sensor will use to lookup these targets for you. Note that if you specify a wildcard expression when trying to create sensors on multiple objects, New-Sensor will resolve these targets on each individual target, which could be time consuming.</maml:para>
      <maml:para>When creating sensor factory objects, New-Sensor incorporates the functionality of the New-SensorFactoryDefinition cmdlet, allowing you to generate a complex sensor factory definition from several specified sensors. Unlike other sensor types, the device the sensor factory should be created on is specified via the -DestinationId parameter, allowing the sensors to use for the factory to be piped into the cmdlet.</maml:para>
      <maml:para>To view the parameters of your sensor without creating it, you can specify the -WhatIf parameter. This can be especially useful when creating sensor factories to confirm the channel definition was correctly generated as expected.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ExeXmlPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: ExeXml -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>ExeXml</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ExeFile -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ExeFile</maml:name>
          <command:parameterValue required="true">ExeFileTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.ExeFileTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DebugMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DebugMode</maml:name>
          <maml:description>
            <maml:para>Possible values: Discard, WriteToDisk, WriteToDiskWhenError</maml:para>
          </maml:description>
          <command:parameterValue required="true">DebugMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DebugMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Discard</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDisk</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WriteToDiskWhenError</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ExeParameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExeParameters</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Mutex -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Mutex</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SetExeEnvironmentVariables -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SetExeEnvironmentVariables</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseWindowsAuthentication -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseWindowsAuthentication</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: HttpPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Http -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Http</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Url -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Url</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HttpRequestMethod -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HttpRequestMethod</maml:name>
          <maml:description>
            <maml:para>Possible values: GET, POST, HEAD</maml:para>
          </maml:description>
          <command:parameterValue required="true">HttpRequestMethod</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.HttpRequestMethod</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">GET</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">POST</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">HEAD</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostContentType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostContentType</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PostData -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PostData</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseCustomPostContent -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseCustomPostContent</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: UseSNIFromUrl -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseSNIFromUrl</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: WmiServicePropertyManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: WmiService -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>WmiService</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Service -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Service</maml:name>
          <command:parameterValue required="true">WmiServiceTarget[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Targets.WmiServiceTarget[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MonitorPerformance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MonitorPerformance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: NotifyChanged -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NotifyChanged</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartStopped -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartStopped</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: WmiServiceManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: WmiService -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>WmiService</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ServiceName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>ServiceName</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MonitorPerformance -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MonitorPerformance</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: NotifyChanged -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NotifyChanged</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartStopped -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartStopped</maml:name>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactoryDefaultSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ChannelName</maml:name>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>ChannelId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactoryAggregateSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ChannelName</maml:name>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>ChannelId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Aggregator -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Aggregator</maml:name>
          <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Finalizer -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Finalizer</maml:name>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactorySummarySet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ChannelName</maml:name>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>ChannelId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SummaryExpression -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
          <maml:name>SummaryExpression</maml:name>
          <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: SummaryName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
          <maml:name>SummaryName</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SummaryFinalizer -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
          <maml:name>SummaryFinalizer</maml:name>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactoryHashTableSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: HashTable -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>HashTable</maml:name>
          <command:parameterValue required="true">Hashtable[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactoryManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ChannelName</maml:name>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FactoryPropertyManualSet -->
      <command:syntaxItem>
        <maml:name>New-Sensor</maml:name>
        <!-- Parameter: Factory -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Factory</maml:name>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelDefinition -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ChannelDefinition</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DestinationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>DestinationId</maml:name>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorFormula -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorFormula</maml:name>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FactoryErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryErrorMode</maml:name>
          <maml:description>
            <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FactoryMissingDataMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FactoryMissingDataMode</maml:name>
          <maml:description>
            <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
          </maml:description>
          <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: InheritInterval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritInterval</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: InheritTriggers -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>InheritTriggers</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Interval -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Interval</maml:name>
          <command:parameterValue required="true">ScanningInterval</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.ScanningInterval</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IntervalErrorMode -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IntervalErrorMode</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Priority -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
          <dev:type>
            <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolve -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>True</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Tags -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Tags</maml:name>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Resolve -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>Indicates whether or not the new object should be resolved to a PrtgObject. By default this value is Present.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>True</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ExeFile -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ExeFile</maml:name>
        <command:parameterValue required="true">ExeFileTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Targets.ExeFileTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ExeParameters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExeParameters</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SetExeEnvironmentVariables -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SetExeEnvironmentVariables</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseWindowsAuthentication -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseWindowsAuthentication</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Mutex -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Mutex</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DebugMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DebugMode</maml:name>
        <maml:description>
          <maml:para>Possible values: Discard, WriteToDisk, WriteToDiskWhenError</maml:para>
        </maml:description>
        <command:parameterValue required="true">DebugMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DebugMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Discard</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WriteToDisk</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WriteToDiskWhenError</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Priority -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>System.Nullable`1[[PrtgAPI.Priority, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritTriggers -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritTriggers</maml:name>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: InheritInterval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>InheritInterval</maml:name>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Interval -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Interval</maml:name>
        <command:parameterValue required="true">ScanningInterval</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.ScanningInterval</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IntervalErrorMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IntervalErrorMode</maml:name>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>System.Nullable`1[[PrtgAPI.IntervalErrorMode, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Tags -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Tags</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ExeXml -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>ExeXml</maml:name>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Service -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>Service</maml:name>
        <command:parameterValue required="true">WmiServiceTarget[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Targets.WmiServiceTarget[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ServiceName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>ServiceName</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StartStopped -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartStopped</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: NotifyChanged -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NotifyChanged</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MonitorPerformance -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MonitorPerformance</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WmiService -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>WmiService</maml:name>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Url -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Url</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: HttpRequestMethod -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HttpRequestMethod</maml:name>
        <maml:description>
          <maml:para>Possible values: GET, POST, HEAD</maml:para>
        </maml:description>
        <command:parameterValue required="true">HttpRequestMethod</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.HttpRequestMethod</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">GET</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">POST</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">HEAD</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PostData -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PostData</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseCustomPostContent -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseCustomPostContent</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PostContentType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PostContentType</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: UseSNIFromUrl -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseSNIFromUrl</maml:name>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Http -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Http</maml:name>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ChannelDefinition -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ChannelDefinition</maml:name>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FactoryErrorMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryErrorMode</maml:name>
        <maml:description>
          <maml:para>Possible values: ErrorOnError, WarnOnError, CustomFormula</maml:para>
        </maml:description>
        <command:parameterValue required="true">FactoryErrorMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.FactoryErrorMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ErrorOnError</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WarnOnError</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CustomFormula</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FactoryErrorFormula -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryErrorFormula</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FactoryMissingDataMode -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FactoryMissingDataMode</maml:name>
        <maml:description>
          <maml:para>Possible values: DontCalculate, CalculateWithZero</maml:para>
        </maml:description>
        <command:parameterValue required="true">FactoryMissingDataMode</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.FactoryMissingDataMode</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">DontCalculate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">CalculateWithZero</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ChannelName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ChannelName</maml:name>
        <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ChannelId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>ChannelId</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Expression -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Expression</maml:name>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StartId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartId</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Aggregator -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Aggregator</maml:name>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Finalizer -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Finalizer</maml:name>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SummaryName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
        <maml:name>SummaryName</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
        <maml:name>sn</maml:name>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>This is an alias of the SummaryName parameter.</maml:para>
        </maml:description>
      </command:parameter>
      <!-- Parameter: SummaryExpression -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>SummaryExpression</maml:name>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>se</maml:name>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>sa</maml:name>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>SummaryAggregator</maml:name>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
      </command:parameter>
      <!-- Parameter: SummaryFinalizer -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
        <maml:name>SummaryFinalizer</maml:name>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
        <maml:name>sf</maml:name>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>This is an alias of the SummaryFinalizer parameter.</maml:para>
        </maml:description>
      </command:parameter>
      <!-- Parameter: HashTable -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>HashTable</maml:name>
        <command:parameterValue required="true">Hashtable[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Factory -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Factory</maml:name>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: DestinationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>DestinationId</maml:name>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | New-Sensor -ExeXml test test.ps1 -Mutex mutex1</dev:code>
        <dev:remarks>
          <maml:para>Create a new EXE/Script Advanced sensor named "test" that executes the script "test.ps1" with property "Mutex" set to "mutex1" on the device with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | New-Sensor -Http</dev:code>
        <dev:remarks>
          <maml:para>Create a new HTTP sensor on the device with ID 1001. The Name and Url of the sensor will use their default values ("HTTP" and "https://" respectively).</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device exch-1 | New-Sensor -WmiService *exchange*</dev:code>
        <dev:remarks>
          <maml:para>Create WMI Service sensors for all Exchange services on the device named exch-1.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $targets = Get-Device exch-1 | Get-SensorTarget WmiService *exchange*
C:\&gt; Get-Device *exch* | New-Sensor -WmiService $targets</dev:code>
        <dev:remarks>
          <maml:para>Create the same WMI Service sensors for all Exchange servers.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpu* | New-Sensor -Factory "CPU Overview" { $_.Device } -sn "Average CPU Usage" -se Average -DestinationId 1001</dev:code>
        <dev:remarks>
          <maml:para>Create a sensor factory for showing the CPU Usage of all sensors on the device with ID 1001, including a summary channel showing the average CPU Usage of all devices.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#simple</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-SensorTarget</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorFactoryDefinition</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-SensorFactoryDefinition -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-SensorFactoryDefinition</command:name>
      <command:verb>New</command:verb>
      <command:noun>SensorFactoryDefinition</command:noun>
      <maml:description>
        <maml:para>Creates a channel definition for use in a PRTG Sensor Factory.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-SensorFactoryDefinition cmdlet automatically defines a series of channel defitions for use in a Sensor Factory sensor.</maml:para>
      <maml:para>New-SensorFactoryDefinition can be used to create both individual channel definitions for a collection of sensors, as well as aggregation channels, using a complex formula that operates on all of the sensors in a set. As a shorthand, you can access the New-SensorFactoryDefinition cmdlet via the alias 'fdef'.</maml:para>
      <maml:para>When specifying an Expression, the default expression and current sensor can be accessed via the $expr and $_ automatic variables. Unless you wish to modify the sensor ID or channel ID to be used for a specific sensor, it is generally recommended to avoid recalculating the base channel definition and use the automatic $expr variable, which is defined as "channel(sensorId, channelId)" where sensorId is the ID of the current sensor, and channelId is the value passed to -ChannelId. If a -ChannelId is not specified, channel ID 0 will automatically be used.</maml:para>
      <maml:para>Aggregation channels, representing values derived from multiple sensor channels, can be created using the -Aggregator and -SummaryExpression parameters. When -Aggregator is specified, New-SensorFactoryDefinition creates a single channel based on all of the channels piped in to the -Sensor parameter. By contrast, the -SummaryExpression parameter creates an aggregated summary channel _in addition to_ channels for each individual sensor. Both -Aggregator and -SummaryExpression allow specifying well known summarization formulae (including Sum, Min, Max, Average, etc) as well as a custom ScriptBlock where a custom expression is required.</maml:para>
      <maml:para>When specifying an -Aggregator or custom -SummaryExpression, the running accumulator, default expression and current sensor can be accessed via the $acc, $expr and $_ automatic variables respectively. Based on whether not the -Expression parameter is specified, $expr will either contain the custom or the default expression.</maml:para>
      <maml:para>In the event your aggregation formula requires a "post-processing" step (such as dividing by the total number of items when calculating an average), this can be performed via the -Finalizer and -SummaryFinalizer parameters (when creating a regular -Aggregator or -SummaryExpression respectively.</maml:para>
      <maml:para>While it is possible to override the expression evaluated in $expr in the -Aggregator or -SummaryExpression by recalculating the channel definition (via the $_ automatic variable), if the channel ID specified in the new definition is different from the channel ID specified in the -ChannelId parameter, the first channel definition in the resulting output will have a different channel ID than all the rest. This is due to the fact when the Aggregator runs, it initially sets the accumulator ($acc) to the expression of the first sensor. As such, if in the -Aggregator you change the channel ID, you will also need to replace the channel ID of the initial value in the accumulator. Due to the complexity involved in managing this, it is recommended to avoid modifying the channel ID in the aggregator, and either set the channel ID in an -Expression or in the -ChannelId.</maml:para>
      <maml:para>All parameters that accept ScriptBlock values including -Expression and -Aggregator and -SummaryExpression support the use of Sensor Factory formula functions (channel(), min(), max(), avg() and percent()), as well as all boolean and math operators. For more information, see the Sensor Factory documentation in the PRTG Manual.</maml:para>
      <maml:para>Horizontal lines can be generated by specifying the position the line should appear at to the -Value parameter. When specifying a horizontal line the channel unit the line should apply to should be specified in square brackets at the end of the channel name. It does not matter what the ID of any horizontal lines are, as long as they do not conflict with any other channel definitions.</maml:para>
      <maml:para>When creating a complex sensor factory definition that may require multiple invocations of New-SensorFactoryDefinition to achieve, you can alternatively specify a collection of Hashtable values to the -HashTable parameter, with each table containing the cmdlet parameters you would specify if you were to invoke New-SensorFactoryDefinition normally. This allows you to fully describe the nature of your entire factory definition in one go, without having to worry about offsetting the -StartId for each successive invocation of New-SensorFactoryDefinition. If a -StartId is specified in a Hashtable, the running channel record ID counter will effectively be overridden, with all successive channel definitions continuing from this newly specified ID.</maml:para>
      <maml:para>To automatically copy the output of New-SensorFactoryDefinition to the clipboard on Windows, you can pipe the cmdlet to clip.exe.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-SensorFactoryDefinition</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ChannelId</maml:name>
          <maml:description>
            <maml:para>The channel ID to use. If a custom expression is provided, this value can be optionally overridden. If this value is not specified, Channel 0 will automatically be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to create a channel definition for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <maml:description>
            <maml:para>A custom expression to use for defining a channel definition.</maml:para>
            <maml:para>Provides the following automatic variables</maml:para>
            <maml:para>'$expr' (for the default expression)</maml:para>
            <maml:para>'$_' (for the current sensor)</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <maml:description>
            <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AggregateSet -->
      <command:syntaxItem>
        <maml:name>New-SensorFactoryDefinition</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ChannelId</maml:name>
          <maml:description>
            <maml:para>The channel ID to use. If a custom expression is provided, this value can be optionally overridden. If this value is not specified, Channel 0 will automatically be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Aggregator -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Aggregator</maml:name>
          <maml:description>
            <maml:para>An aggregator to use for creating a single aggregation channel.</maml:para>
            <maml:para>Provides the fllowing automatic variables:</maml:para>
            <maml:para>'$acc' (the running accumulator)</maml:para>
            <maml:para>'$expr' (for the default expression)</maml:para>
            <maml:para>'$_' (the current sensor</maml:para>
          </maml:description>
          <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to create a channel definition for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <maml:description>
            <maml:para>A custom expression to use for defining a channel definition.</maml:para>
            <maml:para>Provides the following automatic variables</maml:para>
            <maml:para>'$expr' (for the default expression)</maml:para>
            <maml:para>'$_' (for the current sensor)</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Finalizer -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Finalizer</maml:name>
          <maml:description>
            <maml:para>A post-processing action to perform on an aggregated expresion before emititing to the pipeline. If -Aggregator is not specified this parameter does nothing. If this parameter is specified but -Aggregator is not a ScriptBlock, an exception will be thrown.</maml:para>
            <maml:para>Provides the following automatic variables:</maml:para>
            <maml:para>'$acc' (the accumulated result)</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <maml:description>
            <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: SummarySet -->
      <command:syntaxItem>
        <maml:name>New-SensorFactoryDefinition</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ChannelId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ChannelId</maml:name>
          <maml:description>
            <maml:para>The channel ID to use. If a custom expression is provided, this value can be optionally overridden. If this value is not specified, Channel 0 will automatically be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to create a channel definition for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: SummaryExpression -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
          <maml:name>SummaryExpression</maml:name>
          <maml:description>
            <maml:para>Expression to use for the summary channel. May be a well known enum value or a custom ScriptBlock expression. Functions identically to -Aggregator.</maml:para>
          </maml:description>
          <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: SummaryName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
          <maml:name>SummaryName</maml:name>
          <maml:description>
            <maml:para>Name to use for the summary channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Expression -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Expression</maml:name>
          <maml:description>
            <maml:para>A custom expression to use for defining a channel definition.</maml:para>
            <maml:para>Provides the following automatic variables</maml:para>
            <maml:para>'$expr' (for the default expression)</maml:para>
            <maml:para>'$_' (for the current sensor)</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <maml:description>
            <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SummaryFinalizer -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
          <maml:name>SummaryFinalizer</maml:name>
          <maml:description>
            <maml:para>A post-processing action to perform against -SummaryExpression when a custom ScriptBlock is specified. If -SummaryExpression is not a custom expression, an exception will be thrown. Functions identically to -Finalizer.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: HashTableSet -->
      <command:syntaxItem>
        <maml:name>New-SensorFactoryDefinition</maml:name>
        <!-- Parameter: HashTable -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>HashTable</maml:name>
          <maml:description>
            <maml:para>A collection of one or more hashtable objects specifying the parameters to use for performing one or more invocations of New-SensorFactoryDefinition, while retaining the latest channel ID across each invocation.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor to create a channel definition for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <maml:description>
            <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-SensorFactoryDefinition</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>A static value to use for the channel value in place of an -Expression.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartId</maml:name>
          <maml:description>
            <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The sensor to create a channel definition for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0" aliases="ChannelName">
        <maml:name>ChannelName</maml:name>
        <maml:description>
          <maml:para>An string or an expression that resolves the name to use for a channel definition.</maml:para>
          <maml:para>This is an alias of the Name parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrScriptBlock</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a name that may be dynamically generated or manually specified.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ChannelId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ChannelId</maml:name>
        <maml:description>
          <maml:para>The channel ID to use. If a custom expression is provided, this value can be optionally overridden. If this value is not specified, Channel 0 will automatically be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Expression -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Expression</maml:name>
        <maml:description>
          <maml:para>A custom expression to use for defining a channel definition.</maml:para>
          <maml:para>Provides the following automatic variables</maml:para>
          <maml:para>'$expr' (for the default expression)</maml:para>
          <maml:para>'$_' (for the current sensor)</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StartId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartId</maml:name>
        <maml:description>
          <maml:para>The starting channel ID to use for each channel definition. The default value is 1.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Aggregator -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Aggregator</maml:name>
        <maml:description>
          <maml:para>An aggregator to use for creating a single aggregation channel.</maml:para>
          <maml:para>Provides the fllowing automatic variables:</maml:para>
          <maml:para>'$acc' (the running accumulator)</maml:para>
          <maml:para>'$expr' (for the default expression)</maml:para>
          <maml:para>'$_' (the current sensor</maml:para>
        </maml:description>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Finalizer -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Finalizer</maml:name>
        <maml:description>
          <maml:para>A post-processing action to perform on an aggregated expresion before emititing to the pipeline. If -Aggregator is not specified this parameter does nothing. If this parameter is specified but -Aggregator is not a ScriptBlock, an exception will be thrown.</maml:para>
          <maml:para>Provides the following automatic variables:</maml:para>
          <maml:para>'$acc' (the accumulated result)</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>A static value to use for the channel value in place of an -Expression.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SummaryName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
        <maml:name>SummaryName</maml:name>
        <maml:description>
          <maml:para>Name to use for the summary channel.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="sn">
        <maml:name>sn</maml:name>
        <maml:description>
          <maml:para>Name to use for the summary channel.</maml:para>
          <maml:para>This is an alias of the SummaryName parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: SummaryExpression -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>SummaryExpression</maml:name>
        <maml:description>
          <maml:para>Expression to use for the summary channel. May be a well known enum value or a custom ScriptBlock expression. Functions identically to -Aggregator.</maml:para>
        </maml:description>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>se</maml:name>
        <maml:description>
          <maml:para>Expression to use for the summary channel. May be a well known enum value or a custom ScriptBlock expression. Functions identically to -Aggregator.</maml:para>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>sa</maml:name>
        <maml:description>
          <maml:para>Expression to use for the summary channel. May be a well known enum value or a custom ScriptBlock expression. Functions identically to -Aggregator.</maml:para>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="se,sa,SummaryAggregator">
        <maml:name>SummaryAggregator</maml:name>
        <maml:description>
          <maml:para>Expression to use for the summary channel. May be a well known enum value or a custom ScriptBlock expression. Functions identically to -Aggregator.</maml:para>
          <maml:para>This is an alias of the SummaryExpression parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">EnumOrScriptBlock`1</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.EnumOrScriptBlock`1[[PrtgAPI.PowerShell.FactorySummaryMode, PrtgAPI.PowerShell, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps a value that may be a known enum value or a custom expression.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: SummaryFinalizer -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
        <maml:name>SummaryFinalizer</maml:name>
        <maml:description>
          <maml:para>A post-processing action to perform against -SummaryExpression when a custom ScriptBlock is specified. If -SummaryExpression is not a custom expression, an exception will be thrown. Functions identically to -Finalizer.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="sf">
        <maml:name>sf</maml:name>
        <maml:description>
          <maml:para>A post-processing action to perform against -SummaryExpression when a custom ScriptBlock is specified. If -SummaryExpression is not a custom expression, an exception will be thrown. Functions identically to -Finalizer.</maml:para>
          <maml:para>This is an alias of the SummaryFinalizer parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: HashTable -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>HashTable</maml:name>
        <maml:description>
          <maml:para>A collection of one or more hashtable objects specifying the parameters to use for performing one or more invocations of New-SensorFactoryDefinition, while retaining the latest channel ID across each invocation.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor to create a channel definition for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpuloadsensor | fdef { $_.Device }</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for the "Total" channel (ID: 0) of each WMI CPU Load sensor in the system</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpuloadsensor | fdef { $_.Device } 1</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for the "Processor 1" channel (ID: 1) of each WMI CPU Load sensor in the system</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmimemorysensor | fdef { $_.Device } -Expr { "100 - $expr" } 0</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for the "Percent Available Memory" channel (ID: 0) of each WMI Memory Free sensor, modifying each channel to show the percent of memory "used" instead of free</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpu* | fdef { $_.Device } -sn "Max CPU Load" -se Max</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition showing the highest CPU Load of all devices as well as channel definitions for each individual device in a single command</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; $sensors = Get-Sensor -Tags wmicpu*

C:\&gt; $sensors | fdef { $_.Device } -sn "Average CPU Load" -se { "$acc + $expr" } -sf { "$acc / $($sensors.Count)" }</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition showing the average CPU Load of all devices as well as channel definitions for each individual device using a custom summary expression and finalizer formula</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; $sensors = Get-Sensor -Tags wmicpuloadsensor

C:\&gt; $sensors | fdef "Max CPU Load" -Aggregator { "max($expr,$acc)" }
C:\&gt; $sensors | fdef { $_.Device } -StartId 2</dev:code>
        <dev:remarks>
          <maml:para>Create two separate channel definitions showing the highest CPU Load of all devices as well as channel definitions for each individual device</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpuloadsensor | fdef { "$($_.Device) [bananas]" } 0</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for the "Total" channel (ID: 0) displaying all channels with the custom unit "bananas"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; fdef "Line at 40.2 [msec]" -Value 40.2 -StartId 3</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for a horizontal line against channels that use the "msec" unit using a starting channel record ID of 3.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; $sensors | Get-Sensor -Tags wmiterm*

C:\&gt; $sensors | fdef @{name={$_.Device + " Total Sessions"}; sn="Total Sessions"; se="Sum"},@{name={$_.Device + " Active Sessions"}; sn="Active Sessions"; se="Sum"; channelId=1}</dev:code>
        <dev:remarks>
          <maml:para>Create a channel definition for WMI Terminal Services sensors, showing the total number of sessions overall/on each server and the active number of sessions overall/on each server.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensor-Factories#create-sensor-factory-definitions</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Channel</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://www.paessler.com/manuals/prtg/sensor_factory_sensor</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SensorFactorySource -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SensorFactorySource</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SensorFactorySource</command:noun>
      <maml:description>
        <maml:para>Retrieves source sensors and channels from a PRTG Sensor Factory.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-SensorFactorySource cmdlet retrieves the source sensors and channels of PRTG Sensor Factory objects. By default Get-SensorFactorySource retrieves the sensors of the channel definition. If the -Channels parameter is specified, the cmdlet will retrieve the source channels instead. If a sensor is passed to Get-SensorFactorySource that isn't a Sensor Factory, an ParameterBindingException will be thrown.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-SensorFactorySource</maml:name>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>The sensor factory sensor to retrieve source sensors or channels of.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Channels -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Channels</maml:name>
          <maml:description>
            <maml:para>Whether to retrieve the source Channel objects of a sensor factory, instead of the source sensors.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>The sensor factory sensor to retrieve source sensors or channels of.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Channels -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Channels</maml:name>
        <maml:description>
          <maml:para>Whether to retrieve the source Channel objects of a sensor factory, instead of the source sensors.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The sensor factory sensor to retrieve source sensors or channels of.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; flt type eq "sensor factory" | Get-Sensor -Count 1 | Get-SensorFactorySource</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all source sensors of a single sensor factory sensor</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; flt type eq "sensor factory" | Get-Sensor -Count 1 | Get-SensorFactorySource -Channels</dev:code>
        <dev:remarks>
          <maml:para>Retrieve all source channels of a single sensor factory sensor</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensor-Factories#get-sensor-factory-sources</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SearchFilter</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SensorHistory -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SensorHistory</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SensorHistory</command:noun>
      <maml:description>
        <maml:para>Retrieves historic data values for a PRTG Sensor.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-SensorHistory cmdlet retrieves historic data values for all channels of a PRTG Sensor within a specified time period. By default, values are returned according to the scanning interval defined on the sensor (e.g. values every 60 seconds). Using the -Average parameter, values can be averaged together to provide a higher level view of a larger time span. Any number of seconds can be specified as the Average, however note that depending on the interval of the sensor, certain time spans may result in blank values within the sensor results.</maml:para>
      <maml:para>Historic data values can be retrieved over any time period via the -StartDate and -EndDate parameters. If these values are not specified, records will be returned from between now and 60 minutes ago. If PRTG finds it does not have enough monitoring data to return for the specified time span, an exception will be thrown. To work around this, you can request date for a larger time frame and then potentially filter the data with the Where-Object and Select-Object cmdlets.</maml:para>
      <maml:para>When an -EndDate is specified, Get-SensorHistory will split the sensor history query into a series of smaller requests, emitting results to the pipeline as they arrive. If the -Count parameter is speciifed, and -EndDate is not specified, Get-SensorHistory will automatically adjust the -EndDate such that the specified number of records can be retrieved, based on the sensor's Interval or the specified -Average. If an -EndDate has been specified, the number of records returned may be limited by the number of records available in the specified time period.</maml:para>
      <maml:para>Due to limitations of the PRTG API, Get-SensorHistory cannot display both downtime and channel value lookups at the same time. Value lookups can only be displayed when an -Average of 0 is specified, while downtime can only be displayed when a specific average has been specified. By default, if no average is specified Get-SensorHistory will use an average of 0 to enable the display of value lookups. If the -Downtime parameter is specified and no -Average is specified, Get-SensorHistory will use the Interval property of the sensor to specify the true average.</maml:para>
      <maml:para>PrtgAPI will automatically display all numeric channel values as numbers, with the unit of the channel displayed in brackets next to the channel header (e.g. "Total(%)"). These units are for display purposes only, and so can be ignored when attempting to extract certain columns from the sensor history result. If the -Raw parameter is specified Get-SensorHistory will ignore the units of each channel and instead display all values in their raw format (e.g. Bytes for a unit stored in MegaBytes).</maml:para>
      <maml:para>Note that while Get-SensorHistory considers the "start time" as being the point in time closest to now and the "end time" as the point in time furthest away from now, PRTG's underlying API actually defines these in the opposite way. Since records are ordered from newest to oldest however, PrtgAPI flips these definitions as to prevent any confusion. Keep this in mind in the event the -Verbose parameter is specified, as the start and end times will appear to be switched.</maml:para>
      <maml:para>Get-SensorHistory can also generate a report on the Status changes of a sensor over a given time period by specifying the -Report parameter. Sensor History Reports will present the same information that is normally found at the bottom of the Historic Data reports that can be viewed in the PRTG UI. By using the -Report parameter, it is easy to generate a succinct view of downtime incidents across a given time period, which you can then further manipulate in order to provide a coherent report.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorHistory</maml:name>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>Sensor to retrieve historic data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Average -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Average</maml:name>
          <maml:description>
            <maml:para>Time span (in seconds) to average results over. For example, a value of 300 will show the average value every 5 minutes. If a value of 0 is used, PRTG will include value lookup labels in historical results. If a value other than 0 is used, PRTG will include the Downtime channel in results.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Limits results to the specified number of items within the specified time period.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Downtime -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Downtime</maml:name>
          <maml:description>
            <maml:para>Specifies that the Downtime channel should be included in query results in lieu of value lookup labels. If this parameter is specified and Average is not specified, the Interval of the sensor will be used to determine the average.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve history to. If no value is specified, defaults to 24 hours ago.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Specifies that the raw numeric values for each channel should be displayed using the base unit of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve history from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ReportSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorHistory</maml:name>
        <!-- Parameter: Report -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Report</maml:name>
          <maml:description>
            <maml:para>Specifies that a sensor history report showing changes between different sensor statuses should be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Sensor -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Sensor</maml:name>
          <maml:description>
            <maml:para>Sensor to retrieve historic data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Limits results to the specified number of items within the specified time period.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve history to. If no value is specified, defaults to 24 hours ago.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Specifies that the raw numeric values for each channel should be displayed using the base unit of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve history from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorHistory</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the sensor to retrieve historic data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Average -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Average</maml:name>
          <maml:description>
            <maml:para>Time span (in seconds) to average results over. For example, a value of 300 will show the average value every 5 minutes. If a value of 0 is used, PRTG will include value lookup labels in historical results. If a value other than 0 is used, PRTG will include the Downtime channel in results.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Limits results to the specified number of items within the specified time period.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve history to. If no value is specified, defaults to 24 hours ago.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Specifies that the raw numeric values for each channel should be displayed using the base unit of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve history from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ReportManualSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorHistory</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the sensor to retrieve historic data for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Report -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Report</maml:name>
          <maml:description>
            <maml:para>Specifies that a sensor history report showing changes between different sensor statuses should be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Limits results to the specified number of items within the specified time period.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EndDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>End time to retrieve history to. If no value is specified, defaults to 24 hours ago.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Raw -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>Specifies that the raw numeric values for each channel should be displayed using the base unit of the channel.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: StartDate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>Start time to retrieve history from. If no value is specified, defaults to the current date and time.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Sensor -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Sensor</maml:name>
        <maml:description>
          <maml:para>Sensor to retrieve historic data for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the sensor to retrieve historic data for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: StartDate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartDate</maml:name>
        <maml:description>
          <maml:para>Start time to retrieve history from. If no value is specified, defaults to the current date and time.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: EndDate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EndDate</maml:name>
        <maml:description>
          <maml:para>End time to retrieve history to. If no value is specified, defaults to 24 hours ago.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Average -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Average</maml:name>
        <maml:description>
          <maml:para>Time span (in seconds) to average results over. For example, a value of 300 will show the average value every 5 minutes. If a value of 0 is used, PRTG will include value lookup labels in historical results. If a value other than 0 is used, PRTG will include the Downtime channel in results.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Downtime -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Downtime</maml:name>
        <maml:description>
          <maml:para>Specifies that the Downtime channel should be included in query results in lieu of value lookup labels. If this parameter is specified and Average is not specified, the Interval of the sensor will be used to determine the average.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Raw -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Raw</maml:name>
        <maml:description>
          <maml:para>Specifies that the raw numeric values for each channel should be displayed using the base unit of the channel.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Limits results to the specified number of items within the specified time period.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Report -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Report</maml:name>
        <maml:description>
          <maml:para>Specifies that a sensor history report showing changes between different sensor statuses should be returned.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Sensor to retrieve historic data for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-SensorHistory</dev:code>
        <dev:remarks>
          <maml:para>Get historical values for all channels on the sensor with ID 1001 over the past 24 hours, using the sensor's default interval.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-SensorHistory -Average 300</dev:code>
        <dev:remarks>
          <maml:para>Get historical values for all channels on the sensor with ID 1001 over the past 24 hours, averaging values in 5 minute intervals.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-SensorHistory -StartDate (Get-Date).AddDays(-1) -EndDate (Get-Date).AddDays(-3)</dev:code>
        <dev:remarks>
          <maml:para>Get historical values for all channels on the sensor with ID 1001 starting three days ago and ending yesterday.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpu* -count 1 | Get-SensorHistory | select Total</dev:code>
        <dev:remarks>
          <maml:para>Get historical values for all channels on a single WMI CPU Load sensor, selecting the "Total" channel (visually displayed as "Total(%)"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Tags wmicpu* -count 1 | where Total -gt 90</dev:code>
        <dev:remarks>
          <maml:para>Get historical values for all channels on a single WMI CPU Load sensor where the Total channel's value was greater than 90.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | Get-SensorHistory -Report -EndDate (Get-Date).AddDays(-7) | where Status -eq Down</dev:code>
        <dev:remarks>
          <maml:para>Generates a sensor history report showing all incidents of downtime in the last 7 days.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Historical-Information#sensor-history-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Select-Object</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Where-Object</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-SensorNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-SensorNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>SensorNode</command:noun>
      <maml:description>
        <maml:para>Creates a new SensorNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-SensorNode cmdlet creates a new SensorNode object for modelling a PRTG Tree. Each SensorNode object encapsulates a single Sensor object along with any optional children (such as TriggerNode and PropertyNode items).</maml:para>
      <maml:para>New-SensorNode supports many different ways of being invoked, however at its core there are two pieces of information that can be provided to the cmdlet: information that identifies the Sensor to encapsulate, and the nodes that should be used as the children of the node.</maml:para>
      <maml:para>If an existing Sensor object retrieved from the Get-Sensor cmdlet is not specified or piped to the -Value parameter, one or more of -Name or -Id must be specified to identify the object to encapsulate. If multiple values are returned as a result of these parameters, a unique SensorNode object will be created for each item.</maml:para>
      <maml:para>Child nodes to this node can either be specified via the pipeline, or declaratively via a ScriptBlock. When a ScriptBlock defining children is specified, SensorNode will incorporate a copy of the children in each SensorNode that is produced. While each SensorNode will end up with a unique copy of all its descendant nodes, the underlying Value of each nodw will be the same.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-SensorNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromSet -->
      <command:syntaxItem>
        <maml:name>New-SensorNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Sensor</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Sensor</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-SensorNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ScriptBlock -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block that returns the children to use for this node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: AddFromManualSet -->
      <command:syntaxItem>
        <maml:name>New-SensorNode</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Children -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Children</maml:name>
          <maml:description>
            <maml:para>The children to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Sensor</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the object to retrieve. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="ObjectId">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve.</maml:para>
          <maml:para>This is an alias of the Id parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ScriptBlock -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A script block that returns the children to use for this node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Children -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Children</maml:name>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PrtgNode[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Sensor</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Tree.PrtgNode[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The children to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Sensor -Id 1001 | New-SensorNode</dev:code>
        <dev:remarks>
          <maml:para>Create a sensor node from the sensor with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; New-SensorNode -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Create a sensor node from the sensor with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; New-SensorNode cpu*</dev:code>
        <dev:remarks>
          <maml:para>Create a sensor node for each sensor whose name starts with "cpu".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; SensorNode -Id 1001 {
&gt;&gt;      TriggerNode -ObjectId 1001
&gt;&gt; }</dev:code>
        <dev:remarks>
          <maml:para>Create a new sensor node from the object with ID 1001 with child nodes for each notification trigger under that object.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>New-TriggerNode -ObjectId 1001 | New-SensorNode -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Create a new sensor node from the object with ID 1001 with child nodes for each notification trigger under that object.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ProbeNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TriggerNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PropertyNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-SensorParameters -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-SensorParameters</command:name>
      <command:verb>New</command:verb>
      <command:noun>SensorParameters</command:noun>
      <maml:description>
        <maml:para>Creates a new set of sensor parameters for creating a brand new sensor under a device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-SensorParameters cmdlet creates a set of parameters for adding a brand new sensor to PRTG. All sensor types supported by PRTG can be added with New-SensorParameters, however certain types are "natively" supported. For types that are not are natively supported, New-SensorParameters is capable of either dynamically generating the required set of parameters, or creating a completely custom set of parameters from a collection of values manually crafted by hand.</maml:para>
      <maml:para>Natively supported sensor types allow interfacing with strongly typed properties of a well known object deriving from NewSensorParameters. When a supported type is created, the name to give the sensor can be optionally specified. If a name is not specified, New-SensorParameters will automatically assign the sensor the default name PRTG would assign a sensor of the specified type (e.g. EXE/Script Advanced sensors by default are named "XML Custom EXE/Script Sensor").</maml:para>
      <maml:para>In addition to the sensor name, certain sensor types contain additional mandatory fields that must be populated before attempting to add the sensor (such as the ExeFile of an EXE/Script Advanced sensor). New-SensorParameters optionally allows you to specify the value of the primary mandatory field of the specified type using the -Value parameter. Fields that require values contain a value of $null by default, however not all fields that are $null are necessarily mandatory. If you attempt to add a natively supported type with missing mandatory fields, PrtgAPI will catch this and alert you that the value that was missing.</maml:para>
      <maml:para>Beyond type safety, PrtgAPI does not perform any validation that the values you specify to fields are "correct" (e.g. for an EXE/Script Advanced sensor, that the specified file exists). In the event invalid values are specified, PRTG will usually handle the error gracefully, however you are responsible for confirming that any values that are used to create a new sensor as are as correct as possible.</maml:para>
      <maml:para>For sensor types that are not natively supported, PrtgAPI provides the ability to dynamically generate the set of parameters required to add the specified sensor type. Dynamically generated sensor parameters operate as a hybrid of a both a Dictionary and a PSObject, allowing you to interface with these types as if they are a native object. For sensor types that require additional information be provided before retrieving their sensor parameters, a -QueryTarget or a set of -QueryParameters must be specified. New-SensorParameters will automatically advise you what should be provided for these parameters if it determines these values are required by the specified sensor type.</maml:para>
      <maml:para>For sensor types that require Sensor Targets, a dictionary of all identified sensor targets can be found under the dynamic sensor parameter's Targets property. Parameters that appear to contain sensor targets will automatically be wrapped as a GenericSensorTarget, and by default will contain the first target from the list of available candidates.</maml:para>
      <maml:para>By default, dynamically sensor parameters are "locked", as to prevent additional parameters from being added to the object in the event a typo is made. If you do wish to add additional parameters however, this can be performed by calling the Unlock method on the specified DynamicSensorParameters and then setting the value via the parameter's indexer or via the dynamic property name. Note that DynamicSensorParameters dynamic properties will always show parameters as not containing a trailing underscore as to provide a "cleaner" interface. The raw CustomParameter objects of the parameters can be viewed however by specifying Custom to the object's indexer.</maml:para>
      <maml:para>If you wish to create your parameters yourself, this can either be done by creating an -Empty set of parameters for you to manually populate, or by defining a hashtable listing all the parameters that are required to create the specified sensor along with their raw associated values. The parameters for creating a specific type of sensor can be discovered via a web debugger such as Fiddler or by inspecting the underlying parameters generated by a set of DynamicSensorParameters.</maml:para>
      <maml:para>When accessing RawSensorParameters and DynamicSensorParameters via their indexers, by default PowerShell will suppress any exceptions thrown when trying to access non-existent properties, instead simply returning $null. This is due to the default Strict Mode the PowerShell engine runs under. To enable exceptions on accessing invalid paramters, the strict mode must be set to version 3 or higher. For more information, see Get-Help Set-StrictMode.</maml:para>
      <maml:para>Great care should be taken when adding sensors using raw parameters. As there is no type safety, the possibility of making errors is high. As most raw parameter names end in an underscore, it is critical to ensure these parameters have been named properly. In the event a sensor is added improperly, it can easily be corrected or deleted in the PRTG UI. When specifying a hashtable parameter set to New-SensorParameters, PrtgAPI will validate that at a minimum the 'name_' and 'sensortype' parameters are specified. If either of these two are missing, New-SensorParameters will generate an exception.</maml:para>
      <maml:para>When sensor parameters are created via the Add-Sensor cmdlet, if the -Resolve parameter is specified PrtgAPI will attempt to resolve the resultant sensors based on the sensor type specified in the sensor parameters. If the resulting sensor type is capable of changing based on the specified parameters, you can instruct PrtgAPI to broaden its sensor resolution search by specifying the -DynamicType parameter when creating your parameters object. DynamicType property can also be modified on the resulting NewSensorParameters object that is returned from the New-SensorParameters cmdlet.</maml:para>
      <maml:para>All sensor parameter types support specifying common sensor parameters (Inherit Triggers, Interval, Priority, etc) via well typed properties. If these properties are not set, PRTG will automatically use the default values for these fields based on the type of sensor being created.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-SensorParameters</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of sensor to create.</maml:para>
            <maml:para>Possible values: ExeXml, WmiService, SqlServerDB, Http, Factory</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ExeXml</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ExeXml</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiService</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerDB</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Http</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Factory</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: First -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>First</maml:name>
          <maml:description>
            <maml:para>The name to give the new sensor. If no value is specified, the default name of the specified sensor type will be used. If the specified sensor type does not support specifying a name, this field is used for any mandatory values required by the sensor type.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Second -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>A mandatory value required by the specified sensor type.</maml:para>
          </maml:description>
          <command:parameterValue required="true">object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawSet -->
      <command:syntaxItem>
        <maml:name>New-SensorParameters</maml:name>
        <!-- Parameter: RawParameters -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>RawParameters</maml:name>
          <maml:description>
            <maml:para>A collection of raw parameters for adding an unsupported sensor type.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DynamicType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DynamicType</maml:name>
          <maml:description>
            <maml:para>Specifies whether the resulting sensor type is dynamically determined by the parameters included in the request. If this property is true, PrtgAPI will relax its sensor resolution mechanism to ensure the resultant object is retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: DynamicSet -->
      <command:syntaxItem>
        <maml:name>New-SensorParameters</maml:name>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to create a set of DynamicSensorParameters from.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawType -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
          <maml:name>RawType</maml:name>
          <maml:description>
            <maml:para>The raw name of the sensor type to create.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: DynamicType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DynamicType</maml:name>
          <maml:description>
            <maml:para>Specifies whether the resulting sensor type is dynamically determined by the parameters included in the request. If this property is true, PrtgAPI will relax its sensor resolution mechanism to ensure the resultant object is retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: QueryParameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
          <maml:name>QueryParameters</maml:name>
          <maml:description>
            <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: QueryTarget -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
          <maml:name>QueryTarget</maml:name>
          <maml:description>
            <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>Wildcard used to specify the sensor targets to assign to a set of DynamicSensorParameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for dynamic sensor parameters to resolve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>60</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: EmptySet -->
      <command:syntaxItem>
        <maml:name>New-SensorParameters</maml:name>
        <!-- Parameter: Empty -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Empty</maml:name>
          <maml:description>
            <maml:para>Specifies that an empty set of RawSensorParameters should be returned to allow constructing a parameter set manually.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of sensor to create.</maml:para>
          <maml:para>Possible values: ExeXml, WmiService, SqlServerDB, Http, Factory</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ExeXml</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ExeXml</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiService</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlServerDB</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Http</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Factory</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: First -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>First</maml:name>
        <maml:description>
          <maml:para>The name to give the new sensor. If no value is specified, the default name of the specified sensor type will be used. If the specified sensor type does not support specifying a name, this field is used for any mandatory values required by the sensor type.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Second -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Second</maml:name>
        <maml:description>
          <maml:para>A mandatory value required by the specified sensor type.</maml:para>
        </maml:description>
        <command:parameterValue required="true">object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawParameters -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>RawParameters</maml:name>
        <maml:description>
          <maml:para>A collection of raw parameters for adding an unsupported sensor type.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to create a set of DynamicSensorParameters from.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawType -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
        <maml:name>RawType</maml:name>
        <maml:description>
          <maml:para>The raw name of the sensor type to create.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
        <maml:name>rt</maml:name>
        <maml:description>
          <maml:para>The raw name of the sensor type to create.</maml:para>
          <maml:para>This is an alias of the RawType parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Target -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>Wildcard used to specify the sensor targets to assign to a set of DynamicSensorParameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Duration (in seconds) to wait for dynamic sensor parameters to resolve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>60</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: QueryTarget -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
        <maml:name>QueryTarget</maml:name>
        <maml:description>
          <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
        <maml:name>qt</maml:name>
        <maml:description>
          <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
          <maml:para>This is an alias of the QueryTarget parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: QueryParameters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
        <maml:name>QueryParameters</maml:name>
        <maml:description>
          <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
        <maml:name>qp</maml:name>
        <maml:description>
          <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
          <maml:para>This is an alias of the QueryParameters parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Empty -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Empty</maml:name>
        <maml:description>
          <maml:para>Specifies that an empty set of RawSensorParameters should be returned to allow constructing a parameter set manually.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: DynamicType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DynamicType</maml:name>
        <maml:description>
          <maml:para>Specifies whether the resulting sensor type is dynamically determined by the parameters included in the request. If this property is true, PrtgAPI will relax its sensor resolution mechanism to ensure the resultant object is retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to create a set of DynamicSensorParameters from.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters ExeXml "Custom Script" "CustomScript.ps1"

C:\&gt; Get-Device dc-1 | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new EXE/Script Advanced sensor on the device dc-1 using the name "Custom Script", that executes the file "CustomScript.ps1", specifying the script name in the optional -Value parameter</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters ExeXml "Custom Script"
C:\&gt; $params.ExeFile = "CustomScript.ps1"

C:\&gt; Get-Device dc-1 | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new EXE/Script Advanced sensor on the device dc-1 using the name "Custom Script", that executes the file "CustomScript.ps1", specifying the script name after the object has been created</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters ExeXml
C:\&gt; $params.ExeFile = "CheckStatus.ps1"

C:\&gt; Get-Device -Id 1001 | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Create a new EXE/Script Advanced sensor on the device with ID 1001 using the name "XML Custom EXE/Script Sensor" that executes the file "CheckStatus.ps1"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device esxi-1 | New-SensorParameters -RawType vmwaredatastoreextern
C:\&gt; $params.datafieldlist__check = $params.Targets["datafieldlist__check"]

C:\&gt; $params | Add-Sensor</dev:code>
        <dev:remarks>
          <maml:para>Dynamically create a new set of VMware Datastore credentials for the device named esxi-1 targeting all datastores that exist on the device.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device esxi-1 | New-SensorParameters -RawType vmwaredatastoreextern
C:\&gt; $params[[PrtgAPI.Parameter]::Custom]</dev:code>
        <dev:remarks>
          <maml:para>View the raw set of CustomParameters defined on an object.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device esxi-1 | New-SensorParameters -RawType exchangepsdatabase
C:\&gt; $params.Unlock()

C:\&gt; $params.customparam_ = "some value"</dev:code>
        <dev:remarks>
          <maml:para>Create a new parameter named "customparam" on a set of Exchange Database sensor parameters.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters -Empty
C:\&gt; $params["name_"] = "My Sensor"
C:\&gt; $params["sensortype"] = "exexml"</dev:code>
        <dev:remarks>
          <maml:para>Create an empty set of sensor parameters to manually insert all raw parameters.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>C:\&gt; $raw = @{
&gt;&gt;      name_ = "my raw sensor"
&gt;&gt;      tags_ = "xmlexesensor"
&gt;&gt;      priority_ = 4
&gt;&gt;      exefile_ = "CustomScript.ps1|CustomScript.ps1||
&gt;&gt;      exeparams_ = "arg1 arg2 arg3"
&gt;&gt;      environment_ = 1
&gt;&gt;      usewindowsauthentication_ = 1
&gt;&gt;      mutexname_ = "testMutex"
&gt;&gt;      timeout_ = 70
&gt;&gt;      writeresult_ = 1
&gt;&gt;      intervalgroup = 0
&gt;&gt;      interval_ = "30|30 seconds"
&gt;&gt;      errorintervalsdown_ = 2
&gt;&gt;      sensortype = "exexml"
&gt;&gt; }

C:\&gt; $params = New-SensorParameters $raw

C:\&gt; Get-Device dc-1 | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Add a new EXE/Script Advanced sensor to the device named dc-1 using a hashtable containing its raw parameters.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>C:\&gt; $params = New-SensorParameters $raw -DynamicType</dev:code>
        <dev:remarks>
          <maml:para>Create a set of parameters for creating a sensor with a dynamic type (such as snmplibrary).</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>C:\&gt; Set-StrictMode -Version 3</dev:code>
        <dev:remarks>
          <maml:para>Set the Strict Mode to version 3 for the current PowerShell session.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 11  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device -Id 1001 | New-SensorParameters -RawType snmplibrary -qt *ups*</dev:code>
        <dev:remarks>
          <maml:para>Create a set of parameters for creating a SNMP Library sensor utilizing a wildcard expression that matches the sensor query target "APC UPS.oidlib".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 12  ----------</maml:title>
        <dev:code>C:\&gt; $target = (Get-SensorType snmplibrary -Id 1001).QueryTargets | where Value -like *ups*
C:\&gt; $params = Get-Device -Id 1001 | New-SensorParameters -RawType snmplibrary -qt $target</dev:code>
        <dev:remarks>
          <maml:para>Create a set of parameters for creating a SNMP Library sensor utilizing the sensor query target "APC UPS.oidlib".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 13  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device -Id 1001 | New-SensorParameters -RawType ipmisensor -qp @{ username = "admin"; password = "password" }</dev:code>
        <dev:remarks>
          <maml:para>Create a set of parameters for creating an IPMI Sensor specifying the query target parameters required to authenticate to IPMI.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Creation#parameters</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Help SensorParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-StrictMode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SensorTarget -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SensorTarget</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SensorTarget</command:noun>
      <maml:description>
        <maml:para>Retrieves system resources that capable of being monitored or used for monitoring by a new PRTG Sensor.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get-SensorTarget cmdlet identifies resources that are capable of being used as the target of a new PRTG Sensor. The resources identified by Get-SensorTarget are dynamic in nature. When Get-SensorTarget is executed, the PRTG will interrogate the PRTG Probe of the specified device in order to identify the resources that are compatible with the target system. For example, for creating a new WMI Service sensor, PRTG will request the probe enumerate all of the system services that are installed on the target device.</maml:para>
      <maml:para>For convenience, Get-SensorTarget allows specifying a -Name used to filter the returned results. Typically, items returned by Get-SensorTarget should be sent straight to a call to New-SensorParameters, however if you do not wish to perform any other processing on the results returned by this cmdlet you may automatically generate a set of parameters for the specified sensor type by specifying the -Parameters (alias: -Params) parameter. When creating sensor parameters with the -Params parameter, the default sensor name of the specified sensor type will be used.</maml:para>
      <maml:para>Sensor types not supported by PrtgAPI can still be interrogated by Get-SensorTarget via the -RawType parameter. Raw sensor type names can be found by inspecting the Id column of items output from the Get-SensorType cmdlet. When operating on raw types, by default Get-SensorTarget will attempt to guess the name of the data table within PRTG the sensor targets are stored in. If PRTG detects more than one data table exists, an ArgumentException will be thrown listing the names of all of the available tables. The name of the table to use can then be specified to the -Table parameter.</maml:para>
      <maml:para>Sensor targets identified for raw types are represented as a "generic" sensor target type. Generic sensor targets allow accessing both their Name and Value as named properties. Any other properties of the sensor target can be obtained by accessing the Properties array of the object. Generic sensor targets capable of being used with any NewSensorParameters type, including RawSensorParameters and DynamicSensorParameters.</maml:para>
      <maml:para>While resources returned by Get-SensorTarget are guaranteed to be compatible with the target device, there is no restriction preventing such resources from being used on other devices as well. Attempting to create a sensor on an incompatible device may succeed, however the sensor will likely enter a Down state upon refreshing, similar to what would happen if the sensor were created normally and then the sensor's target was deleted.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorTarget</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of sensor target to query for. Not all sensor types may require or support target resolution.</maml:para>
            <maml:para>Possible values: ExeXml, WmiService, SqlServerDB, Http, Factory</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorType</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ExeXml</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ExeXml</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">WmiService</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">SqlServerDB</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Http</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Factory</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An expression used to filter returned results to those with a specified name.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to retrieve sensor targets from. While results returned by Get-SensorTarget are guaranteed to be compatible with the specified device, returned objects may also be compatible with other devices in PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Parameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Params">
          <maml:name>Parameters</maml:name>
          <maml:description>
            <maml:para>When present, specifies that Get-SensorTarget should automatically wrap the returned items up in a set of sensor parameters applicable to the specified sensor type.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for sensor targets to resolve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>60</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RawSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorTarget</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>An expression used to filter returned results to those with a specified name.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to retrieve sensor targets from. While results returned by Get-SensorTarget are guaranteed to be compatible with the specified device, returned objects may also be compatible with other devices in PRTG.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawType -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
          <maml:name>RawType</maml:name>
          <maml:description>
            <maml:para>The raw type of sensor target to query for. Types that require additional information before querying (such as Oracle Tablespace) cannot be queried.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: QueryParameters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
          <maml:name>QueryParameters</maml:name>
          <maml:description>
            <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: QueryTarget -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
          <maml:name>QueryTarget</maml:name>
          <maml:description>
            <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Table -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Table</maml:name>
          <maml:description>
            <maml:para>The name of the Dropdown List or Checkbox Group the sensor targets belong to. If this value is null, PrtgAPI will attempt to guess the name of the table. If this value cannot be guessed or is not valid, an ArgumentException will be thrown listing all possible values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Duration (in seconds) to wait for sensor targets to resolve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>60</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to retrieve sensor targets from. While results returned by Get-SensorTarget are guaranteed to be compatible with the specified device, returned objects may also be compatible with other devices in PRTG.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of sensor target to query for. Not all sensor types may require or support target resolution.</maml:para>
          <maml:para>Possible values: ExeXml, WmiService, SqlServerDB, Http, Factory</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorType</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ExeXml</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ExeXml</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">WmiService</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">SqlServerDB</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Http</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Factory</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>An expression used to filter returned results to those with a specified name.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Parameters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Params">
        <maml:name>Parameters</maml:name>
        <maml:description>
          <maml:para>When present, specifies that Get-SensorTarget should automatically wrap the returned items up in a set of sensor parameters applicable to the specified sensor type.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="Params">
        <maml:name>Params</maml:name>
        <maml:description>
          <maml:para>When present, specifies that Get-SensorTarget should automatically wrap the returned items up in a set of sensor parameters applicable to the specified sensor type.</maml:para>
          <maml:para>This is an alias of the Parameters parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: RawType -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
        <maml:name>RawType</maml:name>
        <maml:description>
          <maml:para>The raw type of sensor target to query for. Types that require additional information before querying (such as Oracle Tablespace) cannot be queried.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named" aliases="rt">
        <maml:name>rt</maml:name>
        <maml:description>
          <maml:para>The raw type of sensor target to query for. Types that require additional information before querying (such as Oracle Tablespace) cannot be queried.</maml:para>
          <maml:para>This is an alias of the RawType parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: QueryTarget -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
        <maml:name>QueryTarget</maml:name>
        <maml:description>
          <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qt">
        <maml:name>qt</maml:name>
        <maml:description>
          <maml:para>A sensor query target to use when retrieving dynamic sensor parameters. Can include wildcards.</maml:para>
          <maml:para>This is an alias of the QueryTarget parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SensorQueryTarget</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorQueryTarget</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: QueryParameters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
        <maml:name>QueryParameters</maml:name>
        <maml:description>
          <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named" aliases="qp">
        <maml:name>qp</maml:name>
        <maml:description>
          <maml:para>A set of sensor query target parameters to use when retrieving dynamic sensor parameters.</maml:para>
          <maml:para>This is an alias of the QueryParameters parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Table -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Table</maml:name>
        <maml:description>
          <maml:para>The name of the Dropdown List or Checkbox Group the sensor targets belong to. If this value is null, PrtgAPI will attempt to guess the name of the table. If this value cannot be guessed or is not valid, an ArgumentException will be thrown listing all possible values.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Duration (in seconds) to wait for sensor targets to resolve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>60</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to retrieve sensor targets from. While results returned by Get-SensorTarget are guaranteed to be compatible with the specified device, returned objects may also be compatible with other devices in PRTG.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: SensorTarget`1 -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.Targets.SensorTarget`1</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; $device = Get-Device -Id 1001

C:\&gt; $services = $device | Get-SensorTarget WmiService *exchange*

C:\&gt; $params = New-SensorParameters WmiService $services

C:\&gt; $device | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Add all WMI Services whose name contains "Exchange" to the Device with ID 1001</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; $device = Get-Device -Id 1001

C:\&gt; $params = $device | Get-SensorTarget WmiService *exchange* -Params

C:\&gt; $device | Add-Sensor $params</dev:code>
        <dev:remarks>
          <maml:para>Add all WMI Services whose name contains "Exchange" to the Device with ID 1001, creating sensor parameters immediately.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; $targets = Get-Device -Id 1001 | Get-SensorTarget -RawType vmwaredatastoreextern</dev:code>
        <dev:remarks>
          <maml:para>Get all VMware Datastores from the device with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>C:\&gt; $targets = Get-Device -Id 1001 | Get-SensorTarget -RawType wmivolume

C:\&gt; $targets | foreach { $_.Properties[3] }</dev:code>
        <dev:remarks>
          <maml:para>List the disk type (Local Disk, Compact Disk etc) of all WMI Volume targets.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device -Id 1001 | Get-SensorTarget -RawType snmplibrary -qt *ups*</dev:code>
        <dev:remarks>
          <maml:para>Get all sensor targets that can be used on an SNMP Library sensor using the sensor query target "APC UPS.oidlib".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>C:\&gt; $target = (Get-SensorType snmplibrary -Id 1001).QueryTargets | where Value -like *ups*
C:\&gt; $params = Get-Device -Id 1001 | Get-SensorTarget -RawType snmplibrary -qt $target</dev:code>
        <dev:remarks>
          <maml:para>Get all sensor targets that can be used on an SNMP Library sensor using the sensor query target "APC UPS.oidlib".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>C:\&gt; $params = Get-Device -Id 1001 | New-SensorParameters -RawType ipmisensor -qp @{ username = "admin"; password = "password" }</dev:code>
        <dev:remarks>
          <maml:para>Get all sensor targets that can be used on an IPMI Sensor, specifying the query target parameters required to authenticate to IPMI.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensor-Targets#powershell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-Sensor</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-SensorType</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SensorTotals -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SensorTotals</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SensorTotals</command:noun>
      <maml:description>
        <maml:para>Retrieves the total number of each type of sensor in the system.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-SensorTotals cmdlet retrieves the total number of each type of sensor in a PRTG Server.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-SensorTotals</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: SensorTotals -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorTotals</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-SensorTotals</dev:code>
        <dev:remarks>
          <maml:para>Count the number of sensors in the system.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensors#sensor-totals-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Sensor</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SensorType -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SensorType</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SensorType</command:noun>
      <maml:description>
        <maml:para>Retrieves all sensor types supported by a PRTG Server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-SensorType cmdlet retrieves all sensor types from PRTG that are supported by a specified object, allowing you to identify the Type Id to be used with other cmdlets (such as Get-SensorTarget and New-SensorParameters). If no -Object or -Id is specified, by default Get-SensorType will retrieve sensor types supported by the Core Probe (Object ID: 1). Practically speaking, all objects appear to support all sensor types; as such, there should generally be no need to specify an object.</maml:para>
      <maml:para>Results returned by Get-SensorType can be filtered by specifying an expression to the -Name parameter. Sensor type results will be filtered to those that contain the specified expression anywhere in either the Id, Name or Description.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorType</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filters results to those that contain the specified expression in any field.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Object -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The object to retrieve sensor types from. If no object is specified, PrtgAPI will retrieve all types supported by the Core Probe (ID 1)</maml:para>
          </maml:description>
          <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-SensorType</maml:name>
        <!-- Parameter: Name -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Filters results to those that contain the specified expression in any field.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the object to retrieve sensor types from.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The object to retrieve sensor types from. If no object is specified, PrtgAPI will retrieve all types supported by the Core Probe (ID 1)</maml:para>
        </maml:description>
        <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the object to retrieve sensor types from.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Filters results to those that contain the specified expression in any field.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The object to retrieve sensor types from. If no object is specified, PrtgAPI will retrieve all types supported by the Core Probe (ID 1)</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: SensorTypeDescriptor -->
      <command:returnValue>
        <dev:type>
          <maml:name>PrtgAPI.SensorTypeDescriptor</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-SensorType</dev:code>
        <dev:remarks>
          <maml:para>List all sensor types supported by PRTG.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-SensorType *exchange*</dev:code>
        <dev:remarks>
          <maml:para>List all sensor types that contain "exchange" in the Id, Name or Description.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | Get-SensorType</dev:code>
        <dev:remarks>
          <maml:para>List all sensor types supported by the Device with Id 1001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Sensors#sensor-types-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-SensorTarget</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorParameters</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Invoke-SortPrtgObject -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Invoke-SortPrtgObject</command:name>
      <command:verb>Invoke</command:verb>
      <command:noun>SortPrtgObject</command:noun>
      <maml:description>
        <maml:para>Sorts the children of a device, group or probe alphabetically.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Sort-PrtgObject cmdlet sorts the children of a specified object alphabetically. In addition to normal devices, groups and probes, this cmdlet can also be used against the Root group (ID: 0), allowing you to sort probes alphabetically as well.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Invoke-SortPrtgObject</maml:name>
        <!-- Parameter: Object -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>The device, group or probe whose children should be sorted.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Invoke-SortPrtgObject</maml:name>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the object whose children should be sorted.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Object -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>The device, group or probe whose children should be sorted.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DeviceOrGroupOrProbe</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the object whose children should be sorted.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.DeviceOrGroupOrProbe</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device, group or probe whose children should be sorted.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Group -Id 0 | Sort-PrtgObject</dev:code>
        <dev:remarks>
          <maml:para>Sort all probes under the root PRTG Group.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Sort-PrtgObject -Id 0</dev:code>
        <dev:remarks>
          <maml:para>Sorts all probes under the root PRTG Group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Object-Organization#sorting-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Group</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Probe</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-SystemInfo -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-SystemInfo</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SystemInfo</command:noun>
      <maml:description>
        <maml:para>Retrieves system information for a PRTG Device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-SystemInfo cmdlet retrieves system information for a specified device. By default, PRTG will probe devices once every 24 hours for enhanced system information, including hardware, software, process, service and user info. Not all devices may support retrieving system information or may only support specific system information types.</maml:para>
      <maml:para>Specific system information types can be retrieved by specifying one or more values to the -Type parameter. If more than one type is specified, results will be bundled up in a PSObject containing a property for each information type. If no types are specified, Get-SystemInfo will automatically retrieve information for all known information types.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Get-SystemInfo</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>One or more system information types to retrieve. If no types are specified, all System Information types will be retrieved.</maml:para>
            <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
          </maml:description>
          <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>Device to retrieve system information for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Get-SystemInfo</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>One or more system information types to retrieve. If no types are specified, all System Information types will be retrieved.</maml:para>
            <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
          </maml:description>
          <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>ID of the device to retrieve system information for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>Device to retrieve system information for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>ID of the device to retrieve system information for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>One or more system information types to retrieve. If no types are specified, all System Information types will be retrieved.</maml:para>
          <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
        </maml:description>
        <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Device to retrieve system information for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-SystemInfo -Id 1001</dev:code>
        <dev:remarks>
          <maml:para>Retrieve system information from the device with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device -Id 1001 | Get-SystemInfo</dev:code>
        <dev:remarks>
          <maml:para>Retrieve system information from a piped in device.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>C:\&gt; Get-SystemInfo -ID 1001 hardware,software</dev:code>
        <dev:remarks>
          <maml:para>Retrieve hardware and software information for the device with ID 1001.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Devices#system-information-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Device</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Refresh-SystemInfo</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Update-SystemInfo -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Update-SystemInfo</command:name>
      <command:verb>Update</command:verb>
      <command:noun>SystemInfo</command:noun>
      <maml:description>
        <maml:para>Refreshes system information for a PRTG Device.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Refresh-SystemInfo cmdlet refreshes system information for a specified devoce. By default, PRTG theoretically probes devices for all system information types once every 24 hours. If you find this is not happening however, or otherwise wish to refresh sooner, this can be forced with the Refresh-SystemInfo cmdlet.</maml:para>
      <maml:para>The types of system information that should be refreshed can be specified with the -Type parameter. If no types are specified, Refresh-SystemInfo will request that all information types be updated.</maml:para>
      <maml:para>PRTG is capable of performing up to 24 simultaneous system information scans. Any additional scans that are requested will be queued until a scan slot becomes available.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>Update-SystemInfo</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The types of system information to refresh. If no types are specified, all types will be refreshed.</maml:para>
            <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
          </maml:description>
          <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Device -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Device</maml:name>
          <maml:description>
            <maml:para>The device to refresh system information for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">Device</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.Device</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>Update-SystemInfo</maml:name>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The types of system information to refresh. If no types are specified, all types will be refreshed.</maml:para>
            <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
          </maml:description>
          <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The ID of the device to refresh system information for.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: PassThru -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Device -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Device</maml:name>
        <maml:description>
          <maml:para>The device to refresh system information for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Device</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The ID of the device to refresh system information for.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The types of system information to refresh. If no types are specified, all types will be refreshed.</maml:para>
          <maml:para>Possible values: System, Software, Hardware, Users, Processes, Services</maml:para>
        </maml:description>
        <command:parameterValue required="true">SystemInfoType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.SystemInfoType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Software</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Hardware</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Users</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Processes</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Services</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: PassThru -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies whether to return the original IObject that was passed to this cmdlet, allowing the object to be further piped into additional cmdlets.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.Device</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The device to refresh system information for.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Device dc* | Refresh-SystemInfo</dev:code>
        <dev:remarks>
          <maml:para>Refresh all system information for all devices whose name starts with "dc"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; Refresh-SystemInfo -Id 1001 -Type System,Users</dev:code>
        <dev:remarks>
          <maml:para>Refresh the System and Users information types for the device with ID 1001</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Devices#system-information-1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-SystemInfo</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-TriggerNode -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-TriggerNode</command:name>
      <command:verb>New</command:verb>
      <command:noun>TriggerNode</command:noun>
      <maml:description>
        <maml:para>Creates a new TriggerNode for modelling a PRTG Tree.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-TriggerNode cmdlet creates a new TriggerNode object for modelling a PRTG Tree. Each TriggerNode object encapsulates a single NotificationTrigger object.</maml:para>
      <maml:para>If an existing NotificationTrigger object retrieved from the Get-NotificationTrigger cmdlet is not specified or piped to the -Value parameter, one or more of -OnNotificationAction, or -SubId or Type parameters must be specified to identify the object to encapsulate. If multiple values are returned as a result of these parameters, a unique TriggerNode object will be created for each item.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: DefaultSet -->
      <command:syntaxItem>
        <maml:name>New-TriggerNode</maml:name>
        <!-- Parameter: Value -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for the node.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.NotificationTrigger</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ManualSet -->
      <command:syntaxItem>
        <maml:name>New-TriggerNode</maml:name>
        <!-- Parameter: OnNotificationAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>OnNotificationAction</maml:name>
          <maml:description>
            <maml:para>The OnNotificationAction to filter by. If this value is a string, can include wildcards.</maml:para>
          </maml:description>
          <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ObjectId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ObjectId</maml:name>
          <maml:description>
            <maml:para>The ID of the object containing the notification triggers to encapsulate.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SubId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SubId</maml:name>
          <maml:description>
            <maml:para>The Sub IDs of the notification triggers to encapsulate.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The type of notification triggers to encapsulate.</maml:para>
            <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
          </maml:description>
          <command:parameterValue required="true">TriggerType[]</command:parameterValue>
          <dev:type>
            <maml:name>PrtgAPI.TriggerType[]</maml:name>
            <maml:uri />
          </dev:type>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Value -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NotificationTrigger</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OnNotificationAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>OnNotificationAction</maml:name>
        <maml:description>
          <maml:para>The OnNotificationAction to filter by. If this value is a string, can include wildcards.</maml:para>
        </maml:description>
        <command:parameterValue required="true">NameOrObject`1[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.PowerShell.NameOrObject`1[[PrtgAPI.NotificationAction, PrtgAPI, Version=0.9.0.0, Culture=neutral, PublicKeyToken=null]][]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Wraps an object that may be identified by its name (possibly a wildcard expression) or its PrtgObject.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ObjectId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ObjectId</maml:name>
        <maml:description>
          <maml:para>The ID of the object containing the notification triggers to encapsulate.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: SubId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SubId</maml:name>
        <maml:description>
          <maml:para>The Sub IDs of the notification triggers to encapsulate.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The type of notification triggers to encapsulate.</maml:para>
          <maml:para>Possible values: State, Speed, Volume, Threshold, Change</maml:para>
        </maml:description>
        <command:parameterValue required="true">TriggerType[]</command:parameterValue>
        <dev:type>
          <maml:name>PrtgAPI.TriggerType[]</maml:name>
          <maml:uri />
        </dev:type>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">State</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Speed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Volume</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Threshold</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Change</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PrtgAPI.NotificationTrigger</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The value to use for the node.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>C:\&gt; Get-Trigger -ObjectId 1001 | New-TriggerNode</dev:code>
        <dev:remarks>
          <maml:para>Create trigger nodes for all notification triggers under the object with ID 1001.</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>C:\&gt; New-TriggerNode -ObjectId 1001 *ticket* -Type State</dev:code>
        <dev:remarks>
          <maml:para>Create trigger nodes for all State notification triggers under the object with ID 1001 that have an OnNotificationAction whose name contains "ticket".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>https://github.com/lordmilko/PrtgAPI/wiki/Tree-Creation</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NotificationTrigger</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-SensorNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-DeviceNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GroupNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-ProbeNode</maml:linkText>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PropertyNode</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>